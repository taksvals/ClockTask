["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer');\ncljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\ncljs.analyzer._STAR_cljs_file_STAR_ = null;\ncljs.analyzer._STAR_checked_arrays_STAR_ = false;\ncljs.analyzer._STAR_check_alias_dupes_STAR_ = true;\ncljs.analyzer._STAR_cljs_static_fns_STAR_ = false;\ncljs.analyzer._STAR_fn_invoke_direct_STAR_ = false;\ncljs.analyzer._STAR_cljs_macros_path_STAR_ = \"/cljs/core\";\ncljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558),cljs.core.PersistentVector.EMPTY], null));\ncljs.analyzer._STAR_analyze_deps_STAR_ = true;\ncljs.analyzer._STAR_load_tests_STAR_ = true;\ncljs.analyzer._STAR_load_macros_STAR_ = true;\ncljs.analyzer._STAR_reload_macros_STAR_ = false;\ncljs.analyzer._STAR_macro_infer_STAR_ = true;\ncljs.analyzer._STAR_passes_STAR_ = null;\ncljs.analyzer._STAR_file_defs_STAR_ = null;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = false;\n/**\n * The namespace of the constants table as a symbol.\n */\ncljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null,\"cljs.core.constants\",\"cljs.core.constants\",2057417066,null);\ncljs.analyzer._STAR_verbose_STAR_ = false;\ncljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217)],[true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\ncljs.analyzer.unchecked_arrays_QMARK_ = (function cljs$analyzer$unchecked_arrays_QMARK_(){\nreturn cljs.core._STAR_unchecked_arrays_STAR_;\n});\ncljs.analyzer.compiler_options = (function cljs$analyzer$compiler_options(){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\n});\ncljs.analyzer.get_externs = (function cljs$analyzer$get_externs(){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n});\n/**\n * Returns false-y, :warn, or :error based on configuration and the\n * current value of *unchecked-arrays*.\n */\ncljs.analyzer.checked_arrays = (function cljs$analyzer$checked_arrays(){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"advanced\",\"advanced\",-451287892),new cljs.core.Keyword(null,\"optimizations\",\"optimizations\",-2047476854).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.compiler_options()))) && ((!(cljs.core._STAR_unchecked_arrays_STAR_))))){\nreturn cljs.analyzer._STAR_checked_arrays_STAR_;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, [\"typeof\",null,\"float\",null,\"implements\",null,\"else\",null,\"boolean\",null,\"abstract\",null,\"int\",null,\"static\",null,\"package\",null,\"this\",null,\"await\",null,\"yield\",null,\"interface\",null,\"void\",null,\"delete\",null,\"class\",null,\"export\",null,\"var\",null,\"try\",null,\"long\",null,\"null\",null,\"return\",null,\"methods\",null,\"native\",null,\"private\",null,\"new\",null,\"for\",null,\"catch\",null,\"extends\",null,\"short\",null,\"protected\",null,\"throws\",null,\"synchronized\",null,\"transient\",null,\"super\",null,\"if\",null,\"let\",null,\"import\",null,\"char\",null,\"switch\",null,\"const\",null,\"case\",null,\"break\",null,\"volatile\",null,\"function\",null,\"continue\",null,\"final\",null,\"do\",null,\"double\",null,\"while\",null,\"public\",null,\"arguments\",null,\"debugger\",null,\"with\",null,\"instanceof\",null,\"default\",null,\"throw\",null,\"goto\",null,\"finally\",null,\"byte\",null,\"constructor\",null,\"in\",null,\"enum\",null], null), null);\ncljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"default\",null], null), null);\ncljs.analyzer.SENTINEL = ({});\ncljs.analyzer.gets = (function cljs$analyzer$gets(var_args){\nvar G__46453 = arguments.length;\nswitch (G__46453) {\ncase 3:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = (function (m,k0,k1){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k1);\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = (function (m,k0,k1,k2){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2,k2);\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = (function (m,k0,k1,k2,k3){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,k2,cljs.analyzer.SENTINEL);\nif((m__$3 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3,k3);\n}\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$lang$maxFixedArity = 5);\n\ncljs.analyzer.munge_path = (function cljs$analyzer$munge_path(ss){\nreturn cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ss));\n});\n/**\n * Given a namespace as a symbol return the relative path. May optionally\n *   provide the file extension, defaults to :cljs.\n */\ncljs.analyzer.ns__GT_relpath = (function cljs$analyzer$ns__GT_relpath(var_args){\nvar G__46455 = arguments.length;\nswitch (G__46455) {\ncase 1:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629));\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = (function (ns,ext){\nreturn [clojure.string.replace(cljs.analyzer.munge_path(ns),\".\",\"/\"),\".\",cljs.core.name(ext)].join('');\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.topo_sort = (function cljs$analyzer$topo_sort(var_args){\nvar G__46457 = arguments.length;\nswitch (G__46457) {\ncase 2:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = (function (x,get_deps){\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x,(0),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map()),cljs.core.memoize(get_deps));\n}));\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = (function (x,depth,state,memo_get_deps){\nvar deps = (memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\nvar seq__46458_47313 = cljs.core.seq(deps);\nvar chunk__46459_47314 = null;\nvar count__46460_47315 = (0);\nvar i__46461_47316 = (0);\nwhile(true){\nif((i__46461_47316 < count__46460_47315)){\nvar dep_47317 = chunk__46459_47314.cljs$core$IIndexed$_nth$arity$2(null,i__46461_47316);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_47317,(depth + (1)),state,memo_get_deps);\n\n\nvar G__47318 = seq__46458_47313;\nvar G__47319 = chunk__46459_47314;\nvar G__47320 = count__46460_47315;\nvar G__47321 = (i__46461_47316 + (1));\nseq__46458_47313 = G__47318;\nchunk__46459_47314 = G__47319;\ncount__46460_47315 = G__47320;\ni__46461_47316 = G__47321;\ncontinue;\n} else {\nvar temp__5753__auto___47322 = cljs.core.seq(seq__46458_47313);\nif(temp__5753__auto___47322){\nvar seq__46458_47323__$1 = temp__5753__auto___47322;\nif(cljs.core.chunked_seq_QMARK_(seq__46458_47323__$1)){\nvar c__4649__auto___47324 = cljs.core.chunk_first(seq__46458_47323__$1);\nvar G__47325 = cljs.core.chunk_rest(seq__46458_47323__$1);\nvar G__47326 = c__4649__auto___47324;\nvar G__47327 = cljs.core.count(c__4649__auto___47324);\nvar G__47328 = (0);\nseq__46458_47313 = G__47325;\nchunk__46459_47314 = G__47326;\ncount__46460_47315 = G__47327;\ni__46461_47316 = G__47328;\ncontinue;\n} else {\nvar dep_47329 = cljs.core.first(seq__46458_47323__$1);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_47329,(depth + (1)),state,memo_get_deps);\n\n\nvar G__47330 = cljs.core.next(seq__46458_47323__$1);\nvar G__47331 = null;\nvar G__47332 = (0);\nvar G__47333 = (0);\nseq__46458_47313 = G__47330;\nchunk__46459_47314 = G__47331;\ncount__46460_47315 = G__47332;\ni__46461_47316 = G__47333;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__46462_47334 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(state),cljs.core._LT_,depth));\nvar chunk__46463_47335 = null;\nvar count__46464_47336 = (0);\nvar i__46465_47337 = (0);\nwhile(true){\nif((i__46465_47337 < count__46464_47336)){\nvar vec__46472_47338 = chunk__46463_47335.cljs$core$IIndexed$_nth$arity$2(null,i__46465_47337);\nvar _LT_depth_47339 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46472_47338,(0),null);\nvar __47340 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46472_47338,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_47339], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__47341 = seq__46462_47334;\nvar G__47342 = chunk__46463_47335;\nvar G__47343 = count__46464_47336;\nvar G__47344 = (i__46465_47337 + (1));\nseq__46462_47334 = G__47341;\nchunk__46463_47335 = G__47342;\ncount__46464_47336 = G__47343;\ni__46465_47337 = G__47344;\ncontinue;\n} else {\nvar temp__5753__auto___47345 = cljs.core.seq(seq__46462_47334);\nif(temp__5753__auto___47345){\nvar seq__46462_47346__$1 = temp__5753__auto___47345;\nif(cljs.core.chunked_seq_QMARK_(seq__46462_47346__$1)){\nvar c__4649__auto___47347 = cljs.core.chunk_first(seq__46462_47346__$1);\nvar G__47348 = cljs.core.chunk_rest(seq__46462_47346__$1);\nvar G__47349 = c__4649__auto___47347;\nvar G__47350 = cljs.core.count(c__4649__auto___47347);\nvar G__47351 = (0);\nseq__46462_47334 = G__47348;\nchunk__46463_47335 = G__47349;\ncount__46464_47336 = G__47350;\ni__46465_47337 = G__47351;\ncontinue;\n} else {\nvar vec__46475_47352 = cljs.core.first(seq__46462_47346__$1);\nvar _LT_depth_47353 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46475_47352,(0),null);\nvar __47354 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46475_47352,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_47353], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__47355 = cljs.core.next(seq__46462_47346__$1);\nvar G__47356 = null;\nvar G__47357 = (0);\nvar G__47358 = (0);\nseq__46462_47334 = G__47355;\nchunk__46463_47335 = G__47356;\ncount__46464_47336 = G__47357;\ni__46465_47337 = G__47358;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,(0))){\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.vals(cljs.core.deref(state))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4);\n\n\ncljs.analyzer.ast_QMARK_ = (function cljs$analyzer$ast_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && (cljs.core.contains_QMARK_(x,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955))));\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.error_message !== 'undefined')){\n} else {\ncljs.analyzer.error_message = (function (){var method_table__4712__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4713__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4714__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4715__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4716__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__46478 = cljs.core.get_global_hierarchy;\nreturn (fexpr__46478.cljs$core$IFn$_invoke$arity$0 ? fexpr__46478.cljs$core$IFn$_invoke$arity$0() : fexpr__46478.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"error-message\"),(function() { \nvar G__47359__delegate = function (warning_type,_){\nreturn warning_type;\n};\nvar G__47359 = function (warning_type,var_args){\nvar _ = null;\nif (arguments.length > 1) {\nvar G__47360__i = 0, G__47360__a = new Array(arguments.length -  1);\nwhile (G__47360__i < G__47360__a.length) {G__47360__a[G__47360__i] = arguments[G__47360__i + 1]; ++G__47360__i;}\n  _ = new cljs.core.IndexedSeq(G__47360__a,0,null);\n} \nreturn G__47359__delegate.call(this,warning_type,_);};\nG__47359.cljs$lang$maxFixedArity = 1;\nG__47359.cljs$lang$applyTo = (function (arglist__47361){\nvar warning_type = cljs.core.first(arglist__47361);\nvar _ = cljs.core.rest(arglist__47361);\nreturn G__47359__delegate(warning_type,_);\n});\nG__47359.cljs$core$IFn$_invoke$arity$variadic = G__47359__delegate;\nreturn G__47359;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4716__auto__,method_table__4712__auto__,prefer_table__4713__auto__,method_cache__4714__auto__,cached_hierarchy__4715__auto__));\n})();\n}\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),(function (warning_type,info){\nreturn [\"Preamble resource file not found: \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"missing\",\"missing\",362507769).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),(function (warning_type,info){\nreturn [\"Required namespace not provided for \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),(function (warning_type,info){\nreturn [(cljs.core.truth_(new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205).cljs$core$IFn$_invoke$arity$1(info))?\"Can't take value of macro \":\"Use of undeclared Var \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),(function (warning_type,info){\nreturn [\"var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" is not public\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),(function (warning_type,p__46479){\nvar map__46480 = p__46479;\nvar map__46480__$1 = cljs.core.__destructure_map(map__46480);\nvar info = map__46480__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46480__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46480__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629)),\", \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583)),\", or JavaScript source providing \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(js_provide),\"\\\"\",((clojure.string.includes_QMARK_(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(ns_sym),\"_\"))?\" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\":null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-macros-ns\",\"undeclared-macros-ns\",-438029430),(function (warning_type,p__46481){\nvar map__46482 = p__46481;\nvar map__46482__$1 = cljs.core.__destructure_map(map__46482);\nvar info = map__46482__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46482__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46482__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such macros namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"clj\",\"clj\",-660495428)),\" or \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" not declared ^:dynamic\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" already refers to: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" being replaced by: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info))))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(info)),\" is being replaced\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" no longer fn, references are stale\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),(function (warning_type,info){\nreturn [\"Wrong number of args (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519).cljs$core$IFn$_invoke$arity$1(info)),\") passed to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info);\n}\n})())].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" declared arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(info)),\" mismatch defined arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),(function (warning_type,info){\nreturn [\"Invalid :refer, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"lib\",\"lib\",191808726).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" does not exist\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),(function (warning_type,info){\nreturn [\"Can't resolve protocol symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),(function (warning_type,info){\nreturn [\"Symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is not a protocol\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),(function (warning_type,info){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"no-such-method\",\"no-such-method\",1087422840).cljs$core$IFn$_invoke$arity$1(info))){\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare method called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n} else {\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare arity \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"invalid-arity\",\"invalid-arity\",1335461949).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),(function (warning_type,info){\nreturn [\"Duplicated methods in protocol implementation \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implemented multiple times\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" declares method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),(function (warning_type,info){\nvar overwritten_protocol = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"existing\",\"existing\",-340796094).cljs$core$IFn$_invoke$arity$1(info));\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is overwriting \",(cljs.core.truth_(overwritten_protocol)?\"method\":\"function\"),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),(cljs.core.truth_(overwritten_protocol)?[\" of protocol \",cljs.core.name(overwritten_protocol)].join(''):null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implements method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),(function (warning_type,info){\nreturn [\"Ignoring target object \\\"\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(info)], 0)),\"\\\" passed in recur to protocol method head\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have more than 1 variadic overload\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have fixed arity function with more params than variadic function\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have 2 overloads with same arity\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),(function (warning_type,info){\nreturn [\"Extending an existing JavaScript type - use a different symbol name \",\"instead of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"current-symbol\",\"current-symbol\",-932381075).cljs$core$IFn$_invoke$arity$1(info)),\" e.g \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suggested-symbol\",\"suggested-symbol\",-1329631875).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(info)),\", all arguments must be numbers, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"types\",\"types\",590030639).cljs$core$IFn$_invoke$arity$1(info)),\" instead\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),(function (warning_type,p__46483){\nvar map__46484 = p__46483;\nvar map__46484__$1 = cljs.core.__destructure_map(map__46484);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46484__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar types = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46484__$1,new cljs.core.Keyword(null,\"types\",\"types\",590030639));\nvar G__46485 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),G__46485)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),G__46485)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),G__46485)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),G__46485)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__46485)].join('')));\n\n}\n}\n}\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),(function (warning_type,info){\nreturn [\"Cannot invoke type constructor \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" as function \"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" is a single segment namespace\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),(function (warning_type,p__46487){\nvar map__46488 = p__46487;\nvar map__46488__$1 = cljs.core.__destructure_map(map__46488);\nvar info = map__46488__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46488__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46486_SHARP_){\nif(cljs.core.truth_((cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__46486_SHARP_) : cljs.analyzer.js_reserved.call(null,p1__46486_SHARP_)))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__46486_SHARP_),\"$\"].join('');\n} else {\nreturn p1__46486_SHARP_;\n}\n}),clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name),/\\./))));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" contains a reserved JavaScript keyword,\",\" the corresponding Google Closure namespace will be munged to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),(function (warning_type,p__46489){\nvar map__46490 = p__46489;\nvar map__46490__$1 = cljs.core.__destructure_map(map__46490);\nvar info = map__46490__$1;\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46490__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46490__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\" clashes with var \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),(function (warning_type,p__46491){\nvar map__46492 = p__46491;\nvar map__46492__$1 = cljs.core.__destructure_map(map__46492);\nvar info = map__46492__$1;\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46492__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" not declared dynamic and thus is not dynamically rebindable, but its name \",\"suggests otherwise. Please either indicate ^:dynamic \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" or change the name\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),(function (warning_type,p__46493){\nvar map__46494 = p__46493;\nvar map__46494__$1 = cljs.core.__destructure_map(map__46494);\nvar info = map__46494__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46494__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46494__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nreturn [\"Bad extend-type method shape for protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol),\" method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method),\", method arities must be grouped together\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),(function (warning_type,p__46495){\nvar map__46496 = p__46495;\nvar map__46496__$1 = cljs.core.__destructure_map(map__46496);\nvar info = map__46496__$1;\nvar module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46496__$1,new cljs.core.Keyword(null,\"module-type\",\"module-type\",1392760304));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46496__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported JavaScript module type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(module_type),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),(function (warning_type,p__46497){\nvar map__46498 = p__46497;\nvar map__46498__$1 = cljs.core.__destructure_map(map__46498);\nvar preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46498__$1,new cljs.core.Keyword(null,\"preprocess\",\"preprocess\",1208285012));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46498__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported preprocess value \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(preprocess),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),(function (warning_type,p__46499){\nvar map__46500 = p__46499;\nvar map__46500__$1 = cljs.core.__destructure_map(map__46500);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46500__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" is shadowed by a local\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),(function (warning_type,p__46501){\nvar map__46502 = p__46501;\nvar map__46502__$1 = cljs.core.__destructure_map(map__46502);\nvar warn_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46502__$1,new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46502__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46502__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar property = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46502__$1,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232));\nvar G__46503 = warn_type;\nvar G__46503__$1 = (((G__46503 instanceof cljs.core.Keyword))?G__46503.fqn:null);\nswitch (G__46503__$1) {\ncase \"target\":\nreturn [\"Cannot infer target type in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form),\"\"].join('');\n\nbreak;\ncase \"property\":\nreturn [\"Cannot resolve property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" for inferred type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type),\" in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ncase \"object\":\nreturn [\"Adding extern to Object for property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" due to \",\"ambiguous expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__46503__$1)].join('')));\n\n}\n}));\ncljs.analyzer.default_warning_handler = (function cljs$analyzer$default_warning_handler(warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nvar temp__5753__auto__ = cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type,extra);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar s = temp__5753__auto__;\nvar _STAR_print_fn_STAR__orig_val__46504 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_fn_STAR__temp_val__46505 = cljs.core._STAR_print_err_fn_STAR_;\n(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__46505);\n\ntry{return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__46506 = env;\nvar G__46507 = [\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\nreturn (cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__46506,G__46507) : cljs.analyzer.message.call(null,G__46506,G__46507));\n})()], 0));\n}finally {(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__46504);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);\ncljs.analyzer.repeat_char = (function cljs$analyzer$repeat_char(c,n){\nvar ret = c;\nvar n__$1 = n;\nwhile(true){\nif((n__$1 > (0))){\nvar G__47373 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret),cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');\nvar G__47374 = (n__$1 - (1));\nret = G__47373;\nn__$1 = G__47374;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n});\ncljs.analyzer.hex_format = (function cljs$analyzer$hex_format(s,pad){\nvar hex = s.charCodeAt((0)).toString((16));\nvar len = hex.length;\nvar hex__$1 = (((len < pad))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char(\"0\",(pad - len))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex)].join(''):hex);\nreturn [\"_u\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex__$1),\"_\"].join('');\n});\ncljs.analyzer.gen_constant_id = (function cljs$analyzer$gen_constant_id(value){\nvar prefix = (((value instanceof cljs.core.Keyword))?\"cst$kw$\":(((value instanceof cljs.core.Symbol))?\"cst$sym$\":(function(){throw (new Error([\"constant type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(value)),\" not supported\"].join('')))})()\n));\nvar name = (((value instanceof cljs.core.Keyword))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),(1)):cljs.core.str.cljs$core$IFn$_invoke$arity$1(value));\nvar name__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",name))?\"_DOT_\":clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name,\"-\",\"_DASH_\")),\".\",\"$\"),/[^a-z0-9$_]/i,(function (p1__46508_SHARP_){\nreturn cljs.analyzer.hex_format(p1__46508_SHARP_,(4));\n})));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([prefix,name__$1].join(''));\n});\ncljs.analyzer.register_constant_BANG_ = (function cljs$analyzer$register_constant_BANG_(var_args){\nvar G__46510 = arguments.length;\nswitch (G__46510) {\ncase 1:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (val){\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null,val);\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (env,val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (cenv){\nvar G__46511 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889)], null),(function (table){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table,val))){\nreturn table;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table,val,cljs.analyzer.gen_constant_id(val));\n}\n}));\nif(cljs.core.truth_(env)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__46511,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(\"cljs.analyzer\",\"constants\",\"cljs.analyzer/constants\",1697083770)], null),(function (p__46512){\nvar map__46513 = p__46512;\nvar map__46513__$1 = cljs.core.__destructure_map(map__46513);\nvar constants = map__46513__$1;\nvar seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__46513__$1,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.PersistentHashSet.EMPTY);\nvar order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__46513__$1,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.PersistentVector.EMPTY);\nvar G__46514 = constants;\nif((!(cljs.core.contains_QMARK_(seen,val)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__46514,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen,val),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order,val)], 0));\n} else {\nreturn G__46514;\n}\n}));\n} else {\nreturn G__46511;\n}\n}));\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null);\ncljs.analyzer.namespaces = (function (){\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.t_cljs$analyzer46515 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.analyzer.t_cljs$analyzer46515 = (function (meta46516){\nthis.meta46516 = meta46516;\nthis.cljs$lang$protocol_mask$partition0$ = 425984;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(cljs.analyzer.t_cljs$analyzer46515.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_46517,meta46516__$1){\nvar self__ = this;\nvar _46517__$1 = this;\nreturn (new cljs.analyzer.t_cljs$analyzer46515(meta46516__$1));\n}));\n\n(cljs.analyzer.t_cljs$analyzer46515.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_46517){\nvar self__ = this;\nvar _46517__$1 = this;\nreturn self__.meta46516;\n}));\n\n(cljs.analyzer.t_cljs$analyzer46515.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n} else {\nreturn cljs.analyzer.default_namespaces;\n}\n}));\n\n(cljs.analyzer.t_cljs$analyzer46515.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"meta46516\",\"meta46516\",2114421656,null)], null);\n}));\n\n(cljs.analyzer.t_cljs$analyzer46515.cljs$lang$type = true);\n\n(cljs.analyzer.t_cljs$analyzer46515.cljs$lang$ctorStr = \"cljs.analyzer/t_cljs$analyzer46515\");\n\n(cljs.analyzer.t_cljs$analyzer46515.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\"cljs.analyzer/t_cljs$analyzer46515\");\n}));\n\n/**\n * Positional factory function for cljs.analyzer/t_cljs$analyzer46515.\n */\ncljs.analyzer.__GT_t_cljs$analyzer46515 = (function cljs$analyzer$__GT_t_cljs$analyzer46515(meta46516){\nreturn (new cljs.analyzer.t_cljs$analyzer46515(meta46516));\n});\n\n}\n\nreturn (new cljs.analyzer.t_cljs$analyzer46515(cljs.core.PersistentArrayMap.EMPTY));\n})()\n;\ncljs.analyzer.get_namespace = (function cljs$analyzer$get_namespace(var_args){\nvar G__46519 = arguments.length;\nswitch (G__46519) {\ncase 1:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,key);\n}));\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = (function (cenv,key){\nvar temp__5755__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cenv),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),key], null));\nif((temp__5755__auto__ == null)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),key)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null);\n} else {\nreturn null;\n}\n} else {\nvar ns = temp__5755__auto__;\nreturn ns;\n}\n}));\n\n(cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.get_line = (function cljs$analyzer$get_line(x,env){\nvar or__4223__auto__ = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\ncljs.analyzer.get_col = (function cljs$analyzer$get_col(x,env){\nvar or__4223__auto__ = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\n/**\n * Given a Clojure namespace intern all macros into the ambient ClojureScript\n * analysis environment.\n */\ncljs.analyzer.intern_macros = (function cljs$analyzer$intern_macros(var_args){\nvar G__46521 = arguments.length;\nswitch (G__46521) {\ncase 1:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns,false);\n}));\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = (function (ns,reload){\nif(cljs.core.truth_((function (){var or__4223__auto__ = (cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)) == null);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nreturn reload;\n}\n})())){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__46522){\nvar vec__46523 = p__46522;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46523,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46523,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(function (){var vm = cljs.core.meta(v);\nvar ns__$1 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(vm).getName();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)),new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404),true], 0));\n})()], null);\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__46526){\nvar vec__46527 = p__46526;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46527,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46527,(1),null);\nreturn v.isMacro();\n}),cljs.core.ns_interns_STAR_(ns)))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2);\n\n/**\n * Construct an empty analysis environment. Required to analyze forms.\n */\ncljs.analyzer.empty_env = (function cljs$analyzer$empty_env(){\nvar val__46392__auto__ = cljs.env._STAR_compiler_STAR_;\nif((val__46392__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0());\n} else {\n}\n\ntry{return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46530_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__46530_SHARP_,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),p1__46530_SHARP_,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null)],null));\n}),cljs.core.list(new cljs.core.Symbol(null,\"alert\",\"alert\",1068580947,null),new cljs.core.Symbol(null,\"window\",\"window\",-1929916235,null),new cljs.core.Symbol(null,\"document\",\"document\",311342840,null),new cljs.core.Symbol(null,\"console\",\"console\",-1426363712,null),new cljs.core.Symbol(null,\"escape\",\"escape\",648929575,null),new cljs.core.Symbol(null,\"unescape\",\"unescape\",-2037730561,null),new cljs.core.Symbol(null,\"screen\",\"screen\",-664376021,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"navigator\",\"navigator\",-604431588,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"global\",\"global\",1734126574,null),new cljs.core.Symbol(null,\"process\",\"process\",-1011242831,null),new cljs.core.Symbol(null,\"require\",\"require\",1172530194,null),new cljs.core.Symbol(null,\"module\",\"module\",-1229817578,null),new cljs.core.Symbol(null,\"exports\",\"exports\",895523255,null))))], null);\n}finally {if((val__46392__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = null);\n} else {\n}\n}});\ncljs.analyzer.source_info__GT_error_data = (function cljs$analyzer$source_info__GT_error_data(p__46531){\nvar map__46532 = p__46531;\nvar map__46532__$1 = cljs.core.__destructure_map(map__46532);\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46532__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46532__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46532__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"clojure.error\",\"source\",\"clojure.error/source\",-2011936397),file,new cljs.core.Keyword(\"clojure.error\",\"line\",\"clojure.error/line\",-1816287471),line,new cljs.core.Keyword(\"clojure.error\",\"column\",\"clojure.error/column\",304721553),column], null);\n});\ncljs.analyzer.source_info = (function cljs$analyzer$source_info(var_args){\nvar G__46534 = arguments.length;\nswitch (G__46534) {\ncase 1:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = (function (env){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(null,env);\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = (function (name,env){\nvar G__46535 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)))?\"cljs/core.cljs\":cljs.analyzer._STAR_cljs_file_STAR_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(name,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(name,env)], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__46535,cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912)], null))], 0));\n} else {\nreturn G__46535;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.message = (function cljs$analyzer$message(env,s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))?[\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?[\" in file \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):null))].join('');\n});\ncljs.analyzer.warning = (function cljs$analyzer$warning(warning_type,env,extra){\nvar seq__46536 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);\nvar chunk__46537 = null;\nvar count__46538 = (0);\nvar i__46539 = (0);\nwhile(true){\nif((i__46539 < count__46538)){\nvar handler = chunk__46537.cljs$core$IIndexed$_nth$arity$2(null,i__46539);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__47438 = seq__46536;\nvar G__47439 = chunk__46537;\nvar G__47440 = count__46538;\nvar G__47441 = (i__46539 + (1));\nseq__46536 = G__47438;\nchunk__46537 = G__47439;\ncount__46538 = G__47440;\ni__46539 = G__47441;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46536);\nif(temp__5753__auto__){\nvar seq__46536__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46536__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__46536__$1);\nvar G__47442 = cljs.core.chunk_rest(seq__46536__$1);\nvar G__47443 = c__4649__auto__;\nvar G__47444 = cljs.core.count(c__4649__auto__);\nvar G__47445 = (0);\nseq__46536 = G__47442;\nchunk__46537 = G__47443;\ncount__46538 = G__47444;\ni__46539 = G__47445;\ncontinue;\n} else {\nvar handler = cljs.core.first(seq__46536__$1);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__47446 = cljs.core.next(seq__46536__$1);\nvar G__47447 = null;\nvar G__47448 = (0);\nvar G__47449 = (0);\nseq__46536 = G__47446;\nchunk__46537 = G__47447;\ncount__46538 = G__47448;\ni__46539 = G__47449;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.accumulating_warning_handler = (function cljs$analyzer$accumulating_warning_handler(warn_acc){\nreturn (function (warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(warn_acc,cljs.core.conj,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [warning_type,env,extra], null));\n} else {\nreturn null;\n}\n});\n});\ncljs.analyzer.replay_accumulated_warnings = (function cljs$analyzer$replay_accumulated_warnings(warn_acc){\nreturn cljs.core.run_BANG_((function (p1__46540_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.warning,p1__46540_SHARP_);\n}),cljs.core.deref(warn_acc));\n});\ncljs.analyzer.error_data = (function cljs$analyzer$error_data(var_args){\nvar G__46542 = arguments.length;\nswitch (G__46542) {\ncase 2:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2 = (function (env,phase){\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,phase,null);\n}));\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3 = (function (env,phase,symbol){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.source_info__GT_error_data(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358),phase], null),(cljs.core.truth_(symbol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"symbol\",\"clojure.error/symbol\",1544821994),symbol], null):null)], 0));\n}));\n\n(cljs.analyzer.error_data.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.compile_syntax_error = (function cljs$analyzer$compile_syntax_error(env,msg,symbol){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"compile-syntax-check\",\"compile-syntax-check\",-1865080468),symbol),(new Error(msg)));\n});\ncljs.analyzer.error = (function cljs$analyzer$error(var_args){\nvar G__46544 = arguments.length;\nswitch (G__46544) {\ncase 2:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = (function (env,msg){\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,msg,null);\n}));\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = (function (env,msg,cause){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env,msg),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349)),cause);\n}));\n\n(cljs.analyzer.error.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.analysis_error_QMARK_ = (function cljs$analyzer$analysis_error_QMARK_(ex){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));\n});\ncljs.analyzer.has_error_data_QMARK_ = (function cljs$analyzer$has_error_data_QMARK_(ex){\nreturn cljs.core.contains_QMARK_(cljs.core.ex_data(ex),new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358));\n});\ncljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),\"null\",new cljs.core.Symbol(null,\"goog.string\",\"goog.string\",-2055533048,null),\"null\",new cljs.core.Symbol(null,\"goog\",\"goog\",-70603925,null),\"null\",new cljs.core.Symbol(null,\"goog.object\",\"goog.object\",678593132,null),\"null\",new cljs.core.Symbol(null,\"Math\",\"Math\",2033287572,null),\"null\",new cljs.core.Symbol(null,\"goog.array\",\"goog.array\",-671977860,null),\"null\"], null), null);\ncljs.analyzer.implicit_import_QMARK_ = (function cljs$analyzer$implicit_import_QMARK_(env,prefix,suffix){\nreturn cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses,prefix);\n});\ncljs.analyzer.confirm_var_exist_warning = (function cljs$analyzer$confirm_var_exist_warning(env,prefix,suffix){\nreturn (function (env__$1,prefix__$1,suffix__$1){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),env__$1,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),prefix__$1,new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057),suffix__$1,new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205),(!(((function (){var G__46546 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1));\nvar G__46547 = env__$1;\nreturn (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(G__46546,G__46547) : cljs.analyzer.get_expander.call(null,G__46546,G__46547));\n})() == null)))], null));\n});\n});\n/**\n * If a library name has the form foo$bar, return a vector of the library and\n * the sublibrary property.\n */\ncljs.analyzer.lib_AMPERSAND_sublib = (function cljs$analyzer$lib_AMPERSAND_sublib(lib){\nvar temp__5751__auto__ = cljs.core.re_matches(/(.*)\\$(.*)/,cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib));\nif(cljs.core.truth_(temp__5751__auto__)){\nvar xs = temp__5751__auto__;\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),xs);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n}\n});\n/**\n * Check if a JavaScript namespace has been loaded. JavaScript vars are\n *   not currently checked.\n */\ncljs.analyzer.loaded_js_ns_QMARK_ = (function cljs$analyzer$loaded_js_ns_QMARK_(env,prefix){\nif(cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix))){\nreturn null;\n} else {\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env);\nreturn (((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))) || ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))));\n}\n});\ncljs.analyzer.internal_js_module_exists_QMARK_ = (function cljs$analyzer$internal_js_module_exists_QMARK_(js_module_index,module){\nreturn cljs.core.contains_QMARK_(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p__46548){\nvar vec__46549 = p__46548;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46549,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46549,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(v)], null);\n})),js_module_index),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\n});\ncljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize(cljs.analyzer.internal_js_module_exists_QMARK_);\ncljs.analyzer.js_module_exists_QMARK_ = (function cljs$analyzer$js_module_exists_QMARK_(module){\nreturn cljs.analyzer.js_module_exists_QMARK__STAR_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931)], null)),module);\n});\ncljs.analyzer.node_module_dep_QMARK_ = (function cljs$analyzer$node_module_dep_QMARK_(module){\ntry{return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\")) && (cljs.core.boolean$((function (){var or__4223__auto__ = require.resolve(cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn require.resolve(cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(module)));\n}\n})())));\n}catch (e46552){var _ = e46552;\nreturn false;\n}});\ncljs.analyzer.dep_has_global_exports_QMARK_ = (function cljs$analyzer$dep_has_global_exports_QMARK_(module){\nvar vec__46553 = cljs.analyzer.lib_AMPERSAND_sublib(module);\nvar module__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46553,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46553,(1),null);\nvar global_exports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module__$1),new cljs.core.Keyword(null,\"global-exports\",\"global-exports\",-1644865592)], null));\nreturn ((cljs.core.contains_QMARK_(global_exports,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(module__$1))) || (cljs.core.contains_QMARK_(global_exports,cljs.core.name(module__$1))));\n});\ncljs.analyzer.confirm_var_exists = (function cljs$analyzer$confirm_var_exists(var_args){\nvar G__46557 = arguments.length;\nswitch (G__46557) {\ncase 3:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = (function (env,prefix,suffix){\nvar warn = cljs.analyzer.confirm_var_exist_warning(env,prefix,suffix);\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,warn);\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = (function (env,prefix,suffix,missing_fn){\nvar sufstr = cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix);\nvar suffix_str = (((((!((\"..\" === sufstr)))) && (/\\./.test(sufstr))))?cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr,/\\./)):suffix);\nvar suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);\nif((((!(cljs.analyzer.implicit_import_QMARK_(env,prefix,suffix__$1)))) && ((((!(cljs.analyzer.loaded_js_ns_QMARK_(env,prefix)))) && ((((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),suffix__$1)))))) && ((((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),suffix__$1) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(prefix))))))))))){\nreturn (missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env,prefix,suffix__$1) : missing_fn.call(null,env,prefix,suffix__$1));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.confirm_var_exists_throw = (function cljs$analyzer$confirm_var_exists_throw(){\nreturn (function (env,prefix,suffix){\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,(function (env__$1,prefix__$1,suffix__$1){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,[\"Unable to resolve var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1),\" in this context\"].join(''));\n}));\n});\n});\ncljs.analyzer.resolve_ns_alias = (function cljs$analyzer$resolve_ns_alias(var_args){\nvar G__46559 = arguments.length;\nswitch (G__46559) {\ncase 2:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.resolve_macro_ns_alias = (function cljs$analyzer$resolve_macro_ns_alias(var_args){\nvar G__46561 = arguments.length;\nswitch (G__46561) {\ncase 2:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and ns-sym, a symbol identifying a\n * namespace, confirm that the namespace exists. Warn if not found.\n */\ncljs.analyzer.confirm_ns = (function cljs$analyzer$confirm_ns(env,ns_sym){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns_sym)) && ((((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses,ns_sym) == null)) && ((((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),ns_sym) == null)) && ((((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_sym) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(ns_sym))))))))))){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),ns_sym,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),ns_sym], null));\n} else {\nreturn null;\n}\n});\n/**\n * Is sym visible from core in the current compilation namespace?\n */\ncljs.analyzer.core_name_QMARK_ = (function cljs$analyzer$core_name_QMARK_(env,sym){\nvar and__4221__auto__ = (function (){var or__4223__auto__ = (!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)));\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar temp__5755__auto__ = (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym,env) : cljs.analyzer.get_expander.call(null,sym,env));\nif((temp__5755__auto__ == null)){\nreturn false;\n} else {\nvar mac = temp__5755__auto__;\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(),new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null));\n}\n}\n})();\nif(and__4221__auto__){\nreturn (!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym)));\n} else {\nreturn and__4221__auto__;\n}\n});\n/**\n * Is sym public?\n */\ncljs.analyzer.public_name_QMARK_ = (function cljs$analyzer$public_name_QMARK_(ns,sym){\nvar var_ast = (function (){var or__4223__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(ns),\"$macros\"].join('')),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\n}\n})();\nreturn (((!((var_ast == null)))) && (cljs.core.not((function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(var_ast);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"anonymous\",\"anonymous\",447897231).cljs$core$IFn$_invoke$arity$1(var_ast);\n}\n})())));\n});\ncljs.analyzer.js_tag_QMARK_ = (function cljs$analyzer$js_tag_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.namespace(x))))));\n});\ncljs.analyzer.normalize_js_tag = (function cljs$analyzer$normalize_js_tag(x){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)))){\nreturn cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(x),/\\./))),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null))], null));\n} else {\nreturn x;\n}\n});\n/**\n * Ensures that a type tag is a set.\n */\ncljs.analyzer.__GT_type_set = (function cljs$analyzer$__GT_type_set(t){\nif(cljs.analyzer.impl.cljs_set_QMARK_(t)){\nreturn t;\n} else {\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([t]);\n}\n});\ncljs.analyzer.canonicalize_type = (function cljs$analyzer$canonicalize_type(t){\n\nif((t instanceof cljs.core.Symbol)){\nreturn t;\n} else {\nif(cljs.core.empty_QMARK_(t)){\nreturn null;\n} else {\nif(((1) === cljs.core.count(t))){\nreturn cljs.core.first(t);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null))){\nvar res = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(t,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null));\nif(((1) === cljs.core.count(res))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nreturn res;\n}\n} else {\nreturn t;\n\n}\n}\n}\n}\n}\n});\n/**\n * Produces a union of types.\n */\ncljs.analyzer.add_types = (function cljs$analyzer$add_types(var_args){\nvar G__46566 = arguments.length;\nswitch (G__46566) {\ncase 0:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ = [];\nvar len__4829__auto___47542 = arguments.length;\nvar i__4830__auto___47543 = (0);\nwhile(true){\nif((i__4830__auto___47543 < len__4829__auto___47542)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___47543]));\n\nvar G__47544 = (i__4830__auto___47543 + (1));\ni__4830__auto___47543 = G__47544;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ = (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((2)),(0),null));\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4851__auto__);\n\n}\n});\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1 = (function (t1){\nreturn t1;\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2 = (function (t1,t2){\nif((((t1 == null)) || ((t2 == null)))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.canonicalize_type(clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.__GT_type_set(t1),cljs.analyzer.__GT_type_set(t2)));\n}\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic = (function (t1,t2,ts){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.add_types,cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(t1,t2),ts);\n}));\n\n/** @this {Function} */\n(cljs.analyzer.add_types.cljs$lang$applyTo = (function (seq46563){\nvar G__46564 = cljs.core.first(seq46563);\nvar seq46563__$1 = cljs.core.next(seq46563);\nvar G__46565 = cljs.core.first(seq46563__$1);\nvar seq46563__$2 = cljs.core.next(seq46563__$1);\nvar self__4816__auto__ = this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46564,G__46565,seq46563__$2);\n}));\n\n(cljs.analyzer.add_types.cljs$lang$maxFixedArity = (2));\n\ncljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"Array\",\"Array\",-423496279,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"Boolean\",\"Boolean\",1661141587,null),new cljs.core.Symbol(null,\"symbol\",\"symbol\",601958831,null),new cljs.core.Symbol(null,\"Symbol\",\"Symbol\",716452869,null)], null);\ncljs.analyzer.has_extern_QMARK__STAR_ = (function cljs$analyzer$has_extern_QMARK__STAR_(var_args){\nvar G__46568 = arguments.length;\nswitch (G__46568) {\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar pre__$1 = (function (){var temp__5755__auto__ = cljs.core.find(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null)),cljs.core.first(pre));\nif((temp__5755__auto__ == null)){\nreturn pre;\n} else {\nvar me = temp__5755__auto__;\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.first(me)));\nif((temp__5755__auto____$1 == null)){\nreturn pre;\n} else {\nvar tag = temp__5755__auto____$1;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre));\n}\n}\n})();\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(pre__$1,externs,externs);\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = (function (pre,externs,top){\nwhile(true){\nif(cljs.core.empty_QMARK_(pre)){\nreturn true;\n} else {\nvar x = cljs.core.first(pre);\nvar me = cljs.core.find(externs,x);\nif(cljs.core.not(me)){\nreturn false;\n} else {\nvar vec__46569 = me;\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46569,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46569,(1),null);\nvar xmeta = cljs.core.meta(x_SINGLEQUOTE_);\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(xmeta));\nif(and__4221__auto__){\nreturn new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(xmeta);\n} else {\nreturn and__4221__auto__;\n}\n})())){\nvar or__4223__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.next(pre),externs_SINGLEQUOTE_,top);\n}\n} else {\nvar G__47578 = cljs.core.next(pre);\nvar G__47579 = externs_SINGLEQUOTE_;\nvar G__47580 = top;\npre = G__47578;\nexterns = G__47579;\ntop = G__47580;\ncontinue;\n}\n\n}\n\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.has_extern_QMARK_ = (function cljs$analyzer$has_extern_QMARK_(var_args){\nvar G__46573 = arguments.length;\nswitch (G__46573) {\ncase 1:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(pre,cljs.analyzer.get_externs());\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar or__4223__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(pre,externs);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(pre)))?(function (){var x = cljs.core.first(pre);\nvar or__4223__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),x));\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null)], null),x));\n}\n})():null);\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(pre)),\"cljs$\");\n}\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.js_tag = (function cljs$analyzer$js_tag(var_args){\nvar G__46575 = arguments.length;\nswitch (G__46575) {\ncase 1:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = (function (pre,tag_type){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(pre,tag_type,cljs.analyzer.get_externs());\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = (function (pre,tag_type,externs){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(pre,tag_type,externs,externs);\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = (function (pre,tag_type,externs,top){\nvar temp__5753__auto__ = cljs.core.find(externs,cljs.core.first(pre));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar vec__46576 = temp__5753__auto__;\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46576,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46576,(1),null);\nvar me = vec__46576;\nvar tag = (function (){var G__46579 = cljs.core.meta(p);\nreturn (tag_type.cljs$core$IFn$_invoke$arity$1 ? tag_type.cljs$core$IFn$_invoke$arity$1(G__46579) : tag_type.call(null,G__46579));\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),(1))){\nif(cljs.core.truth_(tag)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2(tag,tag) : cljs.analyzer.alias__GT_type.call(null,tag,tag))));\n} else {\nreturn null;\n}\n} else {\nvar or__4223__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.next(pre),tag_type,externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(top,tag),top);\n}\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.dotted_symbol_QMARK_ = (function cljs$analyzer$dotted_symbol_QMARK_(sym){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nreturn ((goog.string.contains(s,\".\")) && ((!(goog.string.contains(s,\"..\")))));\n});\ncljs.analyzer.munge_node_lib = (function cljs$analyzer$munge_node_lib(name){\nreturn [\"node$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\ncljs.analyzer.munge_global_export = (function cljs$analyzer$munge_global_export(name){\nreturn [\"global$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\n/**\n * Takes a namespace and an unqualified symbol and potentially returns a new\n *   symbol to be used in lieu of the original.\n */\ncljs.analyzer.resolve_alias = (function cljs$analyzer$resolve_alias(ns,sym){\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns);\nif(and__4221__auto__){\nvar and__4221__auto____$1 = (function (){var fexpr__46580 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),\"null\",new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),\"null\"], null), null);\nreturn (fexpr__46580.cljs$core$IFn$_invoke$arity$1 ? fexpr__46580.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__46580.call(null,sym));\n})();\nif(cljs.core.truth_(and__4221__auto____$1)){\nreturn cljs.analyzer.checked_arrays();\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget\",\"checked-aget\",950823006,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset\",\"checked-aset\",1556136760,null)], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget'\",\"checked-aget'\",212330530,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset'\",\"checked-aset'\",-510930777,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays(),sym], null));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.ns__GT_module_type = (function cljs$analyzer$ns__GT_module_type(ns){\nif(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_(ns))){\nreturn new cljs.core.Keyword(null,\"js\",\"js\",1768080579);\n} else {\nif(cljs.analyzer.node_module_dep_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"node\",\"node\",581201198);\n} else {\nif(cljs.analyzer.dep_has_global_exports_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"global\",\"global\",93595047);\n} else {\nreturn null;\n}\n}\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.resolve_STAR_ !== 'undefined')){\n} else {\ncljs.analyzer.resolve_STAR_ = (function (){var method_table__4712__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4713__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4714__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4715__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4716__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__46581 = cljs.core.get_global_hierarchy;\nreturn (fexpr__46581.cljs$core$IFn$_invoke$arity$0 ? fexpr__46581.cljs$core$IFn$_invoke$arity$0() : fexpr__46581.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"resolve*\"),(function (env,sym,full_ns,current_ns){\nreturn cljs.analyzer.ns__GT_module_type(full_ns);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4716__auto__,method_table__4712__auto__,prefer_table__4713__auto__,method_cache__4714__auto__,cached_hierarchy__4715__auto__));\n})();\n}\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null);\n}));\ncljs.analyzer.extern_pre = (function cljs$analyzer$extern_pre(sym,current_ns){\nvar pre = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null),cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./))));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n\nreturn pre;\n});\ncljs.analyzer.node_like_QMARK_ = (function cljs$analyzer$node_like_QMARK_(var_args){\nvar G__46583 = arguments.length;\nswitch (G__46583) {\ncase 0:\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.compiler_options());\n}));\n\n(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (opts){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"nodejs\",\"nodejs\",321212524),new cljs.core.Keyword(null,\"target\",\"target\",253001721).cljs$core$IFn$_invoke$arity$1(opts))) && (new cljs.core.Keyword(null,\"nodejs-rt\",\"nodejs-rt\",-512437071).cljs$core$IFn$_invoke$arity$1(opts) === false));\n}));\n\n(cljs.analyzer.node_like_QMARK_.cljs$lang$maxFixedArity = 1);\n\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"node\",\"node\",581201198),(function (env,sym,full_ns,current_ns){\nif(cljs.core.truth_(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0())){\nvar pre = cljs.analyzer.extern_pre(sym,current_ns);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"global\",\"global\",93595047),(function (env,sym,full_ns,current_ns){\nvar pre = cljs.analyzer.extern_pre(sym,current_ns);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_global_export(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\n/**\n * Specially-treated symbols for which we don't trigger :private-var-access warnings.\n */\ncljs.analyzer.private_var_access_exceptions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),\"null\"], null), null);\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (env,sym,full_ns,current_ns){\nvar sym_ast = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),full_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\nvar sym_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym));\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns);\nif(and__4221__auto__){\nvar and__4221__auto____$1 = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(sym_ast);\nif(cljs.core.truth_(and__4221__auto____$1)){\nreturn ((cljs.core.not(cljs.analyzer._STAR_private_var_access_nowarn_STAR_)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.private_var_access_exceptions,sym_name)))));\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_name], null));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym_ast,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym_name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null)], 0));\n}));\ncljs.analyzer.required_QMARK_ = (function cljs$analyzer$required_QMARK_(ns,env){\nreturn ((cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)))),ns)) || (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)))),ns)));\n});\n/**\n * Returns true if ns is a required namespace and a JavaScript module that\n * might be invokeable as a function.\n */\ncljs.analyzer.invokeable_ns_QMARK_ = (function cljs$analyzer$invokeable_ns_QMARK_(ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar and__4221__auto__ = cljs.analyzer.required_QMARK_(ns__$1,env);\nif(and__4221__auto__){\nvar or__4223__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn ((cljs.analyzer.node_module_dep_QMARK_(ns__$1)) || (cljs.analyzer.dep_has_global_exports_QMARK_(ns__$1)));\n}\n} else {\nreturn and__4221__auto__;\n}\n});\ncljs.analyzer.resolve_invokeable_ns = (function cljs$analyzer$resolve_invokeable_ns(ns,current_ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar module_type = cljs.analyzer.ns__GT_module_type(ns__$1);\nvar G__46584 = module_type;\nvar G__46584__$1 = (((G__46584 instanceof cljs.core.Keyword))?G__46584.fqn:null);\nswitch (G__46584__$1) {\ncase \"js\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((function (){var or__4223__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1);\n}\n})()),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null);\n\nbreak;\ncase \"node\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_node_lib(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ncase \"global\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_global_export(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__46584__$1)].join('')));\n\n}\n});\ncljs.analyzer.handle_symbol_local = (function cljs$analyzer$handle_symbol_local(sym,lb){\nif((lb instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null);\n} else {\nreturn lb;\n}\n});\n/**\n * Resolve a var. Accepts a side-effecting confirm fn for producing\n * warnings about unresolved vars.\n */\ncljs.analyzer.resolve_var = (function cljs$analyzer$resolve_var(var_args){\nvar G__46587 = arguments.length;\nswitch (G__46587) {\ncase 2:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = (function (env,sym){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,null);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = (function (env,sym,confirm){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4(env,sym,confirm,true);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4 = (function (env,sym,confirm,default_QMARK_){\nwhile(true){\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nif((\"js\" === cljs.core.namespace(sym))){\nvar symn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar shadowed_by_local = cljs.analyzer.handle_symbol_local(symn,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,symn));\nif((!((shadowed_by_local == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(shadowed_by_local,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nvar pre = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./)));\nif(((cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))) && (cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta((function (){var or__4223__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(pre);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null),(function (){var temp__5753__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ret_tag = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358),true,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag], null);\n} else {\nreturn null;\n}\n})()], 0));\n\n}\n} else {\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nvar lb = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,sym));\nvar current_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nif((!((lb == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lb,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns = cljs.core.namespace(sym);\nvar ns__$1 = (((\"clojure.core\" === ns))?\"cljs.core\":ns);\nvar full_ns = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,ns__$1,(function (){var or__4223__auto__ = (function (){var and__4221__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\n} else {\nreturn and__4221__auto__;\n}\n})();\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns__$1);\n}\n})());\nif((!((confirm == null)))){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns)){\ncljs.analyzer.confirm_ns(env,full_ns);\n} else {\n}\n\nvar G__46588_47646 = env;\nvar G__46589_47647 = full_ns;\nvar G__46590_47648 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__46588_47646,G__46589_47647,G__46590_47648) : confirm.call(null,G__46588_47646,G__46589_47647,G__46590_47648));\n} else {\n}\n\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif(cljs.analyzer.dotted_symbol_QMARK_(sym)){\nvar idx = s.indexOf(\".\");\nvar prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx));\nvar suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1)));\nvar temp__5751__auto__ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4(env,prefix,null,false);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar resolved = temp__5751__auto__;\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(resolved,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),((function (env,sym,confirm,default_QMARK_,resolved,temp__5751__auto__,idx,prefix,suffix,s,lb,current_ns,locals){\nreturn (function (p1__46585_SHARP_){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__46585_SHARP_),\".\",suffix].join(''));\n});})(env,sym,confirm,default_QMARK_,resolved,temp__5751__auto__,idx,prefix,suffix,s,lb,current_ns,locals))\n);\n} else {\nvar idx__$1 = s.lastIndexOf(\".\");\nvar pre = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx__$1);\nvar suf = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx__$1 + (1)));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(pre,suf),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(pre)], null);\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym) == null)))){\nvar full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym);\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym);\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym__$1,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym) == null)))){\nvar G__47658 = env;\nvar G__47659 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym);\nvar G__47660 = confirm;\nvar G__47661 = default_QMARK_;\nenv = G__47658;\nsym = G__47659;\nconfirm = G__47660;\ndefault_QMARK_ = G__47661;\ncontinue;\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)))){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nif(cljs.analyzer.core_name_QMARK_(env,sym)){\nvar sym__$1 = cljs.analyzer.resolve_alias(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),sym);\nif((!((confirm == null)))){\nvar G__46591_47662 = env;\nvar G__46592_47663 = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\nvar G__46593_47664 = sym__$1;\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__46591_47662,G__46592_47663,G__46593_47664) : confirm.call(null,G__46591_47662,G__46592_47663,G__46593_47664));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null)], 0));\n} else {\nif(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_(s,env))){\nreturn cljs.analyzer.resolve_invokeable_ns(s,current_ns,env);\n} else {\nif(cljs.core.truth_(default_QMARK_)){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nreturn null;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n * Emits a warning if no such var exists.\n */\ncljs.analyzer.resolve_existing_var = (function cljs$analyzer$resolve_existing_var(env,sym){\nif(cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists);\n} else {\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,sym);\n}\n});\n/**\n * Given env, an analysis environment env, and names, a list of symbols, confirm\n * that all correspond to declared dynamic vars.\n */\ncljs.analyzer.confirm_bindings = (function cljs$analyzer$confirm_bindings(env,names){\nvar seq__46594 = cljs.core.seq(names);\nvar chunk__46595 = null;\nvar count__46596 = (0);\nvar i__46597 = (0);\nwhile(true){\nif((i__46597 < count__46596)){\nvar name = chunk__46595.cljs$core$IIndexed$_nth$arity$2(null,i__46597);\nvar env_47670__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_47671 = cljs.analyzer.resolve_existing_var(env_47670__$1,name);\nif(cljs.core.truth_((function (){var and__4221__auto__ = ev_47671;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_47671));\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_47670__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_47671,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_47671)], null));\n} else {\n}\n\n\nvar G__47674 = seq__46594;\nvar G__47675 = chunk__46595;\nvar G__47676 = count__46596;\nvar G__47677 = (i__46597 + (1));\nseq__46594 = G__47674;\nchunk__46595 = G__47675;\ncount__46596 = G__47676;\ni__46597 = G__47677;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46594);\nif(temp__5753__auto__){\nvar seq__46594__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46594__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__46594__$1);\nvar G__47678 = cljs.core.chunk_rest(seq__46594__$1);\nvar G__47679 = c__4649__auto__;\nvar G__47680 = cljs.core.count(c__4649__auto__);\nvar G__47681 = (0);\nseq__46594 = G__47678;\nchunk__46595 = G__47679;\ncount__46596 = G__47680;\ni__46597 = G__47681;\ncontinue;\n} else {\nvar name = cljs.core.first(seq__46594__$1);\nvar env_47695__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_47696 = cljs.analyzer.resolve_existing_var(env_47695__$1,name);\nif(cljs.core.truth_((function (){var and__4221__auto__ = ev_47696;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_47696));\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_47695__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_47696,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_47696)], null));\n} else {\n}\n\n\nvar G__47700 = cljs.core.next(seq__46594__$1);\nvar G__47701 = null;\nvar G__47702 = (0);\nvar G__47703 = (0);\nseq__46594 = G__47700;\nchunk__46595 = G__47701;\ncount__46596 = G__47702;\ni__46597 = G__47703;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve a macro.\n */\ncljs.analyzer.resolve_macro_var = (function cljs$analyzer$resolve_macro_var(env,sym){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927));\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns__$1 = cljs.core.namespace(sym);\nvar ns__$2 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",ns__$1))?\"cljs.core\":ns__$1);\nvar full_ns = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$2);\nvar full_ns__$1 = (((!(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"].join('')):full_ns);\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null)) == null)))){\nvar full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null)) == null)))){\nvar qualified_symbol = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null));\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym__$1], null));\n} else {\nvar ns__$1 = (((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null)) == null))))?ns:((cljs.analyzer.core_name_QMARK_(env,sym))?cljs.analyzer.impl.CLJS_CORE_MACROS_SYM:null));\nif((!((ns__$1 == null)))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\n\n\ncljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\",new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),\"null\",new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),\"null\",new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),\"null\",new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),\"null\",new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),\"null\",new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),\"null\",new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\"], null), null);\ncljs.analyzer._STAR_recur_frames_STAR_ = null;\ncljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;\ncljs.analyzer._STAR_allow_redef_STAR_ = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = true;\ncljs.analyzer.analyze_keyword = (function cljs$analyzer$analyze_keyword(env,sym){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null)], null);\n});\ncljs.analyzer.get_tag = (function cljs$analyzer$get_tag(e){\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e)));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5755__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e));\n} else {\nvar tag = temp__5755__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.find_matching_method = (function cljs$analyzer$find_matching_method(f,params){\nvar methods$ = (function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(f);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(f));\n}\n})();\nvar c = cljs.core.count(params);\nreturn cljs.core.some((function (m){\nvar and__4221__auto__ = (function (){var or__4223__auto__ = (new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869).cljs$core$IFn$_invoke$arity$1(m) === c);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(m);\n}\n})();\nif(cljs.core.truth_(and__4221__auto__)){\nreturn m;\n} else {\nreturn and__4221__auto__;\n}\n}),methods$);\n});\ncljs.analyzer.type_QMARK_ = (function cljs$analyzer$type_QMARK_(env,t){\nif((((!((t == null)))) && ((t instanceof cljs.core.Symbol)))){\nvar var$ = (function (){var _STAR_private_var_access_nowarn_STAR__orig_val__46598 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__46599 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__46599);\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,t);\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__46598);\n}})();\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(var$));\nif((temp__5755__auto____$1 == null)){\nvar temp__5755__auto____$2 = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5755__auto____$2 == null)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"PersistentHashMap\",\"cljs.core/PersistentHashMap\",-454120575,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"List\",\"cljs.core/List\",1708954352,null),\"null\"], null), null),t);\n} else {\nvar proto = temp__5755__auto____$2;\nreturn proto;\n}\n} else {\nvar type = temp__5755__auto____$1;\nreturn type;\n}\n} else {\nvar type = temp__5755__auto__;\nreturn type;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.unwrap_quote = (function cljs$analyzer$unwrap_quote(p__46600){\nvar map__46601 = p__46600;\nvar map__46601__$1 = cljs.core.__destructure_map(map__46601);\nvar expr = map__46601__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46601__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif(cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245))){\nreturn new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(expr);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_if = (function cljs$analyzer$infer_if(env,e){\nvar map__46602 = cljs.analyzer.unwrap_quote(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(e));\nvar map__46602__$1 = cljs.core.__destructure_map(map__46602);\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46602__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46602__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar then_tag = (function (){var G__46603 = env;\nvar G__46604 = new cljs.core.Keyword(null,\"then\",\"then\",460598070).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46603,G__46604) : cljs.analyzer.infer_tag.call(null,G__46603,G__46604));\n})();\nif(((cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"const\",\"const\",1709929842))) && ((((!((form == null)))) && ((!(form === false))))))){\nreturn then_tag;\n} else {\nvar else_tag = (function (){var G__46605 = env;\nvar G__46606 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46605,G__46606) : cljs.analyzer.infer_tag.call(null,G__46605,G__46606));\n})();\nif(((cljs.core.symbol_identical_QMARK_(then_tag,else_tag)) || (cljs.core.symbol_identical_QMARK_(else_tag,cljs.analyzer.impl.IGNORE_SYM)))){\nreturn then_tag;\n} else {\nif(cljs.core.symbol_identical_QMARK_(then_tag,cljs.analyzer.impl.IGNORE_SYM)){\nreturn else_tag;\n} else {\nif((((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.NOT_NATIVE,then_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,then_tag)))) && ((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.NOT_NATIVE,else_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,else_tag)))))){\nreturn new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null);\n} else {\nif((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.BOOLEAN_OR_SEQ,then_tag) == null)))) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.impl.BOOLEAN_OR_SEQ,else_tag) == null)))))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nvar then_tag__$1 = ((cljs.analyzer.impl.cljs_set_QMARK_(then_tag))?then_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([then_tag]));\nvar else_tag__$1 = ((cljs.analyzer.impl.cljs_set_QMARK_(else_tag))?else_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([else_tag]));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1,else_tag__$1);\n}\n\n}\n}\n}\n}\n});\ncljs.analyzer.infer_invoke = (function cljs$analyzer$infer_invoke(env,p__46607){\nvar map__46608 = p__46607;\nvar map__46608__$1 = cljs.core.__destructure_map(map__46608);\nvar e = map__46608__$1;\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46608__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46608__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f,args),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839));\nvar temp__5755__auto__ = (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,me) : cljs.analyzer.infer_tag.call(null,env,me));\nif((temp__5755__auto__ == null)){\nvar map__46609 = f;\nvar map__46609__$1 = cljs.core.__destructure_map(map__46609);\nvar info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46609__$1,new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\nvar temp__5755__auto____$1 = ((((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(info) === true) || (new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(info) === true)))?new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(info):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)))?new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null):null));\nif((temp__5755__auto____$1 == null)){\nreturn cljs.analyzer.impl.ANY_SYM;\n} else {\nvar ret_tag = temp__5755__auto____$1;\nreturn ret_tag;\n}\n} else {\nvar ret_tag = temp__5755__auto__;\nreturn ret_tag;\n}\n});\n/**\n * Given env, an analysis environment, and e, an AST node, return the inferred\n * type of the node\n */\ncljs.analyzer.infer_tag = (function cljs$analyzer$infer_tag(env,e){\nvar temp__5755__auto__ = cljs.analyzer.get_tag(e);\nif((temp__5755__auto__ == null)){\nvar G__46610 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(e);\nvar G__46610__$1 = (((G__46610 instanceof cljs.core.Keyword))?G__46610.fqn:null);\nswitch (G__46610__$1) {\ncase \"recur\":\nreturn cljs.analyzer.impl.IGNORE_SYM;\n\nbreak;\ncase \"throw\":\nreturn cljs.analyzer.impl.IGNORE_SYM;\n\nbreak;\ncase \"let\":\nvar G__46611 = env;\nvar G__46612 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46611,G__46612) : cljs.analyzer.infer_tag.call(null,G__46611,G__46612));\n\nbreak;\ncase \"loop\":\nvar G__46613 = env;\nvar G__46614 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46613,G__46614) : cljs.analyzer.infer_tag.call(null,G__46613,G__46614));\n\nbreak;\ncase \"do\":\nvar G__46615 = env;\nvar G__46616 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46615,G__46616) : cljs.analyzer.infer_tag.call(null,G__46615,G__46616));\n\nbreak;\ncase \"fn-method\":\nvar G__46617 = env;\nvar G__46618 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46617,G__46618) : cljs.analyzer.infer_tag.call(null,G__46617,G__46618));\n\nbreak;\ncase \"def\":\nvar G__46619 = env;\nvar G__46620 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46619,G__46620) : cljs.analyzer.infer_tag.call(null,G__46619,G__46620));\n\nbreak;\ncase \"invoke\":\nreturn cljs.analyzer.infer_invoke(env,e);\n\nbreak;\ncase \"if\":\nreturn cljs.analyzer.infer_if(env,e);\n\nbreak;\ncase \"const\":\nvar G__46621 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__46621)){\nreturn cljs.analyzer.impl.BOOLEAN_SYM;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__46621)){\nreturn cljs.analyzer.impl.BOOLEAN_SYM;\n} else {\nreturn cljs.analyzer.impl.ANY_SYM;\n\n}\n}\n\nbreak;\ncase \"quote\":\nvar G__46622 = env;\nvar G__46623 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46622,G__46623) : cljs.analyzer.infer_tag.call(null,G__46622,G__46623));\n\nbreak;\ncase \"var\":\ncase \"local\":\ncase \"js-var\":\ncase \"binding\":\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5755__auto____$1 == null)){\nvar G__46624 = env;\nvar G__46625 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__46624,G__46625) : cljs.analyzer.infer_tag.call(null,G__46624,G__46625));\n} else {\nvar init = temp__5755__auto____$1;\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.infer_tag.call(null,env,init));\n}\n\nbreak;\ncase \"host-field\":\ncase \"host-call\":\nreturn cljs.analyzer.impl.ANY_SYM;\n\nbreak;\ncase \"js\":\nreturn cljs.analyzer.impl.ANY_SYM;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.parse !== 'undefined')){\n} else {\ncljs.analyzer.parse = (function (){var method_table__4712__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4713__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4714__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4715__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4716__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__46626 = cljs.core.get_global_hierarchy;\nreturn (fexpr__46626.cljs$core$IFn$_invoke$arity$0 ? fexpr__46626.cljs$core$IFn$_invoke$arity$0() : fexpr__46626.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"parse\"),(function() { \nvar G__47731__delegate = function (op,rest){\nreturn op;\n};\nvar G__47731 = function (op,var_args){\nvar rest = null;\nif (arguments.length > 1) {\nvar G__47732__i = 0, G__47732__a = new Array(arguments.length -  1);\nwhile (G__47732__i < G__47732__a.length) {G__47732__a[G__47732__i] = arguments[G__47732__i + 1]; ++G__47732__i;}\n  rest = new cljs.core.IndexedSeq(G__47732__a,0,null);\n} \nreturn G__47731__delegate.call(this,op,rest);};\nG__47731.cljs$lang$maxFixedArity = 1;\nG__47731.cljs$lang$applyTo = (function (arglist__47733){\nvar op = cljs.core.first(arglist__47733);\nvar rest = cljs.core.rest(arglist__47733);\nreturn G__47731__delegate(op,rest);\n});\nG__47731.cljs$core$IFn$_invoke$arity$variadic = G__47731__delegate;\nreturn G__47731;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4716__auto__,method_table__4712__auto__,prefer_table__4713__auto__,method_cache__4714__auto__,cached_hierarchy__4715__auto__));\n})();\n}\ncljs.analyzer.var_meta = (function cljs$analyzer$var_meta(var_args){\nvar G__46630 = arguments.length;\nswitch (G__46630) {\ncase 1:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = (function (var$){\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,null);\n}));\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = (function (var$,expr_env){\nvar sym = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$);\nvar ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095)], null);\nvar m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var user_meta = new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(var$);\nvar uks = cljs.core.keys(user_meta);\nreturn cljs.core.zipmap(uks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46627_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta,p1__46627_SHARP_),null,(1),null)),(2),null));\n}),uks));\n})(),cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46628_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$,p1__46628_SHARP_),null,(1),null)),(2),null));\n}),ks)),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null))))),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"test\",\"test\",577538877),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$test\",\".-cljs$lang$test\",718963148,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))], 0)))),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),(function (){var arglists = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(var$);\nvar arglists_SINGLEQUOTE_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists)))?cljs.core.second(arglists):arglists);\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta,arglists_SINGLEQUOTE_,new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)),(2),null));\n})()], 0))], 0));\nif(cljs.core.truth_(expr_env)){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,m) : cljs.analyzer.analyze.call(null,expr_env,m));\n} else {\nreturn m;\n}\n}));\n\n(cljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.var_ast = (function cljs$analyzer$var_ast(env,sym){\nvar _STAR_private_var_access_nowarn_STAR__orig_val__46631 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__46632 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__46632);\n\ntry{var env__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env__$1,sym,cljs.analyzer.confirm_var_exists_throw());\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar temp__5757__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar var_ns = temp__5757__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),(function (){var G__46633 = expr_env;\nvar G__46634 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns),cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46633,G__46634) : cljs.analyzer.analyze.call(null,G__46633,G__46634));\n})(),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,expr_env)], null);\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__46631);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),(function (op,env,p__46635,_,___$1){\nvar vec__46636 = p__46635;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46636,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46636,(1),null);\nvar form = vec__46636;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to var\");\n} else {\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Argument to var must be symbol\");\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"the-var\",\"the-var\",1428415613),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964)], null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),cljs.analyzer.var_ast(env,sym)], 0));\n}));\ncljs.analyzer.predicate__GT_tag = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(\"cljs.core\",\"array?\",\"cljs.core/array?\",-1655912448,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),new cljs.core.Symbol(\"cljs.core\",\"char?\",\"cljs.core/char?\",416405281,null),new cljs.core.Symbol(\"cljs.core\",\"sequential?\",\"cljs.core/sequential?\",1777854658,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Symbol(\"cljs.core\",\"var?\",\"cljs.core/var?\",1711182854,null),new cljs.core.Symbol(\"cljs.core\",\"map-entry?\",\"cljs.core/map-entry?\",465406728,null),new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",1757455529,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-ident?\",\"cljs.core/qualified-ident?\",-1863492566,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",1216133710,null),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),new cljs.core.Symbol(\"cljs.core\",\"true?\",\"cljs.core/true?\",-77973136,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),new cljs.core.Symbol(\"cljs.core\",\"volatile?\",\"cljs.core/volatile?\",-1122186415,null),new cljs.core.Symbol(\"cljs.core\",\"integer?\",\"cljs.core/integer?\",1710697810,null),new cljs.core.Symbol(\"cljs.core\",\"infinite?\",\"cljs.core/infinite?\",-1069503726,null),new cljs.core.Symbol(\"cljs.core\",\"undefined?\",\"cljs.core/undefined?\",-1206515693,null),new cljs.core.Symbol(\"cljs.core\",\"uuid?\",\"cljs.core/uuid?\",-15131116,null),new cljs.core.Symbol(\"cljs.core\",\"record?\",\"cljs.core/record?\",1307655860,null),new cljs.core.Symbol(\"cljs.core\",\"reduced?\",\"cljs.core/reduced?\",-1192491371,null),new cljs.core.Symbol(\"cljs.core\",\"tagged-literal?\",\"cljs.core/tagged-literal?\",-1159666987,null),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"cljs.core\",\"zero?\",\"cljs.core/zero?\",-341242858,null),new cljs.core.Symbol(\"cljs.core\",\"false?\",\"cljs.core/false?\",-1660815306,null),new cljs.core.Symbol(\"cljs.core\",\"list?\",\"cljs.core/list?\",-684796618,null),new cljs.core.Symbol(\"cljs.core\",\"simple-ident?\",\"cljs.core/simple-ident?\",1674885558,null),new cljs.core.Symbol(\"cljs.core\",\"simple-keyword?\",\"cljs.core/simple-keyword?\",39474330,null),new cljs.core.Symbol(\"cljs.core\",\"seqable?\",\"cljs.core/seqable?\",-745394886,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"delay?\",\"cljs.core/delay?\",2099859324,null),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Symbol(\"cljs.core\",\"chunked-seq?\",\"cljs.core/chunked-seq?\",-712922369,null)],[new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"ISequential\",\"cljs.core/ISequential\",-950981796,null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Var\",\"cljs.core/Var\",2071014443,null),new cljs.core.Symbol(\"cljs.core\",\"IMapEntry\",\"cljs.core/IMapEntry\",535941300,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Inst\",\"cljs.core/Inst\",959205835,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"cljs.core\",\"Volatile\",\"cljs.core/Volatile\",-1098692185,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(\"cljs.core\",\"IUUID\",\"cljs.core/IUUID\",-1606521379,null),new cljs.core.Symbol(\"cljs.core\",\"IRecord\",\"cljs.core/IRecord\",635852000,null),new cljs.core.Symbol(\"cljs.core\",\"Reduced\",\"cljs.core/Reduced\",971663396,null),new cljs.core.Symbol(\"cljs.core\",\"ITaggedLiteral\",\"cljs.core/ITaggedLiteral\",-1236965094,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(\"cljs.core\",\"ISeqable\",\"cljs.core/ISeqable\",137437203,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),new cljs.core.Symbol(\"cljs.core\",\"Delay\",\"cljs.core/Delay\",-21574999,null),new cljs.core.Symbol(\"js\",\"RegExp\",\"js/RegExp\",1778210562,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"IChunkedSeq\",\"cljs.core/IChunkedSeq\",-892943716,null)]);\n/**\n * Look for a predicate-induced tag when the test expression is a simple\n * application of a predicate to a local, as in (string? x).\n */\ncljs.analyzer.simple_predicate_induced_tag = (function cljs$analyzer$simple_predicate_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((((2) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__46639 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__46640 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__46640);\n\ntry{var G__46641 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46642 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46641,G__46642) : cljs.analyzer.analyze.call(null,G__46641,G__46642));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__46639);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nvar temp__5753__auto__ = (function (){var G__46643 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nreturn (cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1(G__46643) : cljs.analyzer.predicate__GT_tag.call(null,G__46643));\n})();\nif(cljs.core.truth_(temp__5753__auto__)){\nvar tag = temp__5753__auto__;\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((function (){var and__4221__auto__ = (cljs.core.namespace(sym) == null);\nif(and__4221__auto__){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null));\n} else {\nreturn and__4221__auto__;\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Look for a type-check-induced tag when the test expression is the use of\n *   instance? on a local, as in (instance? UUID x) or implements? on a local, as\n *   in (implements? ICounted x).\n */\ncljs.analyzer.type_check_induced_tag = (function cljs$analyzer$type_check_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((((3) === cljs.core.count(test))) && (((cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.specials,cljs.core.first(test))))))))))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__46644 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__46645 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__46645);\n\ntry{var G__46646 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46647 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46646,G__46647) : cljs.analyzer.analyze.call(null,G__46646,G__46647));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__46644);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nif(cljs.core.truth_((function (){var G__46649 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nvar fexpr__46648 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),\"null\"], null), null);\nreturn (fexpr__46648.cljs$core$IFn$_invoke$arity$1 ? fexpr__46648.cljs$core$IFn$_invoke$arity$1(G__46649) : fexpr__46648.call(null,G__46649));\n})())){\nvar analyzed_type = (function (){var _STAR_cljs_warnings_STAR__orig_val__46650 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__46651 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__46651);\n\ntry{var G__46652 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46653 = cljs.core.second(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46652,G__46653) : cljs.analyzer.analyze.call(null,G__46652,G__46653));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__46650);\n}})();\nvar tag = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_type);\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_type));\nif(and__4221__auto__){\nvar and__4221__auto____$1 = (cljs.core.namespace(sym) == null);\nif(and__4221__auto____$1){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null));\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Refine a tag to exclude clj-nil if the test is a local.\n */\ncljs.analyzer.truth_induced_tag = (function cljs$analyzer$truth_induced_tag(env,test){\nif(cljs.core.truth_((function (){var and__4221__auto__ = (test instanceof cljs.core.Symbol);\nif(and__4221__auto__){\nvar and__4221__auto____$1 = (cljs.core.namespace(test) == null);\nif(and__4221__auto____$1){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),test], null));\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\nvar analyzed_symbol = (function (){var _STAR_cljs_warnings_STAR__orig_val__46654 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__46655 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__46655);\n\ntry{var G__46656 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46657 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46656,G__46657) : cljs.analyzer.analyze.call(null,G__46656,G__46657));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__46654);\n}})();\nvar temp__5753__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(analyzed_symbol);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar tag = temp__5753__auto__;\nif(((cljs.core.set_QMARK_(tag)) && (cljs.core.contains_QMARK_(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [test,cljs.analyzer.canonicalize_type(cljs.core.disj.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null)))], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Looks at the test and sets any tags which are induced by virtue\n *   of the test being truthy. For example in (if (string? x) x :bar)\n *   the local x in the then branch must be of string type.\n */\ncljs.analyzer.set_test_induced_tags = (function cljs$analyzer$set_test_induced_tags(env,test){\nvar vec__46658 = (function (){var or__4223__auto__ = cljs.analyzer.simple_predicate_induced_tag(env,test);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = cljs.analyzer.type_check_induced_tag(env,test);\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.analyzer.truth_induced_tag(env,test);\n}\n}\n})();\nvar local = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46658,(0),null);\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46658,(1),null);\nvar G__46661 = env;\nif(cljs.core.truth_(local)){\nreturn cljs.core.assoc_in(G__46661,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),local,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null),tag);\n} else {\nreturn G__46661;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),(function (op,env,p__46662,name,_){\nvar vec__46663 = p__46662;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46663,(0),null);\nvar test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46663,(1),null);\nvar then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46663,(2),null);\nvar else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46663,(3),null);\nvar form = vec__46663;\nif((cljs.core.count(form) < (3))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too few arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too many arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nvar test_expr = (function (){var _STAR_recur_frames_STAR__orig_val__46666 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46667 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46667);\n\ntry{var G__46668 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46669 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46668,G__46669) : cljs.analyzer.analyze.call(null,G__46668,G__46669));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46666);\n}})();\nvar then_expr = (function (){var _STAR_allow_redef_STAR__orig_val__46670 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__46671 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__46671);\n\ntry{var G__46672 = cljs.analyzer.set_test_induced_tags(env,test);\nvar G__46673 = then;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46672,G__46673) : cljs.analyzer.analyze.call(null,G__46672,G__46673));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__46670);\n}})();\nvar else_expr = (function (){var _STAR_allow_redef_STAR__orig_val__46674 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__46675 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__46675);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,else$) : cljs.analyzer.analyze.call(null,env,else$));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__46674);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"if\",\"if\",-458814265),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test_expr,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then_expr,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),else_expr,new cljs.core.Keyword(null,\"unchecked\",\"unchecked\",924418378),cljs.core._STAR_unchecked_if_STAR_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.Keyword(null,\"else\",\"else\",-1508377146)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),(function (op,env,p__46678,name,_){\nvar vec__46679 = p__46678;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46679,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46679,(1),null);\nvar tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46679,(2),null);\nvar thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46679,(3),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46679,(4),null);\nvar form = vec__46679;\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* must switch on symbol\",\"\\n\",\"(symbol? sym)\"].join('')));\n}\n\nif(cljs.core.every_QMARK_(cljs.core.vector_QMARK_,tests)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be grouped in vectors\",\"\\n\",\"(every? vector? tests)\"].join('')));\n}\n\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar v = (function (){var _STAR_recur_frames_STAR__orig_val__46682 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46683 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46683);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46682);\n}})();\nvar tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__46676_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (t){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,t) : cljs.analyzer.analyze.call(null,expr_env,t));\n}),p1__46676_SHARP_);\n}),tests);\nvar thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__46677_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,p1__46677_SHARP_) : cljs.analyzer.analyze.call(null,env,p1__46677_SHARP_));\n}),thens);\nvar nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tests__$2,then){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-node\",\"case-node\",1016946320),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (test){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-test\",\"case-test\",-213512472),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(test),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),expr_env,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877)], null)], null);\n}),tests__$2),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-then\",\"case-then\",2107591745),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(then),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null);\n}),tests__$1,thens__$1);\nvar default$__$1 = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,default$) : cljs.analyzer.analyze.call(null,env,default$));\nif(cljs.core.every_QMARK_((function (t){\nvar or__4223__auto__ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(t));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar and__4221__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(t));\nif(and__4221__auto__){\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_,cljs.core.string_QMARK_,cljs.core.char_QMARK_)(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(t));\n} else {\nreturn and__4221__auto__;\n}\n}\n}),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,tests__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be numbers, strings, or constants\",\"\\n\",\"(every? (fn [t] (or (-> t :info :const) (and (= :const (:op t)) ((some-fn number? string? char?) (:form t))))) (apply concat tests))\"].join('')));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case\",\"case\",1143702196),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),v,new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),nodes,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),default$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),(function (op,env,p__46684,name,_){\nvar vec__46685 = p__46684;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46685,(0),null);\nvar throw_form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46685,(1),null);\nvar form = vec__46685;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too few arguments to throw, throw expects a single Error instance\");\n} else {\nif(((2) < cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to throw, throw expects a single Error instance\");\n} else {\n}\n}\n\nvar throw_expr = (function (){var _STAR_recur_frames_STAR__orig_val__46688 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46689 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46689);\n\ntry{var G__46690 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46691 = throw_form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46690,G__46691) : cljs.analyzer.analyze.call(null,G__46690,G__46691));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46688);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"throw\",\"throw\",-1044625833),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),throw_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),(function (op,env,p__46696,name,_){\nvar vec__46697 = p__46696;\nvar seq__46698 = cljs.core.seq(vec__46697);\nvar first__46699 = cljs.core.first(seq__46698);\nvar seq__46698__$1 = cljs.core.next(seq__46698);\nvar ___$1 = first__46699;\nvar body = seq__46698__$1;\nvar form = vec__46697;\nvar catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),(function (p1__46692_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),p1__46692_SHARP_)){\nreturn new cljs.core.Keyword(null,\"return\",\"return\",-1891502105);\n} else {\nreturn p1__46692_SHARP_;\n}\n}));\nvar catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__46693_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__46693_SHARP_),new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null));\n}));\nvar default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_,(function (p1__46694_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__46694_SHARP_),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\n}));\nvar finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__46695_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__46695_SHARP_),new cljs.core.Symbol(null,\"finally\",\"finally\",-1065347064,null));\n}));\nvar map__46700 = (function (){var parser = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),body,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),null,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),null], null);\nwhile(true){\nif(cljs.core.seq_QMARK_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser))){\nvar vec__46705 = new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser);\nvar seq__46706 = cljs.core.seq(vec__46705);\nvar first__46707 = cljs.core.first(seq__46706);\nvar seq__46706__$1 = cljs.core.next(seq__46706);\nvar form__$1 = first__46707;\nvar forms_STAR_ = seq__46706__$1;\nvar parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),forms_STAR_);\nvar G__46708 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(parser);\nvar G__46708__$1 = (((G__46708 instanceof cljs.core.Keyword))?G__46708.fqn:null);\nswitch (G__46708__$1) {\ncase \"start\":\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__47797 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"catches\",\"catches\",-1478797617));\nparser = G__47797;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__47798 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__47798;\ncontinue;\n} else {\nvar G__47799 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),cljs.core.conj,form__$1);\nparser = G__47799;\ncontinue;\n\n}\n}\n\nbreak;\ncase \"catches\":\nif(cljs.core.truth_(default_QMARK_(form__$1))){\nvar G__47801 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], 0));\nparser = G__47801;\ncontinue;\n} else {\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__47802 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138)], null),cljs.core.conj,form__$1);\nparser = G__47802;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__47803 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__47803;\ncontinue;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid try form\");\n\n}\n}\n}\n\nbreak;\ncase \"finally\":\nvar G__47804 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"done\",\"done\",-889844188)], 0));\nparser = G__47804;\ncontinue;\n\nbreak;\ncase \"done\":\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Unexpected form after finally\");\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__46708__$1)].join('')));\n\n}\n} else {\nreturn parser;\n}\nbreak;\n}\n})();\nvar map__46700__$1 = cljs.core.__destructure_map(map__46700);\nvar body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46700__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46700__$1,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138));\nvar dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46700__$1,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381));\nvar fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46700__$1,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426));\nvar finally$ = ((cljs.core.seq(fblock))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var _STAR_recur_frames_STAR__orig_val__46709 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46710 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46710);\n\ntry{var G__46711 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__46712 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.rest(fblock))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46711,G__46712) : cljs.analyzer.analyze.call(null,G__46711,G__46712));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46709);\n}})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true):null);\nvar e = (cljs.core.truth_((function (){var or__4223__auto__ = cljs.core.seq(cblocks);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nreturn dblock;\n}\n})())?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"e\"):null);\nvar default$ = (function (){var temp__5751__auto__ = dblock;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar vec__46713 = temp__5751__auto__;\nvar seq__46714 = cljs.core.seq(vec__46713);\nvar first__46715 = cljs.core.first(seq__46714);\nvar seq__46714__$1 = cljs.core.next(seq__46714);\nvar ___$2 = first__46715;\nvar first__46715__$1 = cljs.core.first(seq__46714__$1);\nvar seq__46714__$2 = cljs.core.next(seq__46714__$1);\nvar ___$3 = first__46715__$1;\nvar first__46715__$2 = cljs.core.first(seq__46714__$2);\nvar seq__46714__$3 = cljs.core.next(seq__46714__$2);\nvar name__$1 = first__46715__$2;\nvar cb = seq__46714__$3;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0))));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))));\n}\n})();\nvar cblock = ((cljs.core.seq(cblocks))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",2005388338,null),null,(1),null)),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__46716){\nvar vec__46717 = p__46716;\nvar seq__46718 = cljs.core.seq(vec__46717);\nvar first__46719 = cljs.core.first(seq__46718);\nvar seq__46718__$1 = cljs.core.next(seq__46718);\nvar ___$2 = first__46719;\nvar first__46719__$1 = cljs.core.first(seq__46718__$1);\nvar seq__46718__$2 = cljs.core.next(seq__46718__$1);\nvar type = first__46719__$1;\nvar first__46719__$2 = cljs.core.first(seq__46718__$2);\nvar seq__46718__$3 = cljs.core.next(seq__46718__$2);\nvar name__$1 = first__46719__$2;\nvar cb = seq__46718__$3;\nif(cljs.core.truth_(name__$1)){\nif(cljs.core.not(cljs.core.namespace(name__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Can't qualify symbol in catch\",\"\\n\",\"(not (namespace name))\"].join('')));\n}\n} else {\n}\n\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),null,(1),null)),(new cljs.core.List(null,type,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,e,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0)))),null,(1),null))))));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cblocks], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),null,(1),null)),(new cljs.core.List(null,default$,null,(1),null))], 0)))):default$);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(catchenv);\nvar locals__$1 = (cljs.core.truth_(e)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,e,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(e,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(e,env)], null)):locals);\nvar catch$ = (cljs.core.truth_(cblock)?(function (){var _STAR_recur_frames_STAR__orig_val__46720 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46721 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46721);\n\ntry{var G__46722 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1);\nvar G__46723 = cblock;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46722,G__46723) : cljs.analyzer.analyze.call(null,G__46722,G__46723));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46720);\n}})():null);\nvar try$ = (function (){var _STAR_recur_frames_STAR__orig_val__46724 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46725 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46725);\n\ntry{var G__46726 = (cljs.core.truth_((function (){var or__4223__auto__ = e;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn finally$;\n}\n})())?catchenv:env);\nvar G__46727 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body__$1)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46726,G__46727) : cljs.analyzer.analyze.call(null,G__46726,G__46727));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46724);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"try\",\"try\",1380742522),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(try$,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705),finally$,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524),catch$,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),(cljs.core.truth_(catch$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524)], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(finally$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], null):null)], 0)))], null);\n}));\ncljs.analyzer.valid_proto = (function cljs$analyzer$valid_proto(x){\nif((x instanceof cljs.core.Symbol)){\nreturn x;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.elide_env = (function cljs$analyzer$elide_env(env,ast,opts){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\n});\ncljs.analyzer.replace_env_pass = (function cljs$analyzer$replace_env_pass(new_env){\nreturn (function (env,ast,opts){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new_env);\n});\n});\ncljs.analyzer.ast_children = (function cljs$analyzer$ast_children(ast){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (c){\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ast,c);\nif(cljs.core.vector_QMARK_(g)){\nreturn g;\n} else {\nif(cljs.core.truth_(g)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null);\n} else {\nreturn null;\n}\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)], 0));\n});\ncljs.analyzer.constant_value_QMARK_ = (function cljs$analyzer$constant_value_QMARK_(p__46728){\nvar map__46729 = p__46728;\nvar map__46729__$1 = cljs.core.__destructure_map(map__46729);\nvar ast = map__46729__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46729__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar or__4223__auto__ = (function (){var fexpr__46730 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"const\",\"const\",1709929842),null,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),null], null), null);\nreturn (fexpr__46730.cljs$core$IFn$_invoke$arity$1 ? fexpr__46730.cljs$core$IFn$_invoke$arity$1(op) : fexpr__46730.call(null,op));\n})();\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar and__4221__auto__ = (function (){var fexpr__46731 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),null,new cljs.core.Keyword(null,\"set\",\"set\",304602554),null,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),null], null), null);\nreturn (fexpr__46731.cljs$core$IFn$_invoke$arity$1 ? fexpr__46731.cljs$core$IFn$_invoke$arity$1(op) : fexpr__46731.call(null,op));\n})();\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.every_QMARK_(cljs.analyzer.constant_value_QMARK_,cljs.analyzer.ast_children(ast));\n} else {\nreturn and__4221__auto__;\n}\n}\n});\ncljs.analyzer.const_expr__GT_constant_value = (function cljs$analyzer$const_expr__GT_constant_value(p__46732){\nvar map__46733 = p__46732;\nvar map__46733__$1 = cljs.core.__destructure_map(map__46733);\nvar e = map__46733__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46733__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__46734 = op;\nvar G__46734__$1 = (((G__46734 instanceof cljs.core.Keyword))?G__46734.fqn:null);\nswitch (G__46734__$1) {\ncase \"quote\":\nvar G__46735 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1(G__46735) : cljs.analyzer.const_expr__GT_constant_value.call(null,G__46735));\n\nbreak;\ncase \"const\":\nreturn new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(e);\n\nbreak;\ncase \"map\":\nreturn cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698).cljs$core$IFn$_invoke$arity$1(e)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"set\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"vector\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__46734__$1)].join('')));\n\n}\n});\ncljs.analyzer.earmuffed_QMARK_ = (function cljs$analyzer$earmuffed_QMARK_(sym){\nvar s = cljs.core.name(sym);\nreturn (((((s).length) > (2))) && (((clojure.string.starts_with_QMARK_(s,\"*\")) && (clojure.string.ends_with_QMARK_(s,\"*\")))));\n});\ncljs.analyzer.core_ns_QMARK_ = (function cljs$analyzer$core_ns_QMARK_(ns_sym){\nvar s = cljs.core.name(ns_sym);\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),ns_sym)) && (((clojure.string.starts_with_QMARK_(s,\"cljs.\")) || (clojure.string.starts_with_QMARK_(s,\"clojure.\")))));\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),(function (op,env,form,_,___$1){\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n} else {\n}\n\nvar pfn = (function() {\nvar G__47816 = null;\nvar G__47816__2 = (function (___$2,sym){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\n});\nvar G__47816__3 = (function (___$2,sym,init){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nvar G__47816__4 = (function (___$2,sym,doc,init){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nG__47816 = function(___$2,sym,doc,init){\nswitch(arguments.length){\ncase 2:\nreturn G__47816__2.call(this,___$2,sym);\ncase 3:\nreturn G__47816__3.call(this,___$2,sym,doc);\ncase 4:\nreturn G__47816__4.call(this,___$2,sym,doc,init);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__47816.cljs$core$IFn$_invoke$arity$2 = G__47816__2;\nG__47816.cljs$core$IFn$_invoke$arity$3 = G__47816__3;\nG__47816.cljs$core$IFn$_invoke$arity$4 = G__47816__4;\nreturn G__47816;\n})()\n;\nvar args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn,form);\nvar sym = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(args);\nvar const_QMARK_ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar sym_meta = cljs.core.meta(sym);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar protocol = cljs.analyzer.valid_proto(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));\nvar dynamic = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''));\nvar sym_ns = cljs.core.namespace(sym);\nvar sym__$1 = (cljs.core.truth_((function (){var and__4221__auto__ = sym_ns;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn (!(cljs.core.symbol_identical_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym_ns),ns_name)));\n} else {\nreturn and__4221__auto__;\n}\n})())?(function(){throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't def ns-qualified name in namespace \",sym_ns].join(''))})():(((!((sym_ns == null))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)):sym\n));\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns], null)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)].join('')),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1))], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't redefine a constant\");\n} else {\n}\n\nvar temp__5757__auto___47817 = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif((temp__5757__auto___47817 == null)){\n} else {\nvar doc_47818 = temp__5757__auto___47817;\nif(typeof doc_47818 === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n}\n}\n\nif(((cljs.core.not(dynamic)) && (((cljs.analyzer.earmuffed_QMARK_(sym__$1)) && ((!(cljs.analyzer.core_ns_QMARK_(ns_name)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)], null));\n} else {\n}\n\nvar temp__5757__auto___47819 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5757__auto___47819 == null)){\n} else {\nvar v_47820 = temp__5757__auto___47819;\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_);\nif(and__4221__auto__){\nvar and__4221__auto____$1 = cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_47820));\nif(and__4221__auto____$1){\nvar and__4221__auto____$2 = cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta));\nif(and__4221__auto____$2){\nvar and__4221__auto____$3 = cljs.analyzer._STAR_file_defs_STAR_;\nif(cljs.core.truth_(and__4221__auto____$3)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.analyzer._STAR_file_defs_STAR_),sym__$1);\n} else {\nreturn and__4221__auto____$3;\n}\n} else {\nreturn and__4221__auto____$2;\n}\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(v_47820)], null));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4221__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_47820);\nif(cljs.core.truth_(and__4221__auto__)){\nvar and__4221__auto____$1 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_47820);\nif(cljs.core.truth_(and__4221__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_47820),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta));\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_47820)),new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null));\n} else {\n}\n}\n\nvar env__$1 = ((((((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name,new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))) && (cljs.analyzer.core_name_QMARK_(env,sym__$1)))) || ((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym__$1], null)) == null))))))?(function (){var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),cljs.core.with_meta(sym__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)));\nvar conj_to_set = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY);\nif(cljs.analyzer.public_name_QMARK_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),sym__$1)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name], null));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__$1], 0));\n\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,sym__$1);\n})():env);\nvar var_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1));\nvar init_expr = ((cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)))?(function (){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),sym_meta,((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1)], 0)));\n\nvar _STAR_recur_frames_STAR__orig_val__46737 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46738 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46738);\n\ntry{var _STAR_allow_ns_STAR__orig_val__46739 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__46740 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__46740);\n\ntry{var G__46741 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46742 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nvar G__46743 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__46741,G__46742,G__46743) : cljs.analyzer.analyze.call(null,G__46741,G__46742,G__46743));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__46739);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46737);\n}})()\n:null);\nvar fn_var_QMARK_ = (((!((init_expr == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204))));\nvar tag__$1 = ((fn_var_QMARK_)?(function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(init_expr);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = tag;\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n}\n})():(cljs.core.truth_(tag)?tag:(cljs.core.truth_(dynamic)?cljs.analyzer.impl.ANY_SYM:new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr)\n)));\nvar export_as = (function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"export\",\"export\",214356590).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar export_val = temp__5753__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,export_val)){\nreturn var_name;\n} else {\nreturn export_val;\n}\n} else {\nreturn null;\n}\n})();\nvar doc = (function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\n}\n})();\nvar temp__5757__auto___47830 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5757__auto___47830 == null)){\n} else {\nvar v_47831 = temp__5757__auto___47830;\nif(((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1)))) && (((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(v_47831) === true) && ((!(fn_var_QMARK_))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),env__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1], null));\n} else {\n}\n}\n\nif((((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null)) == null)) || (cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta))))){\nif(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_,cljs.core.conj,sym__$1);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),(function (){var G__46744 = sym_meta;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__46744,new cljs.core.Keyword(null,\"test\",\"test\",577538877),true);\n} else {\nreturn G__46744;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta,new cljs.core.Keyword(null,\"test\",\"test\",577538877)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878)], null),(function (f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$1)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))){\nreturn \"cljs/core.cljs\";\n} else {\nreturn f;\n}\n}))], null),(cljs.core.truth_(doc)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc], null):null),(cljs.core.truth_(const_QMARK_)?(function (){var const_expr = (function (){var _STAR_passes_STAR__orig_val__46745 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__46746 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__46746);\n\ntry{var G__46747 = env__$1;\nvar G__46748 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46747,G__46748) : cljs.analyzer.analyze.call(null,G__46747,G__46748));\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__46745);\n}})();\nif(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_(const_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})():null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1),(cljs.core.truth_(protocol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),protocol], null):null),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar protocol_symbol = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198),protocol_symbol,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"protocol-info\",\"protocol-info\",1471745843).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)),new cljs.core.Keyword(null,\"impls\",\"impls\",-1314014853),cljs.core.PersistentHashSet.EMPTY], null);\n} else {\nreturn null;\n}\n})(),((fn_var_QMARK_)?(function (){var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46736_SHARP_){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__46736_SHARP_)));\n}),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(sym_meta)),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556).cljs$core$IFn$_invoke$arity$1(init_expr)], null),(function (){var temp__5755__auto__ = new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),params,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);\n} else {\nvar top_fn_meta = temp__5755__auto__;\nreturn top_fn_meta;\n}\n})()], 0));\n})():null),(cljs.core.truth_((function (){var and__4221__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta);\n} else {\nreturn and__4221__auto__;\n}\n})())?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),true,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null):null),((((fn_var_QMARK_) && ((!((tag__$1 == null))))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):(cljs.core.truth_(tag__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null):null))], 0)));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"def\",\"def\",-1043430536),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns_name,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__46749 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)),new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377),true);\nvar G__46750 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46749,G__46750) : cljs.analyzer.analyze.call(null,G__46749,G__46750));\n})(),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797)),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516).cljs$core$IFn$_invoke$arity$1(sym_meta)], null),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"goog-define\",\"goog-define\",-1048305441).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar goog_type = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"goog-define\",\"goog-define\",-1048305441),goog_type], null);\n} else {\nreturn null;\n}\n})(),((new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env__$1) === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var-ast\",\"var-ast\",1200379319),cljs.analyzer.var_ast(env__$1,sym__$1)], null):null),(function (){var temp__5757__auto__ = new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar test = temp__5757__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),(function (){var G__46751 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46752 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46751,G__46752) : cljs.analyzer.analyze.call(null,G__46751,G__46752));\n})()], null);\n}\n})(),(((!((tag__$1 == null))))?((fn_var_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null)):null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),(((!((export_as == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"export\",\"export\",214356590),export_as], null):null),(((!((init_expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797)], null)], null))], 0));\n}));\ncljs.analyzer.analyze_fn_method_param = (function cljs$analyzer$analyze_fn_method_param(env){\nreturn (function (p__46753,p__46754){\nvar vec__46755 = p__46753;\nvar locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46755,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46755,(1),null);\nvar vec__46758 = p__46754;\nvar arg_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46758,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46758,(1),null);\nif(cljs.core.truth_(cljs.core.namespace(name))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't use qualified name as parameter: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar line = cljs.analyzer.get_line(name,env);\nvar column = cljs.analyzer.get_col(name,env);\nvar nmeta = cljs.core.meta(name);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(nmeta);\nvar shadow__$1 = (((!((locals == null))))?cljs.analyzer.handle_symbol_local(name,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null,name))):null);\nvar env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null)], 0));\nvar param = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),env__$1,column,line,arg_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),tag,shadow__$1,new cljs.core.Keyword(null,\"arg\",\"arg\",-1747261837)]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name,param),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params,param)], null);\n});\n});\ncljs.analyzer.analyze_fn_method_body = (function cljs$analyzer$analyze_fn_method_body(env,form,recur_frames){\nvar _STAR_recur_frames_STAR__orig_val__46761 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46762 = recur_frames;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46762);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze.call(null,env,form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46761);\n}});\ncljs.analyzer.analyze_fn_method = (function cljs$analyzer$analyze_fn_method(env,locals,form,type,analyze_body_QMARK_){\nvar param_names = cljs.core.first(form);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar body = cljs.core.next(form);\nvar step = cljs.analyzer.analyze_fn_method_param(env);\nvar step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals,cljs.core.PersistentVector.EMPTY], null);\nvar vec__46763 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,step_init,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,param_names__$1));\nvar locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46763,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46763,(1),null);\nvar params_SINGLEQUOTE_ = ((variadic === true)?cljs.core.butlast(params):params);\nvar fixed_arity = cljs.core.count(params_SINGLEQUOTE_);\nvar recur_frame = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY)], null);\nvar recur_frames = cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_);\nvar body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1], 0));\nvar body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body)));\nvar expr = (cljs.core.truth_(analyze_body_QMARK_)?cljs.analyzer.analyze_fn_method_body(body_env,body_form,recur_frames):null);\nvar recurs = cljs.core.deref(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(recur_frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),variadic,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),fixed_arity,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"recurs\",\"recurs\",-1959309309),recurs], null),(((!((expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null)], null))], 0));\n});\ncljs.analyzer.fn_name_var = (function cljs$analyzer$fn_name_var(env,locals,name){\nif((!((name == null)))){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,name));\nvar shadow__$2 = (((shadow__$1 == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),name], null)):null);\nvar fn_scope = new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fn-self-name\",\"fn-self-name\",1461143531),true,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),fn_scope,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$2], null)], null);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nvar ret_tag = (((!((tag == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag], null):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([name_var,ret_tag], 0));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_fn_methods_pass2_STAR_ = (function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv,locals,type,meths){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__46766_SHARP_){\nreturn cljs.analyzer.analyze_fn_method(menv,locals,p1__46766_SHARP_,type,true);\n}),meths);\n});\ncljs.analyzer.analyze_fn_methods_pass2 = (function cljs$analyzer$analyze_fn_methods_pass2(menv,locals,type,meths){\nreturn cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv,locals,type,meths);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(function (op,env,p__46768,name,_){\nvar vec__46769 = p__46768;\nvar seq__46770 = cljs.core.seq(vec__46769);\nvar first__46771 = cljs.core.first(seq__46770);\nvar seq__46770__$1 = cljs.core.next(seq__46770);\nvar ___$1 = first__46771;\nvar args = seq__46770__$1;\nvar form = vec__46769;\nvar named_fn_QMARK_ = (cljs.core.first(args) instanceof cljs.core.Symbol);\nvar vec__46772 = ((named_fn_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.next(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,cljs.core.seq(args)], null));\nvar name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46772,(0),null);\nvar meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46772,(1),null);\nvar meths__$1 = ((cljs.core.vector_QMARK_(cljs.core.first(meths)))?(new cljs.core.List(null,meths,null,(1),null)):meths);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = cljs.analyzer.fn_name_var(env,locals,name__$1);\nvar env__$1 = (((!((name__$1 == null))))?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859)], null),cljs.core.conj,name_var):env);\nvar locals__$1 = (((((!((locals == null)))) && (named_fn_QMARK_)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name__$1,name_var):locals);\nvar form_meta = cljs.core.meta(form);\nvar type = new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_impl = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_inline = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar menv = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((function (){var G__46775 = env__$1;\nif((cljs.core.count(meths__$1) > (1))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__46775,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\n} else {\nreturn G__46775;\n}\n})(),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),proto_impl,new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),proto_inline], null)], 0));\nvar methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46767_SHARP_){\nvar _STAR_allow_ns_STAR__orig_val__46776 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__46777 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__46777);\n\ntry{return cljs.analyzer.analyze_fn_method(menv,locals__$1,p1__46767_SHARP_,type,(name__$1 == null));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__46776);\n}}),meths__$1);\nvar mfa = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869)),cljs.core.max,(0),methods$);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),methods$));\nvar locals__$2 = ((named_fn_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null),cljs.core.assoc,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([variadic,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),mfa,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),methods$)], 0)):locals__$1);\nvar methods$__$1 = (((!((name__$1 == null))))?(function (){var _STAR_allow_ns_STAR__orig_val__46778 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__46779 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__46779);\n\ntry{return cljs.analyzer.analyze_fn_methods_pass2(menv,locals__$2,type,meths__$1);\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__46778);\n}})():cljs.core.vec(methods$));\nvar form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form,cljs.core.dissoc,new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409),new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026),new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742));\nvar js_doc = ((variadic === true)?\"@param {...*} var_args\":null);\nvar children = (((!((name_var == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null));\nvar inferred_ret_tag = (function (){var inferred_tags = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag,env__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),methods$__$1));\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,inferred_tags))){\nreturn cljs.core.first(inferred_tags);\n} else {\nreturn null;\n}\n})();\nvar ast = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"loop-lets\",\"loop-lets\",2036794185),new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),new cljs.core.Keyword(null,\"recur-frames\",\"recur-frames\",-307205196),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516)],[children,proto_inline,name_var,cljs.analyzer._STAR_loop_lets_STAR_,inferred_ret_tag,proto_impl,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),env__$1,variadic,methods$__$1,cljs.analyzer._STAR_recur_frames_STAR_,mfa,form__$1,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246).cljs$core$IFn$_invoke$arity$1(env__$1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]),(((!((name_var == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),name_var], null):null)], 0));\nvar variadic_methods_47836 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),methods$__$1);\nvar variadic_params_47837 = (((cljs.core.count(variadic_methods_47836) > (0)))?cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(variadic_methods_47836,(0)))):(0));\nvar param_counts_47838 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,new cljs.core.Keyword(null,\"params\",\"params\",710516235))),methods$__$1);\nif(((1) < cljs.core.count(variadic_methods_47836))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif((!((((variadic_params_47837 === (0))) || ((variadic_params_47837 === ((1) + mfa))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_47838),param_counts_47838)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null,ast));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),(function (op,env,p__46780,name,_){\nvar vec__46781 = p__46780;\nvar seq__46782 = cljs.core.seq(vec__46781);\nvar first__46783 = cljs.core.first(seq__46782);\nvar seq__46782__$1 = cljs.core.next(seq__46782);\nvar ___$1 = first__46783;\nvar first__46783__$1 = cljs.core.first(seq__46782__$1);\nvar seq__46782__$2 = cljs.core.next(seq__46782__$1);\nvar bindings = first__46783__$1;\nvar exprs = seq__46782__$2;\nvar form = vec__46781;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"bindings must be vector of even number of elements\");\n}\n\nvar n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings)));\nvar names = cljs.core.keys(n__GT_fexpr);\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar vec__46784 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__46790,n){\nvar vec__46791 = p__46790;\nvar map__46794 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46791,(0),null);\nvar map__46794__$1 = cljs.core.__destructure_map(map__46794);\nvar env__$1 = map__46794__$1;\nvar locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46794__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46791,(1),null);\nvar ret_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));\nvar fexpr = (function (){var _STAR_cljs_warnings_STAR__orig_val__46795 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__46796 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__46796);\n\ntry{var G__46797 = env__$1;\nvar G__46798 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null,n));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46797,G__46798) : cljs.analyzer.analyze.call(null,G__46797,G__46798));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__46795);\n}})();\nvar be = (function (){var G__46799 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[n,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),cljs.analyzer.get_col(n,env__$1),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),cljs.analyzer.get_line(n,env__$1),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),true,cljs.analyzer.handle_symbol_local(n,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null,n))),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354)]);\nif(cljs.core.truth_(ret_tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__46799,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag);\n} else {\nreturn G__46799;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),n], null),be),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,cljs.core.PersistentVector.EMPTY], null),names);\nvar meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46784,(0),null);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46784,(1),null);\nvar meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar vec__46787 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__46800,p__46801){\nvar vec__46802 = p__46800;\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46802,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46802,(1),null);\nvar map__46805 = p__46801;\nvar map__46805__$1 = cljs.core.__destructure_map(map__46805);\nvar be = map__46805__$1;\nvar name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46805__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46805__$1,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803));\nvar env__$1 = cljs.core.assoc_in(meth_env__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),shadow__$1);\nvar fexpr = (function (){var G__46806 = env__$1;\nvar G__46807 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null,name__$1));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46806,G__46807) : cljs.analyzer.analyze.call(null,G__46806,G__46807));\n})();\nvar be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),fexpr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),be_SINGLEQUOTE_),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1,be_SINGLEQUOTE_)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1,cljs.core.PersistentVector.EMPTY], null),bes);\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46787,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46787,(1),null);\nvar expr = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__46808 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__46809 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46808,G__46809) : cljs.analyzer.analyze.call(null,G__46808,G__46809));\n})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),expr,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null);\n}));\ncljs.analyzer.analyze_do_statements_STAR_ = (function cljs$analyzer$analyze_do_statements_STAR_(env,exprs){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__46810_SHARP_){\nvar G__46811 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__46812 = p1__46810_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46811,G__46812) : cljs.analyzer.analyze.call(null,G__46811,G__46812));\n}),cljs.core.butlast(exprs));\n});\ncljs.analyzer.analyze_do_statements = (function cljs$analyzer$analyze_do_statements(env,exprs){\nvar _STAR_recur_frames_STAR__orig_val__46813 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46814 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46814);\n\ntry{return cljs.analyzer.analyze_do_statements_STAR_(env,exprs);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46813);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),(function (op,env,p__46815,_,___$1){\nvar vec__46816 = p__46815;\nvar seq__46817 = cljs.core.seq(vec__46816);\nvar first__46818 = cljs.core.first(seq__46817);\nvar seq__46817__$1 = cljs.core.next(seq__46817);\nvar ___$2 = first__46818;\nvar exprs = seq__46817__$1;\nvar form = vec__46816;\nvar statements = cljs.analyzer.analyze_do_statements(env,exprs);\nif((cljs.core.count(exprs) <= (1))){\nvar ret = (function (){var G__46819 = env;\nvar G__46820 = cljs.core.first(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46819,G__46820) : cljs.analyzer.analyze.call(null,G__46819,G__46820));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n} else {\nvar ret_env = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863)):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)));\nvar ret = (function (){var G__46821 = ret_env;\nvar G__46822 = cljs.core.last(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46821,G__46822) : cljs.analyzer.analyze.call(null,G__46821,G__46822));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\n}));\ncljs.analyzer.analyze_let_binding_init = (function cljs$analyzer$analyze_let_binding_init(env,init,loop_lets){\nvar _STAR_loop_lets_STAR__orig_val__46823 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_loop_lets_STAR__temp_val__46824 = loop_lets;\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__46824);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.analyze.call(null,env,init));\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__46823);\n}});\ncljs.analyzer.get_let_tag = (function cljs$analyzer$get_let_tag(name,init_expr){\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\nif((temp__5755__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(init_expr));\n} else {\nvar tag = temp__5755__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.analyze_let_bindings_STAR_ = (function cljs$analyzer$analyze_let_bindings_STAR_(encl_env,bindings,op){\nvar bes = cljs.core.PersistentVector.EMPTY;\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(bindings__$1);\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes,env], null);\n} else {\nvar vec__46829 = temp__5755__auto__;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46829,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46829,(1),null);\nif((((!((cljs.core.namespace(name) == null)))) || (goog.string.contains(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\".\")))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,[\"Invalid local name: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar init_expr = cljs.analyzer.analyze_let_binding_init(env,init,cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_));\nvar line = cljs.analyzer.get_line(name,env);\nvar col = cljs.analyzer.get_col(name,env);\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null)));\nvar be = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null),init_expr,name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col], null),col,line,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),cljs.analyzer.get_let_tag(name,init_expr),shadow__$1,op]);\nvar be__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([be,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__46829,name,init,temp__5755__auto__){\nreturn (function (p1__46825_SHARP_){\nreturn cljs.core.select_keys(p1__46825_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null));\n});})(bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__46829,name,init,temp__5755__auto__))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)):be);\nvar G__47858 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be__$1);\nvar G__47859 = cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null),be__$1);\nvar G__47860 = cljs.core.next(bindings__$1);\nbes = G__47858;\nenv = G__47859;\nbindings__$1 = G__47860;\ncontinue;\n}\nbreak;\n}\n});\ncljs.analyzer.analyze_let_bindings = (function cljs$analyzer$analyze_let_bindings(encl_env,bindings,op){\nvar _STAR_recur_frames_STAR__orig_val__46832 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46833 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46833);\n\ntry{return cljs.analyzer.analyze_let_bindings_STAR_(encl_env,bindings,op);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46832);\n}});\ncljs.analyzer.analyze_let_body_STAR_ = (function cljs$analyzer$analyze_let_body_STAR_(env,context,exprs){\nvar G__46834 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__46835 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46834,G__46835) : cljs.analyzer.analyze.call(null,G__46834,G__46835));\n});\ncljs.analyzer.analyze_let_body = (function cljs$analyzer$analyze_let_body(env,context,exprs,recur_frames,loop_lets){\nvar _STAR_recur_frames_STAR__orig_val__46836 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_loop_lets_STAR__orig_val__46837 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46838 = recur_frames;\nvar _STAR_loop_lets_STAR__temp_val__46839 = loop_lets;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46838);\n\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__46839);\n\ntry{return cljs.analyzer.analyze_let_body_STAR_(env,context,exprs);\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__46837);\n\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46836);\n}});\ncljs.analyzer.analyze_let = (function cljs$analyzer$analyze_let(encl_env,p__46840,is_loop,widened_tags){\nwhile(true){\nvar vec__46841 = p__46840;\nvar seq__46842 = cljs.core.seq(vec__46841);\nvar first__46843 = cljs.core.first(seq__46842);\nvar seq__46842__$1 = cljs.core.next(seq__46842);\nvar _ = first__46843;\nvar first__46843__$1 = cljs.core.first(seq__46842__$1);\nvar seq__46842__$2 = cljs.core.next(seq__46842__$1);\nvar bindings = first__46843__$1;\nvar exprs = seq__46842__$2;\nvar form = vec__46841;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,\"bindings must be vector of even number of elements\");\n}\n\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(encl_env);\nvar op = ((is_loop === true)?new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849):new cljs.core.Keyword(null,\"let\",\"let\",-1282412701));\nvar bindings__$1 = (cljs.core.truth_(widened_tags)?cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (encl_env,p__46840,is_loop,widened_tags,context,op,vec__46841,seq__46842,first__46843,seq__46842__$1,_,first__46843__$1,seq__46842__$2,bindings,exprs,form){\nreturn (function (p__46847,widened_tag){\nvar vec__46848 = p__46847;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46848,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46848,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name,cljs.core.assoc,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),widened_tag),init], null);\n});})(encl_env,p__46840,is_loop,widened_tags,context,op,vec__46841,seq__46842,first__46843,seq__46842__$1,_,first__46843__$1,seq__46842__$2,bindings,exprs,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings),widened_tags], 0))):bindings);\nvar vec__46844 = cljs.analyzer.analyze_let_bindings((function (){var G__46851 = encl_env;\nif(is_loop === true){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__46851,new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),true);\n} else {\nreturn G__46851;\n}\n})(),bindings__$1,op);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46844,(0),null);\nvar env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46844,(1),null);\nvar recur_frame = ((is_loop === true)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),bes))], null):null);\nvar recur_frames = (cljs.core.truth_(recur_frame)?cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_):cljs.analyzer._STAR_recur_frames_STAR_);\nvar loop_lets = ((is_loop === true)?cljs.analyzer._STAR_loop_lets_STAR_:(((!((cljs.analyzer._STAR_loop_lets_STAR_ == null))))?cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_):null));\nvar warn_acc = (cljs.core.truth_((function (){var and__4221__auto__ = is_loop;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.not(widened_tags);\n} else {\nreturn and__4221__auto__;\n}\n})())?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY):null);\nvar expr = (cljs.core.truth_(warn_acc)?(function (){var _STAR_cljs_warning_handlers_STAR__orig_val__46852 = cljs.analyzer._STAR_cljs_warning_handlers_STAR_;\nvar _STAR_cljs_warning_handlers_STAR__temp_val__46853 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.accumulating_warning_handler(warn_acc)], null);\n(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__temp_val__46853);\n\ntry{return cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets);\n}finally {(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__orig_val__46852);\n}})():cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets));\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null);\nvar nil__GT_any = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(cljs.core.truth_((function (){var and__4221__auto__ = is_loop;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn ((cljs.core.not(widened_tags)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(nil__GT_any,cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame))),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(nil__GT_any,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),bes))));\n} else {\nreturn and__4221__auto__;\n}\n})())){\nvar G__47868 = encl_env;\nvar G__47869 = form;\nvar G__47870 = is_loop;\nvar G__47871 = cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame));\nencl_env = G__47868;\np__46840 = G__47869;\nis_loop = G__47870;\nwidened_tags = G__47871;\ncontinue;\n} else {\nif(cljs.core.truth_(warn_acc)){\ncljs.analyzer.replay_accumulated_warnings(warn_acc);\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),op,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),encl_env,new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,false,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,true,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),(function (op,env,p__46855,_,___$1){\nvar vec__46856 = p__46855;\nvar seq__46857 = cljs.core.seq(vec__46856);\nvar first__46858 = cljs.core.first(seq__46857);\nvar seq__46857__$1 = cljs.core.next(seq__46857);\nvar ___$2 = first__46858;\nvar exprs = seq__46857__$1;\nvar form = vec__46856;\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);\nvar add_implicit_target_object_QMARK_ = (function (){var and__4221__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs),(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)) - (1)));\n} else {\nreturn and__4221__auto__;\n}\n})();\nvar exprs__$1 = (function (){var G__46859 = exprs;\nif(cljs.core.truth_(add_implicit_target_object_QMARK_)){\nreturn cljs.core.cons(null,G__46859);\n} else {\nreturn G__46859;\n}\n})();\nvar exprs__$2 = (function (){var _STAR_recur_frames_STAR__orig_val__46860 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46861 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46861);\n\ntry{return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46854_SHARP_){\nvar G__46862 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__46863 = p1__46854_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46862,G__46863) : cljs.analyzer.analyze.call(null,G__46862,G__46863));\n}),exprs__$1));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46860);\n}})();\nif(cljs.core.truth_(frame)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't recur here\");\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$2),cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"recur argument count mismatch, expected: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame))),\" args, got: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(exprs__$2))].join(''));\n}\n\nif(cljs.core.truth_((function (){var and__4221__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.not(add_implicit_target_object_QMARK_);\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(cljs.core.first(exprs__$2))], null));\n} else {\n}\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(frame),true);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(frame),(function (tags){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tag,expr){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724).cljs$core$IFn$_invoke$arity$1(expr))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr));\n}\n}),tags,exprs__$2);\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),frame,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),exprs__$2,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094)], null)], 0));\n}));\ncljs.analyzer.analyze_const = (function cljs$analyzer$analyze_const(env,form){\nvar map__46864 = (function (){var G__46865 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621),true);\nvar G__46866 = form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__46865,G__46866) : cljs.analyzer.analyze.call(null,G__46865,G__46866));\n})();\nvar map__46864__$1 = cljs.core.__destructure_map(map__46864);\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46864__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"literal?\",\"literal?\",352485871),true,new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(function (_,env,p__46867,___$1,___$2){\nvar vec__46868 = p__46867;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46868,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46868,(1),null);\nvar form = vec__46868;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to quote\");\n} else {\n}\n\nvar expr = cljs.analyzer.analyze_const(env,x);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),(function (_,env,p__46872,___$1,___$2){\nvar vec__46873 = p__46872;\nvar seq__46874 = cljs.core.seq(vec__46873);\nvar first__46875 = cljs.core.first(seq__46874);\nvar seq__46874__$1 = cljs.core.next(seq__46874);\nvar ___$3 = first__46875;\nvar first__46875__$1 = cljs.core.first(seq__46874__$1);\nvar seq__46874__$2 = cljs.core.next(seq__46874__$1);\nvar ctor = first__46875__$1;\nvar args = seq__46874__$2;\nvar form = vec__46873;\nvar _STAR_recur_frames_STAR__orig_val__46876 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46877 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46877);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ctorexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,ctor) : cljs.analyzer.analyze.call(null,enve,ctor));\nvar ctor_var = (cljs.core.truth_((function (){var G__46879 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ctorexpr);\nvar fexpr__46878 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),null,new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),null,new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),null], null), null);\nreturn (fexpr__46878.cljs$core$IFn$_invoke$arity$1 ? fexpr__46878.cljs$core$IFn$_invoke$arity$1(G__46879) : fexpr__46878.call(null,G__46879));\n})())?cljs.analyzer.resolve_existing_var(env,ctor):null);\nvar record_args = (cljs.core.truth_((function (){var and__4221__auto__ = new cljs.core.Keyword(null,\"record\",\"record\",-779106859).cljs$core$IFn$_invoke$arity$1(ctor_var);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));\n} else {\nreturn and__4221__auto__;\n}\n})())?cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((3),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,null) : cljs.analyzer.analyze.call(null,enve,null))):null);\nvar argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46871_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__46871_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__46871_SHARP_));\n}),args)),record_args);\nvar known_num_fields = new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024).cljs$core$IFn$_invoke$arity$1(ctor_var);\nvar argc = cljs.core.count(args);\nif(((cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)))) && ((((!((known_num_fields == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields,argc)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802),ctor], null));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),ctorexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),(function (){var name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(ctorexpr));\nvar or__4223__auto__ = (function (){var fexpr__46880 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(\"js\",\"Object\",\"js/Object\",61215323,null),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(\"js\",\"String\",\"js/String\",-2070054036,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"js\",\"Array\",\"js/Array\",-423508366,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(\"js\",\"Number\",\"js/Number\",-508133572,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"js\",\"Function\",\"js/Function\",-749892063,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(\"js\",\"Boolean\",\"js/Boolean\",1661145260,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null);\nreturn (fexpr__46880.cljs$core$IFn$_invoke$arity$1 ? fexpr__46880.cljs$core$IFn$_invoke$arity$1(name) : fexpr__46880.call(null,name));\n})();\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn name;\n}\n})()], null);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46876);\n}}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),(function (_,env,p__46881,___$1,___$2){\nvar vec__46882 = p__46881;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46882,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46882,(1),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46882,(2),null);\nvar alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46882,(3),null);\nvar form = vec__46882;\nvar vec__46885 = (cljs.core.truth_(alt)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,target,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,val,null,(1),null))], 0)))),alt], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,val], null));\nvar target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46885,(0),null);\nvar val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46885,(1),null);\nvar _STAR_recur_frames_STAR__orig_val__46888 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__46889 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__46889);\n\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__46890 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__46891 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__46891);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar texpr = (((target__$1 instanceof cljs.core.Symbol))?(function (){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null))) && (((val__$1 === true) || (val__$1 === false))))){\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),val__$1));\n} else {\n}\n}\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),target__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! a constant\");\n} else {\n}\n\nvar local_47882 = cljs.analyzer.handle_symbol_local(target__$1,(function (){var G__46892 = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nreturn (target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__46892) : target__$1.call(null,G__46892));\n})());\nif(cljs.core.truth_((function (){var or__4223__auto__ = (local_47882 == null);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar and__4221__auto__ = new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(local_47882);\nif(cljs.core.truth_(and__4221__auto__)){\nvar or__4223__auto____$1 = new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(local_47882);\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nvar or__4223__auto____$2 = new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(local_47882);\nif(cljs.core.truth_(or__4223__auto____$2)){\nreturn or__4223__auto____$2;\n} else {\nreturn new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(local_47882);\n}\n}\n} else {\nreturn and__4221__auto__;\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! local var or non-mutable field\");\n}\n\nreturn (cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze_symbol.call(null,enve,target__$1));\n})()\n:((cljs.core.seq_QMARK_(target__$1))?(function (){var texpr = (cljs.core.truth_(new cljs.core.Keyword(null,\"extend-type\",\"extend-type\",-517175606).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(target__$1)))?(function (){var _STAR_cljs_warnings_STAR__orig_val__46893 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__46894 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),false);\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__46894);\n\ntry{return (cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__46893);\n}})():(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null)));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(texpr))){\nreturn texpr;\n} else {\nreturn null;\n}\n})():null)\n);\nvar vexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,val__$1) : cljs.analyzer.analyze.call(null,enve,val__$1));\nif(cljs.core.seq_QMARK_(target__$1)){\nvar sym_47883 = (function (){var G__46895 = target__$1;\nif((G__46895 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__46895);\n}\n})();\nvar meta_47884 = cljs.core.meta(sym_47883);\nvar temp__5753__auto___47885 = (function (){var and__4221__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(vexpr));\nif(and__4221__auto__){\nreturn new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(meta_47884);\n} else {\nreturn and__4221__auto__;\n}\n})();\nif(cljs.core.truth_(temp__5753__auto___47885)){\nvar info_47886 = temp__5753__auto___47885;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym_47883,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(info_47886,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null)),cljs.core.select_keys(cljs.core.first(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(vexpr)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0))], 0));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(texpr)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"set! target must be a field or a symbol naming a var\");\n}\n\nif(((cljs.core.not(new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env))) && ((!(((function (){var fexpr__46896 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null),\"null\"], null), null);\nreturn (fexpr__46896.cljs$core$IFn$_invoke$arity$1 ? fexpr__46896.cljs$core$IFn$_invoke$arity$1(target__$1) : fexpr__46896.call(null,target__$1));\n})() == null)))))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set!\",\"set!\",-1389817006),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),texpr,new cljs.core.Keyword(null,\"val\",\"val\",128701612),vexpr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"val\",\"val\",128701612)], null)], null);\n\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__46890);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__46888);\n}}));\ncljs.analyzer.foreign_dep_QMARK_ = (function cljs$analyzer$foreign_dep_QMARK_(dep){\nvar js_index = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\nvar temp__5755__auto__ = cljs.core.find(js_index,cljs.core.name(cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(dep))));\nif((temp__5755__auto__ == null)){\nreturn false;\n} else {\nvar vec__46897 = temp__5755__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46897,(0),null);\nvar map__46900 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46897,(1),null);\nvar map__46900__$1 = cljs.core.__destructure_map(map__46900);\nvar foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46900__$1,new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149));\nreturn foreign;\n}\n});\n/**\n * Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n * and opts, compiler options - analyze all of the dependencies. Required to\n * correctly analyze usage of other namespaces.\n */\ncljs.analyzer.analyze_deps = (function cljs$analyzer$analyze_deps(var_args){\nvar G__46903 = arguments.length;\nswitch (G__46903) {\ncase 3:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = (function (lib,deps,env){\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib,deps,env,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = (function (lib,deps,env,opts){\nvar compiler = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar _STAR_cljs_dep_set_STAR__orig_val__46904 = cljs.analyzer._STAR_cljs_dep_set_STAR_;\nvar _STAR_cljs_dep_set_STAR__temp_val__46905 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_,lib),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558)], null),cljs.core.conj,lib);\n(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__temp_val__46905);\n\ntry{if(cljs.core.every_QMARK_((function (p1__46901_SHARP_){\nreturn (!(cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_,p1__46901_SHARP_)));\n}),deps)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Circular dependency detected, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\" -> \",cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)),cljs.core.some(cljs.analyzer._STAR_cljs_dep_set_STAR_,deps)))))].join(''),\"\\n\",\"(every? (fn* [p1__46901#] (not (contains? *cljs-dep-set* p1__46901#))) deps)\"].join('')));\n}\n\nvar seq__46906 = cljs.core.seq(deps);\nvar chunk__46907 = null;\nvar count__46908 = (0);\nvar i__46909 = (0);\nwhile(true){\nif((i__46909 < count__46908)){\nvar dep = chunk__46907.cljs$core$IIndexed$_nth$arity$2(null,i__46909);\nif(cljs.core.truth_((function (){var or__4223__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4223__auto____$1){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nvar idx_47889 = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler);\nvar dep_47890__$1 = cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(dep));\nif(cljs.core.contains_QMARK_(idx_47889,cljs.core.name(dep_47890__$1))){\nvar dep_name_47891 = cljs.core.name(dep_47890__$1);\nif(clojure.string.starts_with_QMARK_(dep_name_47891,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep_47890__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep_47890__$1)], null)));\n}\n}\n\n\nvar G__47892 = seq__46906;\nvar G__47893 = chunk__46907;\nvar G__47894 = count__46908;\nvar G__47895 = (i__46909 + (1));\nseq__46906 = G__47892;\nchunk__46907 = G__47893;\ncount__46908 = G__47894;\ni__46909 = G__47895;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46906);\nif(temp__5753__auto__){\nvar seq__46906__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46906__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__46906__$1);\nvar G__47896 = cljs.core.chunk_rest(seq__46906__$1);\nvar G__47897 = c__4649__auto__;\nvar G__47898 = cljs.core.count(c__4649__auto__);\nvar G__47899 = (0);\nseq__46906 = G__47896;\nchunk__46907 = G__47897;\ncount__46908 = G__47898;\ni__46909 = G__47899;\ncontinue;\n} else {\nvar dep = cljs.core.first(seq__46906__$1);\nif(cljs.core.truth_((function (){var or__4223__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4223__auto____$1){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nvar idx_47900 = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler);\nvar dep_47901__$1 = cljs.core.first(cljs.analyzer.lib_AMPERSAND_sublib(dep));\nif(cljs.core.contains_QMARK_(idx_47900,cljs.core.name(dep_47901__$1))){\nvar dep_name_47902 = cljs.core.name(dep_47901__$1);\nif(clojure.string.starts_with_QMARK_(dep_name_47902,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep_47901__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep_47901__$1)], null)));\n}\n}\n\n\nvar G__47903 = cljs.core.next(seq__46906__$1);\nvar G__47904 = null;\nvar G__47905 = (0);\nvar G__47906 = (0);\nseq__46906 = G__47903;\nchunk__46907 = G__47904;\ncount__46908 = G__47905;\ni__46909 = G__47906;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__orig_val__46904);\n}}));\n\n(cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.missing_use_QMARK_ = (function cljs$analyzer$missing_use_QMARK_(lib,sym,cenv){\nvar js_lib = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cenv,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.name(lib)], null));\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),lib,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150)),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150))) && ((((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"group\",\"group\",582596132)),new cljs.core.Keyword(null,\"goog\",\"goog\",-1711135452))))) && (((cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"closure-lib\",\"closure-lib\",2105917916)))) && ((((!(cljs.analyzer.node_module_dep_QMARK_(lib)))) && ((!(cljs.analyzer.dep_has_global_exports_QMARK_(lib)))))))))));\n});\ncljs.analyzer.missing_rename_QMARK_ = (function cljs$analyzer$missing_rename_QMARK_(sym,cenv){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym__$1,cenv);\n});\ncljs.analyzer.missing_use_macro_QMARK_ = (function cljs$analyzer$missing_use_macro_QMARK_(lib,sym){\nif((lib instanceof cljs.core.Symbol)){\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym) == null)));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.missing_rename_macro_QMARK_ = (function cljs$analyzer$missing_rename_macro_QMARK_(sym){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym__$1) == null)));\n});\ncljs.analyzer.missing_uses = (function cljs$analyzer$missing_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__46910){\nvar vec__46911 = p__46910;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46911,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46911,(1),null);\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym,cenv);\n}),uses));\n});\ncljs.analyzer.missing_renames = (function cljs$analyzer$missing_renames(renames,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__46914){\nvar vec__46915 = p__46914;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46915,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46915,(1),null);\nreturn cljs.analyzer.missing_rename_QMARK_(qualified_sym,cenv);\n}),renames));\n});\ncljs.analyzer.missing_use_macros = (function cljs$analyzer$missing_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__46918){\nvar vec__46919 = p__46918;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46919,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46919,(1),null);\nreturn cljs.analyzer.missing_use_macro_QMARK_(lib,sym);\n}),use_macros));\n});\ncljs.analyzer.inferred_use_macros = (function cljs$analyzer$inferred_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__46922){\nvar vec__46923 = p__46922;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46923,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46923,(1),null);\nreturn cljs.core.not(cljs.analyzer.missing_use_macro_QMARK_(lib,sym));\n}),use_macros));\n});\ncljs.analyzer.inferred_rename_macros = (function cljs$analyzer$inferred_rename_macros(rename_macros,env){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__46926){\nvar vec__46927 = p__46926;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46927,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46927,(1),null);\nreturn (!(cljs.analyzer.missing_rename_macro_QMARK_(qualified_sym)));\n}),rename_macros));\n});\ncljs.analyzer.check_uses = (function cljs$analyzer$check_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__46930 = cljs.core.seq(uses);\nvar chunk__46931 = null;\nvar count__46932 = (0);\nvar i__46933 = (0);\nwhile(true){\nif((i__46933 < count__46932)){\nvar vec__46940 = chunk__46931.cljs$core$IIndexed$_nth$arity$2(null,i__46933);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46940,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46940,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__47909 = seq__46930;\nvar G__47910 = chunk__46931;\nvar G__47911 = count__46932;\nvar G__47912 = (i__46933 + (1));\nseq__46930 = G__47909;\nchunk__46931 = G__47910;\ncount__46932 = G__47911;\ni__46933 = G__47912;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46930);\nif(temp__5753__auto__){\nvar seq__46930__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46930__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__46930__$1);\nvar G__47913 = cljs.core.chunk_rest(seq__46930__$1);\nvar G__47914 = c__4649__auto__;\nvar G__47915 = cljs.core.count(c__4649__auto__);\nvar G__47916 = (0);\nseq__46930 = G__47913;\nchunk__46931 = G__47914;\ncount__46932 = G__47915;\ni__46933 = G__47916;\ncontinue;\n} else {\nvar vec__46943 = cljs.core.first(seq__46930__$1);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46943,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46943,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__47917 = cljs.core.next(seq__46930__$1);\nvar G__47918 = null;\nvar G__47919 = (0);\nvar G__47920 = (0);\nseq__46930 = G__47917;\nchunk__46931 = G__47918;\ncount__46932 = G__47919;\ni__46933 = G__47920;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.check_use_macros = (function cljs$analyzer$check_use_macros(var_args){\nvar G__46947 = arguments.length;\nswitch (G__46947) {\ncase 2:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = (function (use_macros,env){\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,null,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = (function (use_macros,missing_uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__46948_47923 = cljs.core.seq(use_macros);\nvar chunk__46949_47924 = null;\nvar count__46950_47925 = (0);\nvar i__46951_47926 = (0);\nwhile(true){\nif((i__46951_47926 < count__46950_47925)){\nvar vec__46958_47927 = chunk__46949_47924.cljs$core$IIndexed$_nth$arity$2(null,i__46951_47926);\nvar sym_47928 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46958_47927,(0),null);\nvar lib_47929 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46958_47927,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_47929,sym_47928))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_47929,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_47928], null)));\n} else {\n}\n\n\nvar G__47930 = seq__46948_47923;\nvar G__47931 = chunk__46949_47924;\nvar G__47932 = count__46950_47925;\nvar G__47933 = (i__46951_47926 + (1));\nseq__46948_47923 = G__47930;\nchunk__46949_47924 = G__47931;\ncount__46950_47925 = G__47932;\ni__46951_47926 = G__47933;\ncontinue;\n} else {\nvar temp__5753__auto___47934 = cljs.core.seq(seq__46948_47923);\nif(temp__5753__auto___47934){\nvar seq__46948_47935__$1 = temp__5753__auto___47934;\nif(cljs.core.chunked_seq_QMARK_(seq__46948_47935__$1)){\nvar c__4649__auto___47936 = cljs.core.chunk_first(seq__46948_47935__$1);\nvar G__47937 = cljs.core.chunk_rest(seq__46948_47935__$1);\nvar G__47938 = c__4649__auto___47936;\nvar G__47939 = cljs.core.count(c__4649__auto___47936);\nvar G__47940 = (0);\nseq__46948_47923 = G__47937;\nchunk__46949_47924 = G__47938;\ncount__46950_47925 = G__47939;\ni__46951_47926 = G__47940;\ncontinue;\n} else {\nvar vec__46961_47941 = cljs.core.first(seq__46948_47935__$1);\nvar sym_47942 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46961_47941,(0),null);\nvar lib_47943 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46961_47941,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_47943,sym_47942))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_47943,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_47942], null)));\n} else {\n}\n\n\nvar G__47944 = cljs.core.next(seq__46948_47935__$1);\nvar G__47945 = null;\nvar G__47946 = (0);\nvar G__47947 = (0);\nseq__46948_47923 = G__47944;\nchunk__46949_47924 = G__47945;\ncount__46950_47925 = G__47946;\ni__46951_47926 = G__47947;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.analyzer.check_uses(cljs.analyzer.missing_use_macros(missing_uses,env),env);\n\nreturn cljs.analyzer.inferred_use_macros(missing_uses,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.check_use_macros_inferring_missing = (function cljs$analyzer$check_use_macros_inferring_missing(p__46967,env){\nvar map__46968 = p__46967;\nvar map__46968__$1 = cljs.core.__destructure_map(map__46968);\nvar ast = map__46968__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46968__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46968__$1,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46968__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar missing_uses = (cljs.core.truth_((function (){var and__4221__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.seq(uses);\n} else {\nreturn and__4221__auto__;\n}\n})())?cljs.analyzer.missing_uses(uses,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,uses,cljs.core.keys(missing_uses));\nvar remove_missing_uses = (function (p1__46964_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__46964_SHARP_,cljs.core.keys(missing_uses));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),(function (p1__46965_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__46965_SHARP_,cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,missing_uses,env)], 0)),cljs.analyzer.inferred_use_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__46966_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__46966_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),cljs.core.merge,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.check_rename_macros_inferring_missing = (function cljs$analyzer$check_rename_macros_inferring_missing(p__46972,env){\nvar map__46973 = p__46972;\nvar map__46973__$1 = cljs.core.__destructure_map(map__46973);\nvar ast = map__46973__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46973__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46973__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar missing_renames = (cljs.core.truth_((function (){var and__4221__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.seq(renames);\n} else {\nreturn and__4221__auto__;\n}\n})())?cljs.analyzer.missing_renames(renames,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,renames,cljs.core.keys(missing_renames));\nvar missing_rename_macros = cljs.analyzer.inferred_rename_macros(missing_renames,env);\nvar remove_missing_renames = (function (p1__46969_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__46969_SHARP_,cljs.core.keys(missing_renames));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),(function (p1__46970_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__46970_SHARP_,missing_rename_macros], 0)),cljs.analyzer.inferred_rename_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__46971_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__46971_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),cljs.core.merge,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.parse_ns_error_msg = (function cljs$analyzer$parse_ns_error_msg(spec,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"; offending spec: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([spec], 0))].join('');\n});\ncljs.analyzer.basic_validate_ns_spec = (function cljs$analyzer$basic_validate_ns_spec(env,macros_QMARK_,spec){\nif((((spec instanceof cljs.core.Symbol)) || (((typeof spec === 'string') || (cljs.core.sequential_QMARK_(spec)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"));\n}\n\nif(cljs.core.sequential_QMARK_(spec)){\nif((((cljs.core.first(spec) instanceof cljs.core.Symbol)) || (typeof cljs.core.first(spec) === 'string'))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Library name must be specified as a symbol in :require / :require-macros\"));\n}\n\nif(cljs.core.odd_QMARK_(cljs.core.count(spec))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"));\n}\n\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as, :refer and :rename options supported in :require / :require-macros\"));\n}\n\nif((function (){var fs = cljs.core.frequencies(cljs.core.next(spec));\nreturn ((((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0)) : fs.call(null,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0))) <= (1))) && (((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0)) : fs.call(null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0))) <= (1))));\n})()){\nreturn null;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :as and :refer options may only be specified once in :require / :require-macros\"));\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.parse_ns_excludes = (function cljs$analyzer$parse_ns_excludes(env,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,p__46975){\nvar vec__46976 = p__46975;\nvar seq__46977 = cljs.core.seq(vec__46976);\nvar first__46978 = cljs.core.first(seq__46977);\nvar seq__46977__$1 = cljs.core.next(seq__46977);\nvar k = first__46978;\nvar filters = seq__46977__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440))){\nif(cljs.core.seq(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(s))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only one :refer-clojure form is allowed per namespace definition\");\n} else {\n}\n\nvar valid_kws = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null);\nvar xs = (function (){var fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null);\nvar err = (!(cljs.core.even_QMARK_(cljs.core.count(filters))));\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\");\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nif(cljs.core.truth_((valid_kws.cljs$core$IFn$_invoke$arity$1 ? valid_kws.cljs$core$IFn$_invoke$arity$1(kw) : valid_kws.call(null,kw)))){\nvar refs = cljs.core.second(fs);\nif((!(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))) && (((cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (((cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,valid_kws,vec__46976,seq__46977,first__46978,seq__46977__$1,k,filters){\nreturn (function (p1__46974_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__46974_SHARP_);\n});})(fs,ret,err,refs,kw,valid_kws,vec__46976,seq__46977,first__46978,seq__46977__$1,k,filters))\n,refs)))))))))){\nvar G__47952 = fs;\nvar G__47953 = ret;\nvar G__47954 = true;\nfs = G__47952;\nret = G__47953;\nerr = G__47954;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))){\nvar G__47955 = cljs.core.nnext(fs);\nvar G__47956 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),cljs.core.into,refs);\nvar G__47957 = false;\nfs = G__47955;\nret = G__47956;\nerr = G__47957;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))){\nvar G__47958 = cljs.core.nnext(fs);\nvar G__47959 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),cljs.core.merge,refs);\nvar G__47960 = false;\nfs = G__47958;\nret = G__47959;\nerr = G__47960;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n} else {\nvar G__47961 = fs;\nvar G__47962 = ret;\nvar G__47963 = true;\nfs = G__47961;\nret = G__47962;\nerr = G__47963;\ncontinue;\n}\n} else {\nreturn ret;\n\n}\n}\nbreak;\n}\n})();\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s,xs], 0));\n} else {\nreturn s;\n}\n}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null),args);\n});\ncljs.analyzer.use__GT_require = (function cljs$analyzer$use__GT_require(env,p__46980){\nvar vec__46981 = p__46980;\nvar seq__46982 = cljs.core.seq(vec__46981);\nvar first__46983 = cljs.core.first(seq__46982);\nvar seq__46982__$1 = cljs.core.next(seq__46982);\nvar lib = first__46983;\nvar filters = seq__46982__$1;\nvar spec = vec__46981;\nif((((lib instanceof cljs.core.Symbol)) && (cljs.core.odd_QMARK_(cljs.core.count(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n}\n\nvar fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib], null);\nvar err = false;\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nvar only_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"only\",\"only\",1907811652));\nif(((only_QMARK_) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))))){\nif((!((cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw)]),ret) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :only and :rename options may only be specified once in :use / :use-macros\"));\n} else {\nvar refs = cljs.core.second(fs);\nif((!(((((only_QMARK_) && (((cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (((cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,only_QMARK_,vec__46981,seq__46982,first__46983,seq__46982__$1,lib,filters,spec){\nreturn (function (p1__46979_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__46979_SHARP_);\n});})(fs,ret,err,refs,kw,only_QMARK_,vec__46981,seq__46982,first__46983,seq__46982__$1,lib,filters,spec))\n,refs)))))))))){\nvar G__47966 = fs;\nvar G__47967 = ret;\nvar G__47968 = true;\nfs = G__47966;\nret = G__47967;\nerr = G__47968;\ncontinue;\n} else {\nvar G__47969 = cljs.core.nnext(fs);\nvar G__47970 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw),refs], null));\nvar G__47971 = false;\nfs = G__47969;\nret = G__47970;\nerr = G__47971;\ncontinue;\n}\n}\n} else {\nvar G__47972 = fs;\nvar G__47973 = ret;\nvar G__47974 = true;\nfs = G__47972;\nret = G__47973;\nerr = G__47974;\ncontinue;\n}\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),ret) == null)))){\nreturn ret;\n} else {\nvar G__47975 = fs;\nvar G__47976 = ret;\nvar G__47977 = true;\nfs = G__47975;\nret = G__47976;\nerr = G__47977;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse_require_spec = (function cljs$analyzer$parse_require_spec(env,macros_QMARK_,deps,aliases,spec){\nwhile(true){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string'))){\nvar G__47978 = env;\nvar G__47979 = macros_QMARK_;\nvar G__47980 = deps;\nvar G__47981 = aliases;\nvar G__47982 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\nenv = G__47978;\nmacros_QMARK_ = G__47979;\ndeps = G__47980;\naliases = G__47981;\nspec = G__47982;\ncontinue;\n} else {\ncljs.analyzer.basic_validate_ns_spec(env,macros_QMARK_,spec);\n\nvar vec__46984 = spec;\nvar seq__46985 = cljs.core.seq(vec__46984);\nvar first__46986 = cljs.core.first(seq__46985);\nvar seq__46985__$1 = cljs.core.next(seq__46985);\nvar lib = first__46986;\nvar opts = seq__46985__$1;\nvar vec__46987 = (function (){var temp__5755__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib),new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n} else {\nvar js_module_name = temp__5755__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name),lib], null);\n}\n})();\nvar lib__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46987,(0),null);\nvar js_module_provides = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46987,(1),null);\nvar map__46990 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar map__46990__$1 = cljs.core.__destructure_map(map__46990);\nvar alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__46990__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((typeof lib__$1 === 'string')?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(lib__$1)):lib__$1));\nvar referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46990__$1,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553));\nvar renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46990__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar referred_without_renamed = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(renamed)),referred));\nvar vec__46991 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613)], null));\nvar rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46991,(0),null);\nvar uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46991,(1),null);\nvar renk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46991,(2),null);\nif((((alias instanceof cljs.core.Symbol)) || ((alias == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as must be followed by a symbol in :require / :require-macros\"));\n}\n\nif((!((alias == null)))){\nvar alias_type_47983 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.Keyword(null,\"macros\",\"macros\",811339431):new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786));\nvar lib_SINGLEQUOTE__47984 = (function (){var fexpr__46994 = alias_type_47983.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(aliases));\nreturn (fexpr__46994.cljs$core$IFn$_invoke$arity$1 ? fexpr__46994.cljs$core$IFn$_invoke$arity$1(alias) : fexpr__46994.call(null,alias));\n})();\nif((((!((lib_SINGLEQUOTE__47984 == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1,lib_SINGLEQUOTE__47984)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as alias must be unique\"));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_47983], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias,lib__$1], null),(cljs.core.truth_(js_module_provides)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_module_provides,lib__$1], null):null)], 0));\n} else {\n}\n\nif(((((cljs.core.sequential_QMARK_(referred)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,referred)))) || ((referred == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":refer must be followed by a sequence of symbols in :require / :require-macros\"));\n}\n\nif(cljs.core.truth_(macros_QMARK_)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,lib__$1);\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((!((alias == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([rk,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([alias,lib__$1]),cljs.core.PersistentArrayMap.createAsIfByAssoc([lib__$1,lib__$1]),(cljs.core.truth_(js_module_provides)?cljs.core.PersistentArrayMap.createAsIfByAssoc([js_module_provides,lib__$1]):null)], 0))]):null),(((!((referred_without_renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([uk,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred_without_renamed,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))]):null),(((!((renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([renk,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (env,macros_QMARK_,deps,aliases,spec,vec__46984,seq__46985,first__46986,seq__46985__$1,lib,opts,vec__46987,lib__$1,js_module_provides,map__46990,map__46990__$1,alias,referred,renamed,referred_without_renamed,vec__46991,rk,uk,renk){\nreturn (function (m,p__46995){\nvar vec__46996 = p__46995;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46996,(0),null);\nvar renamed__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46996,(1),null);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([original]),referred))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Renamed symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original),\" not referred\"].join(''));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed__$1,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(env,macros_QMARK_,deps,aliases,spec,vec__46984,seq__46985,first__46986,seq__46985__$1,lib,opts,vec__46987,lib__$1,js_module_provides,map__46990,map__46990__$1,alias,referred,renamed,referred_without_renamed,vec__46991,rk,uk,renk))\n,cljs.core.PersistentArrayMap.EMPTY,renamed)]):null)], 0));\n}\nbreak;\n}\n});\ncljs.analyzer.parse_import_spec = (function cljs$analyzer$parse_import_spec(env,deps,spec){\nif(((((cljs.core.sequential_QMARK_(spec)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,spec)))) || ((((spec instanceof cljs.core.Symbol)) && ((cljs.core.namespace(spec) == null)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"));\n}\n\nvar import_map = ((cljs.core.sequential_QMARK_(spec))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46999_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__46999_SHARP_,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(spec)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__46999_SHARP_)].join(''))],null));\n}),cljs.core.rest(spec))):(((!(((-1) === cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec).indexOf(\".\")))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec),/\\./))),spec]):cljs.core.PersistentArrayMap.EMPTY\n));\nvar seq__47000_47993 = cljs.core.seq(import_map);\nvar chunk__47001_47994 = null;\nvar count__47002_47995 = (0);\nvar i__47003_47996 = (0);\nwhile(true){\nif((i__47003_47996 < count__47002_47995)){\nvar vec__47010_47997 = chunk__47001_47994.cljs$core$IIndexed$_nth$arity$2(null,i__47003_47996);\nvar __47998 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47010_47997,(0),null);\nvar spec_47999__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47010_47997,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_47999__$1);\n\n\nvar G__48008 = seq__47000_47993;\nvar G__48009 = chunk__47001_47994;\nvar G__48010 = count__47002_47995;\nvar G__48011 = (i__47003_47996 + (1));\nseq__47000_47993 = G__48008;\nchunk__47001_47994 = G__48009;\ncount__47002_47995 = G__48010;\ni__47003_47996 = G__48011;\ncontinue;\n} else {\nvar temp__5753__auto___48012 = cljs.core.seq(seq__47000_47993);\nif(temp__5753__auto___48012){\nvar seq__47000_48013__$1 = temp__5753__auto___48012;\nif(cljs.core.chunked_seq_QMARK_(seq__47000_48013__$1)){\nvar c__4649__auto___48014 = cljs.core.chunk_first(seq__47000_48013__$1);\nvar G__48015 = cljs.core.chunk_rest(seq__47000_48013__$1);\nvar G__48016 = c__4649__auto___48014;\nvar G__48017 = cljs.core.count(c__4649__auto___48014);\nvar G__48018 = (0);\nseq__47000_47993 = G__48015;\nchunk__47001_47994 = G__48016;\ncount__47002_47995 = G__48017;\ni__47003_47996 = G__48018;\ncontinue;\n} else {\nvar vec__47013_48019 = cljs.core.first(seq__47000_48013__$1);\nvar __48020 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47013_48019,(0),null);\nvar spec_48021__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47013_48019,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_48021__$1);\n\n\nvar G__48022 = cljs.core.next(seq__47000_48013__$1);\nvar G__48023 = null;\nvar G__48024 = (0);\nvar G__48025 = (0);\nseq__47000_47993 = G__48022;\nchunk__47001_47994 = G__48023;\ncount__47002_47995 = G__48024;\ni__47003_47996 = G__48025;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),import_map,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),import_map], null);\n});\n/**\n * Given a spec form check whether the spec namespace requires a macro file\n * of the same name. If so return true.\n */\ncljs.analyzer.macro_autoload_ns_QMARK_ = (function cljs$analyzer$macro_autoload_ns_QMARK_(form){\nif(cljs.core.truth_(cljs.analyzer._STAR_macro_infer_STAR_)){\nvar ns = ((cljs.core.sequential_QMARK_(form))?cljs.core.first(form):form);\nvar map__47016 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null));\nvar map__47016__$1 = cljs.core.__destructure_map(map__47016);\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47016__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47016__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar or__4223__auto__ = cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(use_macros));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(require_macros));\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given a symbol that starts with clojure as the first segment return the\n * same symbol with the first segment replaced with cljs\n */\ncljs.analyzer.clj_ns__GT_cljs_ns = (function cljs$analyzer$clj_ns__GT_cljs_ns(sym){\nvar segs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure\",cljs.core.first(segs))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.cons(\"cljs\",cljs.core.next(segs))));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.canonicalize_specs = (function cljs$analyzer$canonicalize_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nvar spec = cljs.core.second(quoted_spec_or_kw);\nif(((cljs.core.vector_QMARK_(spec)) || (cljs.core.map_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\n}\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\ncljs.analyzer.canonicalize_import_specs = (function cljs$analyzer$canonicalize_import_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_import_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nreturn cljs.core.second(quoted_spec_or_kw);\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\n/**\n * Given an original set of ns specs desugar :include-macros and :refer-macros\n * usage into only primitive spec forms - :use, :require, :use-macros,\n * :require-macros. If a library includes a macro file of with the same name\n * as the namespace will also be desugared.\n */\ncljs.analyzer.desugar_ns_specs = (function cljs$analyzer$desugar_ns_specs(args){\nvar map__47018 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__47019){\nvar vec__47020 = p__47019;\nvar seq__47021 = cljs.core.seq(vec__47020);\nvar first__47022 = cljs.core.first(seq__47021);\nvar seq__47021__$1 = cljs.core.next(seq__47021);\nvar k = first__47022;\nvar specs = seq__47021__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,specs)], null);\n}),args));\nvar map__47018__$1 = cljs.core.__destructure_map(map__47018);\nvar indexed = map__47018__$1;\nvar require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47018__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953),null], null), null);\nvar remove_from_spec = (function (pred,spec){\nwhile(true){\nif(cljs.core.not((function (){var and__4221__auto__ = cljs.core.sequential_QMARK_(spec);\nif(and__4221__auto__){\nreturn cljs.core.some(pred,spec);\n} else {\nreturn and__4221__auto__;\n}\n})())){\nreturn spec;\n} else {\nvar vec__47023 = cljs.core.split_with(cljs.core.complement(pred),spec);\nvar l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47023,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47023,(1),null);\nvar G__48029 = pred;\nvar G__48030 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),r));\npred = G__48029;\nspec = G__48030;\ncontinue;\n}\nbreak;\n}\n});\nvar replace_refer_macros = (function (spec){\nif((!(cljs.core.sequential_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953))){\nreturn new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\n} else {\nreturn x;\n}\n}),spec);\n}\n});\nvar reload_spec_QMARK_ = (function (p1__47017_SHARP_){\nvar fexpr__47026 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null);\nreturn (fexpr__47026.cljs$core$IFn$_invoke$arity$1 ? fexpr__47026.cljs$core$IFn$_invoke$arity$1(p1__47017_SHARP_) : fexpr__47026.call(null,p1__47017_SHARP_));\n});\nvar to_macro_specs = (function (specs){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nreturn replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null], null), null),x))));\n} else {\nreturn x;\n}\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (x){\nvar or__4223__auto__ = (function (){var and__4221__auto__ = cljs.core.sequential_QMARK_(x);\nif(and__4221__auto__){\nreturn cljs.core.some(sugar_keys,x);\n} else {\nreturn and__4221__auto__;\n}\n})();\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = reload_spec_QMARK_(x);\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.analyzer.macro_autoload_ns_QMARK_(x);\n}\n}\n}),specs));\n});\nvar remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec,sugar_keys);\nvar temp__5755__auto__ = cljs.core.seq(to_macro_specs(require));\nif((temp__5755__auto__ == null)){\nreturn args;\n} else {\nvar require_specs = temp__5755__auto__;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nvar vec__47027 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47027,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47027,(1),null);\nreturn cljs.core.cons(k,cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar,v));\n} else {\nreturn x;\n}\n}),cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),require_specs));\n}\n});\ncljs.analyzer.find_def_clash = (function cljs$analyzer$find_def_clash(env,ns,segments){\nvar to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xs){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.butlast(xs))),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);\n}),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.PersistentVector.EMPTY,segments)));\nvar seq__47030 = cljs.core.seq(to_check);\nvar chunk__47031 = null;\nvar count__47032 = (0);\nvar i__47033 = (0);\nwhile(true){\nif((i__47033 < count__47032)){\nvar vec__47040 = chunk__47031.cljs$core$IIndexed$_nth$arity$2(null,i__47033);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47040,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47040,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__48046 = seq__47030;\nvar G__48047 = chunk__47031;\nvar G__48048 = count__47032;\nvar G__48049 = (i__47033 + (1));\nseq__47030 = G__48046;\nchunk__47031 = G__48047;\ncount__47032 = G__48048;\ni__47033 = G__48049;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__47030);\nif(temp__5753__auto__){\nvar seq__47030__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__47030__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__47030__$1);\nvar G__48050 = cljs.core.chunk_rest(seq__47030__$1);\nvar G__48051 = c__4649__auto__;\nvar G__48052 = cljs.core.count(c__4649__auto__);\nvar G__48053 = (0);\nseq__47030 = G__48050;\nchunk__47031 = G__48051;\ncount__47032 = G__48052;\ni__47033 = G__48053;\ncontinue;\n} else {\nvar vec__47043 = cljs.core.first(seq__47030__$1);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47043,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47043,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__48054 = cljs.core.next(seq__47030__$1);\nvar G__48055 = null;\nvar G__48056 = (0);\nvar G__48057 = (0);\nseq__47030 = G__48054;\nchunk__47031 = G__48055;\ncount__47032 = G__48056;\ni__47033 = G__48057;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.macro_ns_name = (function cljs$analyzer$macro_ns_name(name){\nvar name_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.not(goog.string.endsWith(name_str,\"$macros\"))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([name_str,\"$macros\"].join(''));\n} else {\nreturn name;\n}\n});\ncljs.analyzer.check_duplicate_aliases = (function cljs$analyzer$check_duplicate_aliases(env,old,new$){\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(old);\nvar seq__47046 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null));\nvar chunk__47047 = null;\nvar count__47048 = (0);\nvar i__47049 = (0);\nwhile(true){\nif((i__47049 < count__47048)){\nvar k = chunk__47047.cljs$core$IIndexed$_nth$arity$2(null,i__47049);\nvar old_aliases_48060 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_48061 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5757__auto___48062 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_48061)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__47046,chunk__47047,count__47048,i__47049,old_aliases_48060,new_aliases_48061,k,ns_name){\nreturn (function (p__47058){\nvar vec__47059 = p__47058;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47059,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47059,(1),null);\nvar entry = vec__47059;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_48061,k__$1))));\n});})(seq__47046,chunk__47047,count__47048,i__47049,old_aliases_48060,new_aliases_48061,k,ns_name))\n,old_aliases_48060)));\nif((temp__5757__auto___48062 == null)){\n} else {\nvar alias_48063 = temp__5757__auto___48062;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_48063),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_48060,alias_48063))].join(''));\n}\n\n\nvar G__48064 = seq__47046;\nvar G__48065 = chunk__47047;\nvar G__48066 = count__47048;\nvar G__48067 = (i__47049 + (1));\nseq__47046 = G__48064;\nchunk__47047 = G__48065;\ncount__47048 = G__48066;\ni__47049 = G__48067;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__47046);\nif(temp__5753__auto__){\nvar seq__47046__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__47046__$1)){\nvar c__4649__auto__ = cljs.core.chunk_first(seq__47046__$1);\nvar G__48068 = cljs.core.chunk_rest(seq__47046__$1);\nvar G__48069 = c__4649__auto__;\nvar G__48070 = cljs.core.count(c__4649__auto__);\nvar G__48071 = (0);\nseq__47046 = G__48068;\nchunk__47047 = G__48069;\ncount__47048 = G__48070;\ni__47049 = G__48071;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__47046__$1);\nvar old_aliases_48072 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_48073 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5757__auto___48074 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_48073)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__47046,chunk__47047,count__47048,i__47049,old_aliases_48072,new_aliases_48073,k,seq__47046__$1,temp__5753__auto__,ns_name){\nreturn (function (p__47062){\nvar vec__47063 = p__47062;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47063,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47063,(1),null);\nvar entry = vec__47063;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_48073,k__$1))));\n});})(seq__47046,chunk__47047,count__47048,i__47049,old_aliases_48072,new_aliases_48073,k,seq__47046__$1,temp__5753__auto__,ns_name))\n,old_aliases_48072)));\nif((temp__5757__auto___48074 == null)){\n} else {\nvar alias_48092 = temp__5757__auto___48074;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_48092),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_48072,alias_48092))].join(''));\n}\n\n\nvar G__48093 = cljs.core.next(seq__47046__$1);\nvar G__48094 = null;\nvar G__48095 = (0);\nvar G__48096 = (0);\nseq__47046 = G__48093;\nchunk__47047 = G__48094;\ncount__47048 = G__48095;\ni__47049 = G__48096;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.merge_ns_info = (function cljs$analyzer$merge_ns_info(old,new$,env){\nif((cljs.core.count(old) > (0))){\nvar deep_merge_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394)], null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([old,cljs.core.select_keys(new$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null)),cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(old,deep_merge_keys),cljs.core.select_keys(new$,deep_merge_keys)], 0))], 0));\n} else {\nreturn new$;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),(function (_,env,p__47068,___$1,opts){\nvar vec__47069 = p__47068;\nvar seq__47070 = cljs.core.seq(vec__47069);\nvar first__47071 = cljs.core.first(seq__47070);\nvar seq__47070__$1 = cljs.core.next(seq__47070);\nvar ___$2 = first__47071;\nvar first__47071__$1 = cljs.core.first(seq__47070__$1);\nvar seq__47070__$2 = cljs.core.next(seq__47070__$1);\nvar name = first__47071__$1;\nvar args = seq__47070__$2;\nvar form = vec__47069;\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespace declarations must appear at the top-level.\");\n}\n\nif((name instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespaces must be named by a symbol.\");\n}\n\nvar name__$1 = (function (){var G__47072 = name;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.analyzer.macro_ns_name(G__47072);\n} else {\nreturn G__47072;\n}\n})();\nvar segments_48097 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(segments_48097))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\nvar segment_48098 = cljs.core.some(cljs.analyzer.js_reserved,segments_48097);\nif((!((segment_48098 == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\ncljs.analyzer.find_def_clash(env,name__$1,segments_48097);\n\nvar docstring = ((typeof cljs.core.first(args) === 'string')?cljs.core.first(args):null);\nvar mdocstr = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));\nvar args__$1 = (((!((docstring == null))))?cljs.core.next(args):args);\nvar metadata = ((cljs.core.map_QMARK_(cljs.core.first(args__$1)))?cljs.core.first(args__$1):null);\nvar args__$2 = cljs.analyzer.desugar_ns_specs((((!((metadata == null))))?cljs.core.next(args__$1):args__$1));\nvar name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1,cljs.core.merge,metadata);\nvar map__47073 = cljs.analyzer.parse_ns_excludes(env,args__$2);\nvar map__47073__$1 = cljs.core.__destructure_map(map__47073);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47073__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47073__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__47078){\nvar vec__47079 = p__47078;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47079,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47079,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar valid_forms = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null));\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__47074 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__47082){\nvar vec__47083 = p__47082;\nvar seq__47084 = cljs.core.seq(vec__47083);\nvar first__47085 = cljs.core.first(seq__47084);\nvar seq__47084__$1 = cljs.core.next(seq__47084);\nvar k = first__47085;\nvar libs = seq__47084__$1;\nvar libspec = vec__47083;\nif(cljs.core.truth_((function (){var fexpr__47086 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null);\nreturn (fexpr__47086.cljs$core$IFn$_invoke$arity$1 ? fexpr__47086.cljs$core$IFn$_invoke$arity$1(k) : fexpr__47086.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(libspec),\" instead.\"].join(''));\n}\n\nif(cljs.core.truth_((function (){var fexpr__47087 = cljs.core.deref(valid_forms);\nreturn (fexpr__47087.cljs$core$IFn$_invoke$arity$1 ? fexpr__47087.cljs$core$IFn$_invoke$arity$1(k) : fexpr__47087.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only one \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\" form is allowed per namespace definition\"].join(''));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms,cljs.core.disj,k);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5753__auto___48107 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__47066_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__47066_SHARP_));\n}),libs));\nif(temp__5753__auto___48107){\nvar xs_48108 = temp__5753__auto___48107;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_48108),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47067_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__47067_SHARP_));\n}),xs_48108)));\n} else {\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__47088){\nvar vec__47089 = p__47088;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47089,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args__$2));\nvar map__47074__$1 = cljs.core.__destructure_map(map__47074);\nvar params = map__47074__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47074__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\nvar vec__47075 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (spec_map){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2),(0),(((cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2)).length) - (7))));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__47092){\nvar vec__47093 = p__47092;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47093,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47093,(1),null);\nvar G__47096 = m;\nif((!(cljs.core.symbol_identical_QMARK_(v,ns)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__47096,k,v);\n} else {\nreturn G__47096;\n}\n}),cljs.core.PersistentArrayMap.EMPTY,spec_map);\n} else {\nreturn spec_map;\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [require_macros,use_macros], null));\nvar require_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47075,(0),null);\nvar use_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47075,(1),null);\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2);\n\nvar ns_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros__$1,excludes,name__$2,imports,requires,uses,require_macros__$1,(function (){var or__4223__auto__ = docstring;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn mdocstr;\n}\n})()]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name__$2], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__47097 = ns_info;\nvar G__47097__$1 = (cljs.core.truth_((function (){var fexpr__47098 = cljs.core.deref(reload);\nreturn (fexpr__47098.cljs$core$IFn$_invoke$arity$1 ? fexpr__47098.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__47098.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__47097,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__47099 = cljs.core.deref(reload);\nreturn (fexpr__47099.cljs$core$IFn$_invoke$arity$1 ? fexpr__47099.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__47099.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__47097);\nif(cljs.core.truth_((function (){var fexpr__47100 = cljs.core.deref(reload);\nreturn (fexpr__47100.cljs$core$IFn$_invoke$arity$1 ? fexpr__47100.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__47100.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__47097__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__47101 = cljs.core.deref(reload);\nreturn (fexpr__47101.cljs$core$IFn$_invoke$arity$1 ? fexpr__47101.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__47101.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__47097__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),(function (_,env,p__47105,___$1,opts){\nvar vec__47106 = p__47105;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47106,(0),null);\nvar quoted_specs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47106,(1),null);\nvar form = vec__47106;\nvar temp__5753__auto___48129 = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__47102_SHARP_){\nreturn ((cljs.core.seq_QMARK_(p1__47102_SHARP_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(p1__47102_SHARP_))));\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,quoted_specs)));\nif(cljs.core.truth_(temp__5753__auto___48129)){\nvar not_quoted_48130 = temp__5753__auto___48129;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Arguments to \",cljs.core.name(cljs.core.first(quoted_specs)),\" must be quoted. Offending spec: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(not_quoted_48130)].join(''));\n} else {\n}\n\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Calls to `\",cljs.core.name(cljs.core.first(quoted_specs)),\"` must appear at the top-level.\"].join(''));\n}\n\nvar specs = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.first(quoted_specs)))?cljs.analyzer.canonicalize_import_specs(quoted_specs):cljs.analyzer.canonicalize_specs(quoted_specs));\nvar name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar args = cljs.analyzer.desugar_ns_specs((new cljs.core.List(null,specs,null,(1),null)));\nvar map__47109 = cljs.analyzer.parse_ns_excludes(env,args);\nvar map__47109__$1 = cljs.core.__destructure_map(map__47109);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47109__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47109__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__47111){\nvar vec__47112 = p__47111;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47112,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47112,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__47110 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__47115){\nvar vec__47116 = p__47115;\nvar seq__47117 = cljs.core.seq(vec__47116);\nvar first__47118 = cljs.core.first(seq__47117);\nvar seq__47117__$1 = cljs.core.next(seq__47117);\nvar k = first__47118;\nvar libs = seq__47117__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5757__auto___48132 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__47103_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__47103_SHARP_));\n}),libs));\nif((temp__5757__auto___48132 == null)){\n} else {\nvar xs_48134 = temp__5757__auto___48132;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_48134),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47104_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__47104_SHARP_));\n}),xs_48134)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__47119){\nvar vec__47120 = p__47119;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47120,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args));\nvar map__47110__$1 = cljs.core.__destructure_map(map__47110);\nvar params = map__47110__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47110__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name);\n\nvar require_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros,excludes,name,imports,requires,uses,require_macros]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null),cljs.analyzer.merge_ns_info,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([require_info,env], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns*\",\"ns*\",200417856),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__47123 = require_info;\nvar G__47123__$1 = (cljs.core.truth_((function (){var fexpr__47124 = cljs.core.deref(reload);\nreturn (fexpr__47124.cljs$core$IFn$_invoke$arity$1 ? fexpr__47124.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__47124.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__47123,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__47125 = cljs.core.deref(reload);\nreturn (fexpr__47125.cljs$core$IFn$_invoke$arity$1 ? fexpr__47125.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__47125.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__47123);\nif(cljs.core.truth_((function (){var fexpr__47126 = cljs.core.deref(reload);\nreturn (fexpr__47126.cljs$core$IFn$_invoke$arity$1 ? fexpr__47126.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__47126.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__47123__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__47127 = cljs.core.deref(reload);\nreturn (fexpr__47127.cljs$core$IFn$_invoke$arity$1 ? fexpr__47127.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__47127.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__47123__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse_type = (function cljs$analyzer$parse_type(op,env,p__47128){\nvar vec__47129 = p__47128;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47129,(0),null);\nvar tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47129,(1),null);\nvar fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47129,(2),null);\nvar pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47129,(3),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47129,(4),null);\nvar form = vec__47129;\nvar t = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),tsym));\nvar locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,fld){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,fld,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[fld,true,cljs.analyzer.get_col(fld,env),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),cljs.analyzer.get_line(fld,env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null,fld)),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500)]));\n}),cljs.core.PersistentArrayMap.EMPTY,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op))?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"__meta\",\"__meta\",-946752628,null),new cljs.core.Symbol(null,\"__extmap\",\"__extmap\",-1435580931,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"__hash\",\"__hash\",-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null)):fields));\nvar protocols = new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),tsym], null),(function (m){\nvar m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((function (){var or__4223__auto__ = m;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),t,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),true,new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024),cljs.core.count(fields),new cljs.core.Keyword(null,\"record\",\"record\",-779106859),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op)], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m__$1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),protocols], null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym,env)], 0));\n}));\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"pmasks\",\"pmasks\",-871416698),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),pmasks,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols,new cljs.core.Symbol(\"cljs.core\",\"Object\",\"cljs.core/Object\",-345545431,null)),fields,op,env,t,form,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),(function (){var G__47132 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals);\nvar G__47133 = body;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__47132,G__47133) : cljs.analyzer.analyze.call(null,G__47132,G__47133));\n})()]);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"deftype\",\"deftype\",340294561),env,form);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),env,form);\n}));\ncljs.analyzer.property_symbol_QMARK_ = (function cljs$analyzer$property_symbol_QMARK_(p1__47134_SHARP_){\nreturn cljs.core.boolean$((function (){var and__4221__auto__ = (p1__47134_SHARP_ instanceof cljs.core.Symbol);\nif(and__4221__auto__){\nreturn cljs.core.re_matches(/^-.*/,cljs.core.name(p1__47134_SHARP_));\n} else {\nreturn and__4221__auto__;\n}\n})());\n});\ncljs.analyzer.classify_dot_form = (function cljs$analyzer$classify_dot_form(p__47135){\nvar vec__47136 = p__47135;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47136,(0),null);\nvar member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47136,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47136,(2),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(((target == null))?new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642):new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n),((cljs.analyzer.property_symbol_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886):(((member instanceof cljs.core.Symbol))?new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902):((cljs.core.seq_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923):new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642)\n))),(((args == null))?cljs.core.List.EMPTY:new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n)], null);\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.build_dot_form !== 'undefined')){\n} else {\ncljs.analyzer.build_dot_form = (function (){var method_table__4712__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4713__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4714__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4715__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4716__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__47140 = cljs.core.get_global_hierarchy;\nreturn (fexpr__47140.cljs$core$IFn$_invoke$arity$0 ? fexpr__47140.cljs$core$IFn$_invoke$arity$0() : fexpr__47140.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"build-dot-form\"),(function (p1__47139_SHARP_){\nreturn cljs.analyzer.classify_dot_form(p1__47139_SHARP_);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4716__auto__,method_table__4712__auto__,prefer_table__4713__auto__,method_cache__4714__auto__,cached_hierarchy__4715__auto__));\n})();\n}\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),cljs.core.List.EMPTY], null),(function (p__47141){\nvar vec__47142 = p__47141;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47142,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47142,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47142,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"access\",\"cljs.analyzer/access\",-1639036494),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring((1))),cljs.core.meta(prop))], null);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923)], null),(function (p__47145){\nvar vec__47146 = p__47145;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47146,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47146,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47146,(2),null);\nthrow (new Error([\"Cannot provide arguments \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args),\" on property access \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop)].join('')));\n}));\n/**\n * Builds the intermediate method call map used to reason about the parsed form during\n *   compilation.\n */\ncljs.analyzer.build_method_call = (function cljs$analyzer$build_method_call(target,meth,args){\nif((meth instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),meth,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),cljs.core.first(meth),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n}\n});\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)], null),(function (p__47149){\nvar vec__47150 = p__47149;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47150,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47150,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47150,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),cljs.core.List.EMPTY], null),(function (p__47153){\nvar vec__47154 = p__47153;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47154,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47154,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47154,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923),cljs.core.List.EMPTY], null),(function (p__47157){\nvar vec__47158 = p__47157;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47158,(0),null);\nvar meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47158,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47158,(2),null);\nreturn cljs.analyzer.build_method_call(target,cljs.core.first(meth_expr),cljs.core.rest(meth_expr));\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (dot_form){\nthrow (new Error([\"Unknown dot form of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\".\",\".\",1975675962,null),dot_form)),\" with classification \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form(dot_form))].join('')));\n}));\ncljs.analyzer.analyze_dot = (function cljs$analyzer$analyze_dot(env,target,field,member_PLUS_,form){\nvar v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,field,member_PLUS_], null);\nvar map__47162 = cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v);\nvar map__47162__$1 = cljs.core.__destructure_map(map__47162);\nvar dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47162__$1,new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601));\nvar target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47162__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47162__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nvar field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47162__$1,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47162__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar targetexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze.call(null,enve,target__$1));\nvar form_meta = cljs.core.meta(form);\nvar target_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(targetexpr);\nvar prop = (function (){var or__4223__auto__ = field__$1;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn method;\n}\n})();\nvar tag = (function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = (function (){var and__4221__auto__ = cljs.analyzer.js_tag_QMARK_(target_tag);\nif(and__4221__auto__){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.analyzer.normalize_js_tag(target_tag),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null)),prop);\n} else {\nreturn and__4221__auto__;\n}\n})();\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn null;\n}\n}\n})();\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"constructor\",\"constructor\",-313397284,null),prop)) && ((((!(clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop),\"cljs$\")))) && (cljs.core.not(new cljs.core.Keyword(null,\"protocol-prop\",\"protocol-prop\",-58388138).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(prop)))))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),cljs.core.first(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"object\",\"object\",1474613949),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),target_tag)){\nif(cljs.core.truth_((function (){var or__4223__auto__ = (target_tag == null);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar fexpr__47163 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\"], null), null);\nreturn (fexpr__47163.cljs$core$IFn$_invoke$arity$1 ? fexpr__47163.cljs$core$IFn$_invoke$arity$1(target_tag) : fexpr__47163.call(null,target_tag));\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nvar vec__47164_48174 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast,cljs.core.identity)(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)));\nvar pre_SINGLEQUOTE__48175 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47164_48174,(0),null);\nvar pre_48176 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47164_48174,(1),null);\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_SINGLEQUOTE__48175);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_48176));\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",(function (){var G__47167 = pre_SINGLEQUOTE__48175;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null),cljs.core.last(pre_SINGLEQUOTE__48175))){\nreturn cljs.core.butlast(G__47167);\n} else {\nreturn G__47167;\n}\n})())),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nif(cljs.analyzer.js_tag_QMARK_(tag)){\nvar pre_48179 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_48179))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre_48179),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n} else {\n}\n\nvar G__47168 = dot_action;\nvar G__47168__$1 = (((G__47168 instanceof cljs.core.Keyword))?G__47168.fqn:null);\nswitch (G__47168__$1) {\ncase \"cljs.analyzer/access\":\nvar children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4223__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn tag;\n}\n})():tag)], null);\n\nbreak;\ncase \"cljs.analyzer/call\":\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47161_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__47161_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__47161_SHARP_));\n}),args);\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null);\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-call\",\"host-call\",1059629755),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"method\",\"method\",55703592),method,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4223__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n})():tag)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__47168__$1)].join('')));\n\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(function (_,env,p__47169,___$1,___$2){\nvar vec__47170 = p__47169;\nvar seq__47171 = cljs.core.seq(vec__47170);\nvar first__47172 = cljs.core.first(seq__47171);\nvar seq__47171__$1 = cljs.core.next(seq__47171);\nvar ___$3 = first__47172;\nvar first__47172__$1 = cljs.core.first(seq__47171__$1);\nvar seq__47171__$2 = cljs.core.next(seq__47171__$1);\nvar target = first__47172__$1;\nvar vec__47173 = seq__47171__$2;\nvar seq__47174 = cljs.core.seq(vec__47173);\nvar first__47175 = cljs.core.first(seq__47174);\nvar seq__47174__$1 = cljs.core.next(seq__47174);\nvar field = first__47175;\nvar member_PLUS_ = seq__47174__$1;\nvar form = vec__47170;\nvar _STAR_recur_frames_STAR__orig_val__47176 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47177 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47177);\n\ntry{return cljs.analyzer.analyze_dot(env,target,field,member_PLUS_,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47176);\n}}));\ncljs.analyzer.get_js_tag = (function cljs$analyzer$get_js_tag(form){\nvar form_meta = cljs.core.meta(form);\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif((temp__5755__auto__ == null)){\nif(new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta) === true){\nreturn new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\n} else {\nreturn null;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.js_star_interp = (function cljs$analyzer$js_star_interp(env,s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nvar inner = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,((2) + idx),end))));\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),cljs.core.cons(inner,(function (){var G__47178 = env;\nvar G__47179 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2(G__47178,G__47179) : cljs.analyzer.js_star_interp.call(null,G__47178,G__47179));\n})()));\n}),null,null));\n}\n});\ncljs.analyzer.js_star_seg = (function cljs$analyzer$js_star_seg(s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),(function (){var G__47180 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1(G__47180) : cljs.analyzer.js_star_seg.call(null,G__47180));\n})());\n}),null,null));\n}\n});\ncljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\",new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null),\"null\",new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null),\"null\",new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),\"null\"], null), null);\ncljs.analyzer.numeric_type_QMARK_ = (function cljs$analyzer$numeric_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif((((t instanceof cljs.core.Symbol)) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET,t) == null)))))){\nreturn true;\n} else {\nif(cljs.analyzer.impl.cljs_set_QMARK_(t)){\nreturn ((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null))) || (((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null))) || (((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null))) || (((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null))))))))));\n} else {\nreturn null;\n}\n}\n\n}\n}\n}\n});\ncljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\",new cljs.core.Symbol(null,\"floats\",\"floats\",513591110,null),\"null\",new cljs.core.Symbol(null,\"longs\",\"longs\",-1017696020,null),\"null\",new cljs.core.Symbol(null,\"objects\",\"objects\",-554722035,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"doubles\",\"doubles\",-1517872169,null),\"null\",new cljs.core.Symbol(null,\"chars\",\"chars\",545901210,null),\"null\",new cljs.core.Symbol(null,\"ints\",\"ints\",-1761239845,null),\"null\",new cljs.core.Symbol(null,\"shorts\",\"shorts\",107738238,null),\"null\",new cljs.core.Symbol(null,\"bytes\",\"bytes\",-1478569089,null),\"null\"], null), null);\ncljs.analyzer.array_type_QMARK_ = (function cljs$analyzer$array_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),t)){\nreturn true;\n} else {\nif(cljs.core.contains_QMARK_(cljs.analyzer.array_types,t)){\nreturn true;\n} else {\nreturn cljs.core.boolean$(((cljs.analyzer.impl.cljs_set_QMARK_(t))?(function (){var or__4223__auto__ = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null));\nif(or__4223__auto____$1){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.core.some(cljs.analyzer.array_types,t);\n}\n}\n})():null));\n\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_js_star_args = (function cljs$analyzer$analyze_js_star_args(js_op,env,args){\nreturn cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__47181,arg){\nvar vec__47182 = p__47181;\nvar argexprs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47182,(0),null);\nvar env__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47182,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(argexprs,(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env__$1,arg) : cljs.analyzer.analyze.call(null,env__$1,arg))),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_op,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",-6692549,null)))?cljs.analyzer.set_test_induced_tags(env__$1,arg):env__$1)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,env], null),args));\n});\ncljs.analyzer.analyze_js_star_STAR_ = (function cljs$analyzer$analyze_js_star_STAR_(env,jsform,args,form){\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar form_meta = cljs.core.meta(form);\nvar segs = cljs.analyzer.js_star_seg(jsform);\nvar tag = cljs.analyzer.get_js_tag(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar argexprs = cljs.analyzer.analyze_js_star_args(js_op,enve,args);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar validate = (function (warning_type,valid_types_QMARK_){\nvar types = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47185_SHARP_){\nreturn cljs.analyzer.infer_tag(env,p1__47185_SHARP_);\n}),argexprs);\nif(cljs.core.truth_((valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1(types) : valid_types_QMARK_.call(null,types)))){\nreturn null;\n} else {\nreturn cljs.analyzer.warning(warning_type,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"types\",\"types\",590030639),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,types)], null));\n}\n});\nvar op_match_QMARK_ = (function (sym){\nreturn cljs.core.symbol_identical_QMARK_(sym,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta));\n});\nif(numeric === true){\nvalidate(new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (p1__47186_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,p1__47186_SHARP_);\n}));\n} else {\n}\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),new cljs.core.Keyword(null,\"segs\",\"segs\",-1940299576),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)],[argexprs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),numeric,segs,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),env,js_op,form,tag]);\n});\ncljs.analyzer.analyze_js_star = (function cljs$analyzer$analyze_js_star(env,jsform,args,form){\nvar _STAR_recur_frames_STAR__orig_val__47187 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47188 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47188);\n\ntry{return cljs.analyzer.analyze_js_star_STAR_(env,jsform,args,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47187);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),(function (op,env,p__47189,_,___$1){\nvar vec__47190 = p__47189;\nvar seq__47191 = cljs.core.seq(vec__47190);\nvar first__47192 = cljs.core.first(seq__47191);\nvar seq__47191__$1 = cljs.core.next(seq__47191);\nvar ___$2 = first__47192;\nvar first__47192__$1 = cljs.core.first(seq__47191__$1);\nvar seq__47191__$2 = cljs.core.next(seq__47191__$1);\nvar jsform = first__47192__$1;\nvar args = seq__47191__$2;\nvar form = vec__47190;\nif(typeof jsform === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid js* form\");\n}\n\nif((!((args == null)))){\nreturn cljs.analyzer.analyze_js_star(env,jsform,args,form);\n} else {\nvar code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.analyzer.js_star_interp(env,jsform));\nvar tag = cljs.analyzer.get_js_tag(form);\nvar form_meta = cljs.core.meta(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js\",\"js\",1768080579),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),numeric], null);\n}\n}));\ncljs.analyzer.unsorted_map_QMARK_ = (function cljs$analyzer$unsorted_map_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && ((!(cljs.core.sorted_QMARK_(x)))));\n});\n/**\n * Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n *   warnings that will have been caught by a first compiler pass.\n */\ncljs.analyzer.analyzed = (function cljs$analyzer$analyzed(x){\nif(cljs.analyzer.unsorted_map_QMARK_(x)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n} else {\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n\n}\n});\n/**\n * Returns boolean if the form has already been marked as analyzed.\n */\ncljs.analyzer.analyzed_QMARK_ = (function cljs$analyzer$analyzed_QMARK_(x){\nreturn cljs.core.boolean$(((cljs.analyzer.unsorted_map_QMARK_(x))?new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(x):new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x))\n));\n});\ncljs.analyzer.all_values_QMARK_ = (function cljs$analyzer$all_values_QMARK_(exprs){\nreturn cljs.core.every_QMARK_((function (p1__47193_SHARP_){\nreturn (((p1__47193_SHARP_ == null)) || ((((p1__47193_SHARP_ instanceof cljs.core.Symbol)) || (((typeof p1__47193_SHARP_ === 'string') || (((typeof p1__47193_SHARP_ === 'number') || (((p1__47193_SHARP_ === true) || (p1__47193_SHARP_ === false))))))))));\n}),exprs);\n});\ncljs.analyzer.valid_arity_QMARK_ = (function cljs$analyzer$valid_arity_QMARK_(argc,method_params){\nreturn (((method_params == null)) || (cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([argc]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,method_params)))));\n});\ncljs.analyzer.record_tag_QMARK_ = (function cljs$analyzer$record_tag_QMARK_(tag){\nreturn cljs.core.boolean$((function (){var and__4221__auto__ = (tag instanceof cljs.core.Symbol);\nif(and__4221__auto__){\nvar and__4221__auto____$1 = (!((cljs.core.namespace(tag) == null)));\nif(and__4221__auto____$1){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(tag)),new cljs.core.Keyword(null,\"record\",\"record\",-779106859)], null));\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})());\n});\ncljs.analyzer.record_basis = (function cljs$analyzer$record_basis(tag){\nvar positional_factory = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\"->\",cljs.core.name(tag)].join(''));\nvar fields = cljs.core.first(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),positional_factory,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179)], null)));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,fields);\n});\ncljs.analyzer.record_with_field_QMARK_ = (function cljs$analyzer$record_with_field_QMARK_(tag,field){\nreturn ((cljs.analyzer.record_tag_QMARK_(tag)) && (cljs.core.contains_QMARK_(cljs.analyzer.record_basis(tag),field)));\n});\ncljs.analyzer.invalid_arity_QMARK_ = (function cljs$analyzer$invalid_arity_QMARK_(argc,method_params,variadic,max_fixed_arity){\nvar and__4221__auto__ = (!(cljs.analyzer.valid_arity_QMARK_(argc,method_params)));\nif(and__4221__auto__){\nvar or__4223__auto__ = cljs.core.not(variadic);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nvar and__4221__auto____$1 = variadic;\nif(cljs.core.truth_(and__4221__auto____$1)){\nreturn (argc < max_fixed_arity);\n} else {\nreturn and__4221__auto____$1;\n}\n}\n} else {\nreturn and__4221__auto__;\n}\n});\ncljs.analyzer.parse_invoke_STAR_ = (function cljs$analyzer$parse_invoke_STAR_(env,p__47195){\nvar vec__47196 = p__47195;\nvar seq__47197 = cljs.core.seq(vec__47196);\nvar first__47198 = cljs.core.first(seq__47197);\nvar seq__47197__$1 = cljs.core.next(seq__47197);\nvar f = first__47198;\nvar args = seq__47197__$1;\nvar form = vec__47196;\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar fexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,f) : cljs.analyzer.analyze.call(null,enve,f));\nvar argc = cljs.core.count(args);\nvar fn_var_QMARK_ = (function (){var or__4223__auto__ = new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\n}\n})();\nvar kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar cur_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar HO_invoke_QMARK_ = ((cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_)) && (((cljs.core.not(fn_var_QMARK_)) && ((((!(cljs.analyzer.js_tag_QMARK_(f)))) && ((((!(kw_QMARK_))) && ((!(cljs.analyzer.analyzed_QMARK_(f)))))))))));\nvar bind_f_expr_QMARK_ = ((HO_invoke_QMARK_) && ((!((f instanceof cljs.core.Symbol)))));\nvar bind_args_QMARK_ = ((HO_invoke_QMARK_) && ((!(cljs.analyzer.all_values_QMARK_(args)))));\nif(fn_var_QMARK_){\nvar map__47199_48199 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr);\nvar map__47199_48200__$1 = cljs.core.__destructure_map(map__47199_48199);\nvar variadic_48201 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47199_48200__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity_48202 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47199_48200__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params_48203 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47199_48200__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar name_48204 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47199_48200__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar ns_48205 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47199_48200__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar macro_48206 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47199_48200__$1,new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404));\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core.not((function (){var and__4221__auto__ = goog.string.endsWith(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur_ns),\"$macros\");\nif(cljs.core.truth_(and__4221__auto__)){\nreturn ((cljs.core.symbol_identical_QMARK_(cur_ns,ns_48205)) && (macro_48206 === true));\n} else {\nreturn and__4221__auto__;\n}\n})());\nif(and__4221__auto__){\nreturn cljs.analyzer.invalid_arity_QMARK_(argc,method_params_48203,variadic_48201,max_fixed_arity_48202);\n} else {\nreturn and__4221__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_48204,new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n} else {\n}\n\nif(((kw_QMARK_) && ((!(((((1) === argc)) || (((2) === argc)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.first(form),new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n\nvar deprecated_QMARK__48214 = new cljs.core.Keyword(null,\"deprecated\",\"deprecated\",1498275348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar no_warn_QMARK__48215 = new cljs.core.Keyword(null,\"deprecation-nowarn\",\"deprecation-nowarn\",-1762828044).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nif(((cljs.core.boolean$(deprecated_QMARK__48214)) && ((!(cljs.core.boolean$(no_warn_QMARK__48215)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif(((bind_args_QMARK_) || (bind_f_expr_QMARK_))){\nvar arg_syms = ((bind_args_QMARK_)?cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)):null);\nvar f_sym = ((bind_f_expr_QMARK_)?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"fexpr__\"):null);\nvar bindings = (function (){var G__47200 = cljs.core.PersistentVector.EMPTY;\nvar G__47200__$1 = ((bind_args_QMARK_)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__47200,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms,args)):G__47200);\nif(bind_f_expr_QMARK_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__47200__$1,f_sym,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.analyzed(f)], 0));\n} else {\nreturn G__47200__$1;\n}\n})();\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar G__47201 = env;\nvar G__47202 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(bindings)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.analyzer.analyzed(((bind_f_expr_QMARK_)?f_sym:f)),null,(1),null)),((bind_args_QMARK_)?arg_syms:args)))),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag], null)),null,(1),null))], 0))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__47201,G__47202) : cljs.analyzer.analyze.call(null,G__47201,G__47202));\n} else {\nvar ana_expr = (function (p1__47194_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__47194_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__47194_SHARP_));\n});\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(ana_expr,args);\nif((((((f instanceof cljs.core.Keyword)) && ((cljs.core.namespace(f) == null)))) && (((((1) === cljs.core.count(args))) && (cljs.analyzer.record_with_field_QMARK_(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.first(argexprs)),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(f)))))))){\nvar field_access_form = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\".-\",cljs.core.name(f)].join('')),args);\nvar _STAR_cljs_warnings_STAR__orig_val__47203 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__47204 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__47204);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,field_access_form) : cljs.analyzer.analyze.call(null,env,field_access_form));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__47203);\n}} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null)], null);\n}\n}\n});\ncljs.analyzer.parse_invoke = (function cljs$analyzer$parse_invoke(env,form){\nvar _STAR_recur_frames_STAR__orig_val__47205 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47206 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47206);\n\ntry{return cljs.analyzer.parse_invoke_STAR_(env,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47205);\n}});\ncljs.analyzer.desugar_dotted_expr = (function cljs$analyzer$desugar_dotted_expr(p__47207){\nvar map__47208 = p__47207;\nvar map__47208__$1 = cljs.core.__destructure_map(map__47208);\nvar expr = map__47208__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47208__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__47209 = op;\nvar G__47209__$1 = (((G__47209 instanceof cljs.core.Keyword))?G__47209.fqn:null);\nswitch (G__47209__$1) {\ncase \"var\":\ncase \"local\":\nif(cljs.analyzer.dotted_symbol_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr))))){\nvar s = cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr));\nvar idx = s.lastIndexOf(\".\");\nvar _ = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((idx + (1)),((s).length)))?null:(function(){throw (new Error(\"Assert failed: (not= (inc idx) (count s))\"))})());\nvar prefix = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx)),cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr)));\nvar field = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1))));\nif(cljs.core.not(new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(expr))){\n} else {\nthrow (new Error(\"Assert failed: (not (:const-expr expr))\"));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),(new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(new cljs.core.List(null,prefix,(new cljs.core.List(null,field,null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var G__47210 = cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(expr,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),prefix,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),prefix], 0)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null),prefix),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nreturn (cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1(G__47210) : cljs.analyzer.desugar_dotted_expr.call(null,G__47210));\n})(),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null)], null);\n} else {\nreturn expr;\n}\n\nbreak;\ndefault:\nreturn expr;\n\n}\n});\n/**\n * Finds the var associated with sym\n */\ncljs.analyzer.analyze_symbol = (function cljs$analyzer$analyze_symbol(env,sym){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nvar G__47211 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__47211) : cljs.analyzer.analyze_wrap_meta.call(null,G__47211));\n} else {\nvar map__47212 = cljs.core.meta(sym);\nvar map__47212__$1 = cljs.core.__destructure_map(map__47212);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47212__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47212__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar env__$1 = (((!((line == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line):env);\nvar env__$2 = (((!((column == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column):env__$1);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$2,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym], null);\nvar lcls = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env__$2);\nvar temp__5755__auto__ = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls,sym));\nif((temp__5755__auto__ == null)){\nvar sym_meta = cljs.core.meta(sym);\nvar sym_ns = cljs.core.namespace(sym);\nvar cur_ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$2)));\nvar sym__$1 = (cljs.core.truth_((function (){var and__4221__auto__ = sym_ns;\nif(cljs.core.truth_(and__4221__auto__)){\nvar and__4221__auto____$1 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,\"cljs.core\");\nif(and__4221__auto____$1){\nvar and__4221__auto____$2 = goog.string.endsWith(cur_ns,\"$macros\");\nif(cljs.core.truth_(and__4221__auto____$2)){\nreturn ((cljs.core.not(goog.string.endsWith(sym_ns,\"$macros\"))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cur_ns,(0),(((cur_ns).length) - (7))))));\n} else {\nreturn and__4221__auto____$2;\n}\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([sym_ns,\"$macros\"].join(''),cljs.core.name(sym)):sym);\nvar info = (((!(cljs.core.contains_QMARK_(sym_meta,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162)))))?cljs.analyzer.resolve_existing_var(env__$2,sym__$1):cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info))){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info)),\"\\n\",\"(:op info)\"].join('')));\n}\n\nreturn cljs.analyzer.desugar_dotted_expr((((!(new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377).cljs$core$IFn$_invoke$arity$1(env__$2) === true)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info),cljs.core.select_keys(info,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null)),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar const_expr = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})()], 0)):(function (){var info__$1 = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info__$1], 0)),cljs.core.select_keys(info__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0));\n})()));\n} else {\nvar lb = temp__5755__auto__;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),lb], 0)),((cljs.core.map_QMARK_(lb))?cljs.core.select_keys(lb,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)):null)], 0));\n}\n}\n});\ncljs.analyzer.excluded_QMARK_ = (function cljs$analyzer$excluded_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))));\n});\ncljs.analyzer.used_QMARK_ = (function cljs$analyzer$used_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))));\n});\ncljs.analyzer.get_expander_ns = (function cljs$analyzer$get_expander_ns(env,nstr){\nvar res = (function (){var or__4223__auto__ = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\n}\n})();\nvar nstr__$1 = (((!((res == null))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(res):nstr);\nif((\"clojure.core\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(cljs.analyzer.impl.CLJS_CORE_MACROS_SYM);\n} else {\nif((\"clojure.repl\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(new cljs.core.Symbol(null,\"cljs.repl\",\"cljs.repl\",1767065658,null));\n} else {\nif(cljs.core.truth_(goog.string.contains(nstr__$1,\".\"))){\nreturn cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1));\n} else {\nvar G__47213 = env;\nvar G__47213__$1 = (((G__47213 == null))?null:new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(G__47213));\nvar G__47213__$2 = (((G__47213__$1 == null))?null:new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(G__47213__$1));\nvar G__47213__$3 = (((G__47213__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__47213__$2,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1)));\nif((G__47213__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_macros_ns(G__47213__$3);\n}\n\n}\n}\n}\n});\ncljs.analyzer.get_expander_STAR_ = (function cljs$analyzer$get_expander_STAR_(sym,env){\nif((((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym) == null)))) || (((cljs.analyzer.excluded_QMARK_(env,sym)) && ((!(cljs.analyzer.used_QMARK_(env,sym)))))))){\nreturn null;\n} else {\nvar nstr = cljs.core.namespace(sym);\nif((!((nstr == null)))){\nvar ns = cljs.analyzer.get_expander_ns(env,nstr);\nif((!((ns == null)))){\nreturn ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\n} else {\nreturn null;\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym);\nvar nsym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym__$1);\n} else {\nvar nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym);\nif((((!((nsym == null)))) && ((nsym instanceof cljs.core.Symbol)))){\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym);\n} else {\nreturn cljs.core.find_macros_ns(cljs.analyzer.impl.CLJS_CORE_MACROS_SYM).findInternedVar(sym);\n}\n\n}\n}\n}\n});\n/**\n * Given a sym, a symbol identifying a macro, and env, an analysis environment\n * return the corresponding Clojure macroexpander.\n */\ncljs.analyzer.get_expander = (function cljs$analyzer$get_expander(sym,env){\nvar mvar = cljs.analyzer.get_expander_STAR_(sym,env);\nif((((!((mvar == null)))) && (mvar.isMacro()))){\nreturn mvar;\n} else {\nreturn null;\n}\n});\nvar cached_var_48241 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)),new cljs.core.Symbol(null,\"macroexpand-check\",\"macroexpand-check\",699092091,null));\n}),null));\ncljs.analyzer.get_macroexpand_check_var = (function cljs$analyzer$get_macroexpand_check_var(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)) == null)))){\nreturn cljs.core.deref(cached_var_48241);\n} else {\nreturn null;\n}\n});\ncljs.analyzer.var__GT_sym = (function cljs$analyzer$var__GT_sym(var$){\nreturn var$.sym;\n});\ncljs.analyzer.do_macroexpand_check = (function cljs$analyzer$do_macroexpand_check(env,form,mac_var){\nif(cljs.core.not(new cljs.core.Keyword(null,\"spec-skip-macros\",\"spec-skip-macros\",-645015958).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))){\nvar mchk = cljs.analyzer.get_macroexpand_check_var();\nif((!((mchk == null)))){\ntry{var G__47215 = mac_var;\nvar G__47216 = cljs.core.next(form);\nreturn (mchk.cljs$core$IFn$_invoke$arity$2 ? mchk.cljs$core$IFn$_invoke$arity$2(G__47215,G__47216) : mchk.call(null,G__47215,G__47216));\n}catch (e47214){var e = e47214;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macro-syntax-check\",\"macro-syntax-check\",2072602373),cljs.analyzer.var__GT_sym(mac_var)),e);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.check_macro_arity = (function cljs$analyzer$check_macro_arity(mac_var,form){\nvar mac_sym = mac_var.sym;\nvar temp__5753__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_sym)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_sym))], null));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar map__47218 = temp__5753__auto__;\nvar map__47218__$1 = cljs.core.__destructure_map(map__47218);\nvar variadic_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47218__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47218__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47218__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar argc = cljs.core.count(cljs.core.rest(form));\nvar offset = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"&form\",\"&form\",1482799337,null),cljs.core.ffirst(method_params)))?(2):(0));\nif(cljs.core.truth_(cljs.analyzer.invalid_arity_QMARK_(argc,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47217_SHARP_){\nreturn cljs.core.nthrest(p1__47217_SHARP_,offset);\n}),method_params),variadic_QMARK_,(cljs.core.truth_(max_fixed_arity)?(max_fixed_arity - offset):null)))){\nthrow (new Error(cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),mac_sym], null))));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.macroexpand_1_STAR_ = (function cljs$analyzer$macroexpand_1_STAR_(env,form){\nvar op = cljs.core.first(form);\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),op)){\ncljs.analyzer.do_macroexpand_check(env,form,cljs.analyzer.get_expander(new cljs.core.Symbol(\"cljs.core\",\"ns-special-form\",\"cljs.core/ns-special-form\",1585185745,null),env));\n} else {\n}\n\nreturn form;\n} else {\nvar temp__5755__auto__ = (((op instanceof cljs.core.Symbol))?cljs.analyzer.get_expander(op,env):null);\nif((temp__5755__auto__ == null)){\nif((op instanceof cljs.core.Symbol)){\nvar opname = cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);\nif((\".\" === opname.charAt((0)))){\nvar vec__47219 = cljs.core.next(form);\nvar seq__47220 = cljs.core.seq(vec__47219);\nvar first__47221 = cljs.core.first(seq__47220);\nvar seq__47220__$1 = cljs.core.next(seq__47220);\nvar target = first__47221;\nvar args = seq__47220__$1;\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.impl.DOT_SYM,target,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname,(1))),args),cljs.core.meta(form));\n} else {\nif((\".\" === opname.charAt((opname.length - (1))))){\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.impl.NEW_SYM,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname,(0),(((opname).length) - (1)))),cljs.core.next(form)),cljs.core.meta(form));\n} else {\nreturn form;\n\n}\n}\n} else {\nreturn form;\n}\n} else {\nvar mac_var = temp__5755__auto__;\ncljs.analyzer.do_macroexpand_check(env,form,mac_var);\n\nvar form_SINGLEQUOTE_ = (function (){try{cljs.analyzer.check_macro_arity(mac_var,form);\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(mac_var),form,env,cljs.core.rest(form));\n}catch (e47222){var e = e47222;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macroexpansion\",\"macroexpansion\",706274075),cljs.analyzer.var__GT_sym(mac_var)),e);\n}})();\nif(cljs.analyzer.impl.cljs_seq_QMARK_(form_SINGLEQUOTE_)){\nvar sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);\nvar sym = cljs.core.first(form);\nif(cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_,cljs.analyzer.impl.JS_STAR_SYM)){\nvar sym__$1 = (((!((cljs.core.namespace(sym) == null))))?sym:cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)));\nvar js_op = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),sym__$1], null);\nvar numeric = (function (){var mac_var_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_var.sym));\nvar mac_var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_var.sym));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),mac_var_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),mac_var_name,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(\"cljs.analyzer\",\"numeric\",\"cljs.analyzer/numeric\",1415704188)], null));\n})();\nvar js_op__$1 = ((numeric === true)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),true):js_op);\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_,cljs.core.merge,js_op__$1);\n} else {\nreturn form_SINGLEQUOTE_;\n}\n} else {\nreturn form_SINGLEQUOTE_;\n}\n}\n}\n});\n/**\n * Given a env, an analysis environment, and form, a ClojureScript form,\n * macroexpand the form once.\n */\ncljs.analyzer.macroexpand_1 = (function cljs$analyzer$macroexpand_1(env,form){\ntry{return cljs.analyzer.macroexpand_1_STAR_(env,form);\n}catch (e47223){var err__46428__auto__ = e47223;\nif(cljs.analyzer.has_error_data_QMARK_(err__46428__auto__)){\nthrow err__46428__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__46428__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__46428__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__46428__auto__.message,err__46428__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq_STAR_ = (function cljs$analyzer$analyze_seq_STAR_(op,env,form,name,opts){\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nreturn cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op,env,form,name,opts);\n} else {\nreturn cljs.analyzer.parse_invoke(env,form);\n}\n});\ncljs.analyzer.analyze_seq_STAR__wrap = (function cljs$analyzer$analyze_seq_STAR__wrap(op,env,form,name,opts){\ntry{return cljs.analyzer.analyze_seq_STAR_(op,env,form,name,opts);\n}catch (e47224){var err__46428__auto__ = e47224;\nif(cljs.analyzer.has_error_data_QMARK_(err__46428__auto__)){\nthrow err__46428__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__46428__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__46428__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__46428__auto__.message,err__46428__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq = (function cljs$analyzer$analyze_seq(var_args){\nvar G__47226 = arguments.length;\nswitch (G__47226) {\ncase 3:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\nreturn (cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze_list.call(null,env,form));\n} else {\nvar line = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar line__$1 = (((line == null))?new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env):line);\nvar col = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar col__$1 = (((col == null))?new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env):col);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col__$1], 0));\nvar op = cljs.core.first(form);\nif((op == null)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,\"Can't call nil\");\n} else {\n}\n\nvar mform = cljs.analyzer.macroexpand_1(env__$1,form);\nif((form === mform)){\nreturn cljs.analyzer.analyze_seq_STAR__wrap(op,env__$1,form,name,opts);\n} else {\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,mform,name,opts) : cljs.analyzer.analyze.call(null,env__$1,mform,name,opts));\n}\n}\n}));\n\n(cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.analyze_map = (function cljs$analyzer$analyze_map(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ks = (function (){var _STAR_recur_frames_STAR__orig_val__47229 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47230 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47230);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47227_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47227_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47227_SHARP_));\n}),cljs.core.keys(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47229);\n}})();\nvar vs = (function (){var _STAR_recur_frames_STAR__orig_val__47231 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47232 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47232);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47228_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47228_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47228_SHARP_));\n}),cljs.core.vals(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47231);\n}})();\nvar G__47233 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),ks,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IMap\",\"cljs.core/IMap\",1407777598,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__47233) : cljs.analyzer.analyze_wrap_meta.call(null,G__47233));\n});\ncljs.analyzer.analyze_list = (function cljs$analyzer$analyze_list(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__47235 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47236 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47236);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47234_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47234_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47234_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47235);\n}})();\nvar G__47237 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__47237) : cljs.analyzer.analyze_wrap_meta.call(null,G__47237));\n});\ncljs.analyzer.analyze_vector = (function cljs$analyzer$analyze_vector(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__47239 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47240 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47240);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47238_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47238_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47238_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47239);\n}})();\nvar G__47241 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IVector\",\"cljs.core/IVector\",1711112835,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__47241) : cljs.analyzer.analyze_wrap_meta.call(null,G__47241));\n});\ncljs.analyzer.analyze_set = (function cljs$analyzer$analyze_set(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__47243 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47244 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47244);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47242_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47242_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47242_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47243);\n}})();\nvar G__47245 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"ISet\",\"cljs.core/ISet\",2003412810,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__47245) : cljs.analyzer.analyze_wrap_meta.call(null,G__47245));\n});\ncljs.analyzer.analyze_js_value = (function cljs$analyzer$analyze_js_value(env,form){\nvar val = form.val;\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nif(cljs.core.map_QMARK_(val)){\nvar keys = cljs.core.vec(cljs.core.keys(val));\nvar vals = (function (){var _STAR_recur_frames_STAR__orig_val__47248 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47249 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47249);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47246_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47246_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47246_SHARP_));\n}),cljs.core.vals(val));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47248);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-object\",\"js-object\",1830199158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),keys,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vals,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null)], null);\n} else {\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__47250 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47251 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47251);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__47247_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__47247_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__47247_SHARP_));\n}),val);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47250);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-array\",\"js-array\",-1210185421),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null)], null);\n}\n});\ncljs.analyzer.record_ns_PLUS_name = (function cljs$analyzer$record_ns_PLUS_name(x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)),/\\//));\n});\ncljs.analyzer.analyze_record = (function cljs$analyzer$analyze_record(env,x){\nvar _items_ = (function (){var _STAR_recur_frames_STAR__orig_val__47256 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__47257 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__47257);\n\ntry{var G__47258 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__47259 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,x);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__47258,G__47259) : cljs.analyzer.analyze.call(null,G__47258,G__47259));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__47256);\n}})();\nvar vec__47253 = cljs.analyzer.record_ns_PLUS_name(x);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47253,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47253,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),x,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),x,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null);\n});\ncljs.analyzer.elide_reader_meta = (function cljs$analyzer$elide_reader_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)], 0));\n});\ncljs.analyzer.elide_analyzer_meta = (function cljs$analyzer$elide_analyzer_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162));\n});\ncljs.analyzer.elide_irrelevant_meta = (function cljs$analyzer$elide_irrelevant_meta(m){\nreturn cljs.analyzer.elide_analyzer_meta(cljs.analyzer.elide_reader_meta(m));\n});\ncljs.analyzer.analyze_wrap_meta = (function cljs$analyzer$analyze_wrap_meta(expr){\nvar form = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr);\nvar m = cljs.analyzer.elide_irrelevant_meta(cljs.core.meta(form));\nif((!((cljs.core.seq(m) == null)))){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr);\nvar expr__$1 = cljs.core.assoc_in(expr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar meta_expr = cljs.analyzer.analyze_map(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr__$1),m);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"with-meta\",\"with-meta\",-1566856820),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),meta_expr,new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_type = (function cljs$analyzer$infer_type(env,p__47261,_){\nvar map__47262 = p__47261;\nvar map__47262__$1 = cljs.core.__destructure_map(map__47262);\nvar ast = map__47262__$1;\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47262__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif((((tag == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),tag)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),(function (ms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__47260_SHARP_){\nreturn (cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3(env,p1__47260_SHARP_,_) : cljs.analyzer.infer_type.call(null,env,p1__47260_SHARP_,_));\n})),ms);\n}));\n} else {\nvar temp__5755__auto__ = cljs.analyzer.infer_tag(env,ast);\nif((temp__5755__auto__ == null)){\nreturn ast;\n} else {\nvar tag__$1 = temp__5755__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1);\n}\n}\n} else {\nreturn ast;\n}\n});\ncljs.analyzer.repl_self_require_QMARK_ = (function cljs$analyzer$repl_self_require_QMARK_(env,deps){\nvar and__4221__auto__ = new cljs.core.Keyword(null,\"repl-env\",\"repl-env\",-1976503928).cljs$core$IFn$_invoke$arity$1(env);\nif(cljs.core.truth_(and__4221__auto__)){\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]),deps);\n} else {\nreturn and__4221__auto__;\n}\n});\ncljs.analyzer.invoke_arg_type_validators = (function (){var aget_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__47263_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__47263_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.rest(p1__47263_SHARP_))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nvar aset_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__47264_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__47264_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.butlast(cljs.core.rest(p1__47264_SHARP_)))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),aset_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),aset_validator], null);\n})();\ncljs.analyzer.check_invoke_arg_types = (function cljs$analyzer$check_invoke_arg_types(env,p__47265,opts){\nvar map__47266 = p__47265;\nvar map__47266__$1 = cljs.core.__destructure_map(map__47266);\nvar ast = map__47266__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47266__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif((((!(cljs.analyzer.analyzed_QMARK_(ast)))) && (cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),op)))){\nvar temp__5757__auto___48310 = cljs.core.find(cljs.analyzer.invoke_arg_type_validators,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(ast))));\nif((temp__5757__auto___48310 == null)){\n} else {\nvar vec__47267_48311 = temp__5757__auto___48310;\nvar name_48312 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47267_48311,(0),null);\nvar map__47270_48313 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47267_48311,(1),null);\nvar map__47270_48314__$1 = cljs.core.__destructure_map(map__47270_48313);\nvar valid_QMARK__48315 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47270_48314__$1,new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379));\nvar warning_type_48316 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47270_48314__$1,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595));\nvar types_48319 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(ast));\nif(cljs.core.truth_((valid_QMARK__48315.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK__48315.cljs$core$IFn$_invoke$arity$1(types_48319) : valid_QMARK__48315.call(null,types_48319)))){\n} else {\ncljs.analyzer.warning(warning_type_48316,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_48312,new cljs.core.Keyword(null,\"types\",\"types\",590030639),types_48319], null));\n}\n}\n} else {\n}\n\nreturn cljs.analyzer.analyzed(ast);\n});\ncljs.analyzer.analyze_form = (function cljs$analyzer$analyze_form(env,form,name,opts){\nif((form instanceof cljs.core.Symbol)){\nreturn cljs.analyzer.analyze_symbol(env,form);\n} else {\nif(((cljs.analyzer.impl.cljs_seq_QMARK_(form)) && ((!((cljs.core.seq(form) == null)))))){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,opts);\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.analyzer.analyze_record(env,form);\n} else {\nif(cljs.analyzer.impl.cljs_map_QMARK_(form)){\nreturn cljs.analyzer.analyze_map(env,form);\n} else {\nif(cljs.analyzer.impl.cljs_vector_QMARK_(form)){\nreturn cljs.analyzer.analyze_vector(env,form);\n} else {\nif(cljs.analyzer.impl.cljs_set_QMARK_(form)){\nreturn cljs.analyzer.analyze_set(env,form);\n} else {\nif((form instanceof cljs.core.Keyword)){\nreturn cljs.analyzer.analyze_keyword(env,form);\n} else {\nif((form instanceof cljs.tagged_literals.JSValue)){\nreturn cljs.analyzer.analyze_js_value(env,form);\n} else {\nvar tag = (((form == null))?cljs.analyzer.impl.CLJ_NIL_SYM:((typeof form === 'number')?cljs.analyzer.impl.NUMBER_SYM:((typeof form === 'string')?cljs.analyzer.impl.STRING_SYM:((form === true)?cljs.analyzer.impl.BOOLEAN_SYM:((form === false)?cljs.analyzer.impl.BOOLEAN_SYM:((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY,form))?new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null):null))))));\nvar G__47271 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\nif(cljs.core.truth_(tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__47271,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag);\n} else {\nreturn G__47271;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.analyzer.default_passes = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type,cljs.analyzer.passes.and_or.optimize,cljs.analyzer.check_invoke_arg_types], null);\ncljs.analyzer.analyze_STAR_ = (function cljs$analyzer$analyze_STAR_(env,form,name,opts){\nvar passes = cljs.analyzer._STAR_passes_STAR_;\nvar passes__$1 = (((passes == null))?cljs.analyzer.default_passes:passes);\nvar form__$1 = (((form instanceof cljs.core.LazySeq))?((cljs.core.seq(form))?form:cljs.core.List.EMPTY):form);\nvar ast = cljs.analyzer.analyze_form(env,form__$1,name,opts);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast__$1,pass){\nreturn (pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env,ast__$1,opts) : pass.call(null,env,ast__$1,opts));\n}),ast,passes__$1);\n});\n/**\n * Given an environment, a map containing {:locals (mapping of names to bindings), :context\n *   (one of :statement, :expr, :return), :ns (a symbol naming the\n *   compilation ns)}, and form, returns an expression object (a map\n *   containing at least :form, :op and :env keys). If expr has any (immediately)\n *   nested exprs, must have a :children entry. This must be a vector of keywords naming\n *   the immediately nested fields mapped to an expr or vector of exprs. This will\n *   facilitate code walking without knowing the details of the op set.\n */\ncljs.analyzer.analyze = (function cljs$analyzer$analyze(var_args){\nvar G__47273 = arguments.length;\nswitch (G__47273) {\ncase 2:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = (function (env,form){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env,form,null);\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\ntry{if(cljs.analyzer.analyzed_QMARK_(form)){\nvar _STAR_cljs_warnings_STAR__orig_val__47275 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__47276 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__47276);\n\ntry{return cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__47275);\n}} else {\nreturn cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}\n}catch (e47274){var err__46428__auto__ = e47274;\nif(cljs.analyzer.has_error_data_QMARK_(err__46428__auto__)){\nthrow err__46428__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__46428__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__46428__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__46428__auto__.message,err__46428__auto__));\n\n}\n}\n}}));\n\n(cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given a compiler state and a map from fully qualified symbols to constant\n *   EDN values, update the compiler state marking these vars as const to support\n *   direct substitution of these vars in source.\n */\ncljs.analyzer.add_consts = (function cljs$analyzer$add_consts(compiler_state,constants_map){\nreturn cljs.core.reduce_kv((function (compiler_state__$1,sym,value){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(compiler_state__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),(function (){var _STAR_passes_STAR__orig_val__47277 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__47278 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__47278);\n\ntry{return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.empty_env(),value);\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__47277);\n}})()], null));\n}),compiler_state,constants_map);\n});\ncljs.analyzer.resolve_symbol = (function cljs$analyzer$resolve_symbol(sym){\nif(((cljs.core.not(cljs.core.namespace(sym))) && (cljs.analyzer.dotted_symbol_QMARK_(sym)))){\nreturn sym;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1((function (){var _STAR_private_var_access_nowarn_STAR__orig_val__47279 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__47280 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__47280);\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)),sym);\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__47279);\n}})());\n}\n});\nvar registry_ref_48334 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",1975823941,null));\n}),null));\nvar speced_vars_48335 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"-speced-vars\",\"-speced-vars\",1758723085,null));\n}),null));\ncljs.analyzer.get_spec_vars = (function cljs$analyzer$get_spec_vars(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)) == null)))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414),cljs.core.deref(registry_ref_48334),new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988),cljs.core.deref(speced_vars_48335)], null);\n} else {\nreturn null;\n}\n});\n/**\n * Dumps registered speced vars for a given namespace into the compiler\n *   environment.\n */\ncljs.analyzer.dump_specs = (function cljs$analyzer$dump_specs(ns){\nvar spec_vars = cljs.analyzer.get_spec_vars();\nvar ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar registry_ref = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p__47281){\nvar vec__47282 = p__47281;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47282,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47282,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(k));\n})),cljs.core.deref(cljs.core.deref(registry_ref)))], null);\n} else {\nreturn null;\n}\n})(),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar speced_vars = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (v){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(v))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"fdef-ns\",\"fdef-ns\",-1602124254).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))));\n})),cljs.core.deref(cljs.core.deref(speced_vars)))], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\n/**\n * Registers speced vars found in a namespace analysis cache.\n */\ncljs.analyzer.register_specs = (function cljs$analyzer$register_specs(cached_ns){\nvar map__47285 = cljs.analyzer.get_spec_vars();\nvar map__47285__$1 = cljs.core.__destructure_map(map__47285);\nvar registry_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47285__$1,new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414));\nvar speced_vars = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47285__$1,new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988));\nvar temp__5753__auto___48354 = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5753__auto___48354){\nvar registry_48355 = temp__5753__auto___48354;\nif(cljs.core.truth_(registry_ref)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(registry_ref),cljs.core.into,registry_48355);\n} else {\n}\n} else {\n}\n\nvar temp__5753__auto__ = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5753__auto__){\nvar vars = temp__5753__auto__;\nif(cljs.core.truth_(speced_vars)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(speced_vars),cljs.core.into,vars);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_form_seq = (function cljs$analyzer$analyze_form_seq(var_args){\nvar G__47287 = arguments.length;\nswitch (G__47287) {\ncase 1:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = (function (forms){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(forms,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = (function (forms,opts){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3(forms,opts,false);\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3 = (function (forms,opts,return_last_QMARK_){\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.empty_env(),new cljs.core.Keyword(null,\"build-options\",\"build-options\",1183685779),opts);\nvar _STAR_file_defs_STAR__orig_val__47288 = cljs.analyzer._STAR_file_defs_STAR_;\nvar _STAR_cljs_ns_STAR__orig_val__47289 = cljs.analyzer._STAR_cljs_ns_STAR_;\nvar _STAR_cljs_file_STAR__orig_val__47290 = cljs.analyzer._STAR_cljs_file_STAR_;\nvar _STAR_alias_map_STAR__orig_val__47291 = cljs.tools.reader._STAR_alias_map_STAR_;\nvar _STAR_file_defs_STAR__temp_val__47292 = null;\nvar _STAR_cljs_ns_STAR__temp_val__47293 = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\nvar _STAR_cljs_file_STAR__temp_val__47294 = null;\nvar _STAR_alias_map_STAR__temp_val__47295 = (function (){var or__4223__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__temp_val__47292);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__temp_val__47293);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__temp_val__47294);\n\n(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__temp_val__47295);\n\ntry{var ns = null;\nvar forms__$1 = forms;\nvar last_ast = null;\nwhile(true){\nif((!((forms__$1 == null)))){\nvar form = cljs.core.first(forms__$1);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ast = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,form,null,opts);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nvar G__48368 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ast);\nvar G__48369 = cljs.core.next(forms__$1);\nvar G__48370 = ast;\nns = G__48368;\nforms__$1 = G__48369;\nlast_ast = G__48370;\ncontinue;\n} else {\nvar G__48371 = ns;\nvar G__48372 = cljs.core.next(forms__$1);\nvar G__48373 = ast;\nns = G__48371;\nforms__$1 = G__48372;\nlast_ast = G__48373;\ncontinue;\n}\n} else {\nif(cljs.core.truth_(return_last_QMARK_)){\nreturn last_ast;\n} else {\nreturn ns;\n}\n}\nbreak;\n}\n}finally {(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__orig_val__47291);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__orig_val__47290);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__orig_val__47289);\n\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__orig_val__47288);\n}}));\n\n(cljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 3);\n\n/**\n * Ensures that a non-nil defs map exists in the compiler state for a given\n *   ns. (A non-nil defs map signifies that the namespace has been analyzed.)\n */\ncljs.analyzer.ensure_defs = (function cljs$analyzer$ensure_defs(ns){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null),(function (p1__47296_SHARP_){\nvar or__4223__auto__ = p1__47296_SHARP_;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index"],"~:use-macros",["^ ","~$allowing-redef","~$cljs.analyzer.macros","~$disallowing-ns*","^H","~$disallowing-recur","^H","~$no-warn","^H","~$with-warning-handlers","^H","~$wrapping-errors","^H","~$ensure","~$cljs.env.macros"],"~:excludes",["~#set",["^N","~$js-reserved","~$macroexpand-1","~$ns-interns"]],"~:name","~$cljs.analyzer","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$gstring","~$goog.string","~$impl","~$cljs.analyzer.impl","~$cljs.tools.reader","^15","~$and-or","~$cljs.analyzer.passes.and-or","^12","^12","~$tags","~$cljs.tagged-literals","~$cljs.core","^1:","~$goog","^1;","~$cljs.tools.reader.reader-types","^1<","~$cljs.env","^1=","^17","^17","^10","^10","~$readers","^1<","^19","^19","~$env","^1=","~$string","~$clojure.string","^14","^14","^1A","^1A","~$cljs.reader","^1B","~$edn","^1B","~$reader","^15"],"~:seen",["^Q",["~:require","~:require-macros"]],"~:uses",null,"^1G",["^ ","^H","^H","^O","^O","^1:","^1:","^1B","^1B","^1C","^1B"],"~:form",["~#list",["~$ns","^V",["^1J",["~:refer-clojure","~:exclude",["^N","^R","^S","^T"]]],["^1J",["^1G",["^H","~:refer",["^G","^I","^J","^K","^L","^M"]],["^O","^1N",["^N"]]]],["^1J",["^1F",["^14","~:as","^13"],["^17","^1O","^16"],["^1=","^1O","^1?"],["^1B","^1O","^1C"],["^19","^1O","^18"],["^15","^1O","^1D"],["^1<","^1O","^1>"],["^10","^1O","^["],["^1A","^1O","^1@"],["^12","^1O","^11"]]]]],"~:flags",["^ ","^1G",["^Q",[]],"^1F",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^1;","^1:","^14","^17","^1=","^1B","^19","^15","^1<","^10","^1A","^12"]],"^X","^V","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer.cljc"],"~:compiled-at",1624616762419,"~:resource-name","cljs/analyzer.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer\n  #?(:clj  (:refer-clojure :exclude [ensure macroexpand-1])\n     :cljs (:refer-clojure :exclude [ensure js-reserved macroexpand-1 ns-interns]))\n  #?(:cljs (:require-macros [cljs.analyzer.macros\n                             :refer [allowing-redef disallowing-ns* disallowing-recur\n                                     no-warn with-warning-handlers wrapping-errors]]\n             [cljs.env.macros :refer [ensure]]))\n  #?(:clj  (:require [cljs.analyzer.impl :as impl]\n                     [cljs.analyzer.passes.and-or :as and-or]\n                     [cljs.env :as env :refer [ensure]]\n                     [cljs.externs :as externs]\n                     [cljs.js-deps :as deps]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.util :as util :refer [ns->relpath topo-sort]]\n                     [clojure.edn :as edn]\n                     [clojure.java.io :as io]\n                     [clojure.set :as set]\n                     [clojure.string :as string]\n                     [clojure.tools.reader :as reader]\n                     [clojure.tools.reader.reader-types :as readers])\n     :cljs (:require [cljs.analyzer.impl :as impl]\n                     [cljs.analyzer.passes.and-or :as and-or]\n                     [cljs.env :as env]\n                     [cljs.reader :as edn]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.tools.reader :as reader]\n                     [cljs.tools.reader.reader-types :as readers]\n                     [clojure.set :as set]\n                     [clojure.string :as string]\n                     [goog.string :as gstring]))\n  #?(:clj (:import [cljs.tagged_literals JSValue]\n                   [clojure.lang Namespace Var LazySeq ArityException]\n                   [java.io File Reader PushbackReader]\n                   [java.lang Throwable]\n                   [java.net URL]\n                   [java.util.regex Pattern])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; User file-local compiler flags\n#?(:clj (def ^:dynamic *unchecked-if* false))\n#?(:clj (def ^:dynamic *unchecked-arrays* false))\n\n;; Compiler dynamic vars\n(def ^:dynamic *cljs-ns* 'cljs.user)\n(def ^:dynamic *cljs-file* nil)\n(def ^:dynamic *checked-arrays* false)\n(def ^:dynamic *check-alias-dupes* true)\n(def ^:dynamic *cljs-static-fns* false)\n(def ^:dynamic *fn-invoke-direct* false)\n(def ^:dynamic *cljs-macros-path* \"/cljs/core\")\n(def ^:dynamic *cljs-macros-is-classpath* true)\n(def ^:dynamic *cljs-dep-set* (with-meta #{} {:dep-path []}))\n(def ^:dynamic *analyze-deps* true)\n(def ^:dynamic *load-tests* true)\n(def ^:dynamic *load-macros* true)\n(def ^:dynamic *reload-macros* false)\n(def ^:dynamic *macro-infer* true)\n(def ^:dynamic *passes* nil)\n(def ^:dynamic *file-defs* nil)\n(def ^:dynamic *private-var-access-nowarn* false)\n\n(def constants-ns-sym\n  \"The namespace of the constants table as a symbol.\"\n  'cljs.core.constants)\n\n#?(:clj\n   (def transit-read-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [read-handler     @(ns-resolve ns 'read-handler)\n               read-handler-map @(ns-resolve ns 'read-handler-map)]\n           {:handlers\n             (read-handler-map\n               {\"cljs/js\"    (read-handler (fn [v] (JSValue. v)))\n                \"cljs/regex\" (read-handler (fn [v] (Pattern/compile v)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit-write-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [write-handler     @(ns-resolve ns 'write-handler)\n               write-handler-map @(ns-resolve ns 'write-handler-map)]\n           {:handlers\n             (write-handler-map\n               {JSValue\n                (write-handler\n                  (fn [_] \"cljs/js\")\n                  (fn [js] (.val ^JSValue js)))\n                Pattern\n                (write-handler\n                  (fn [_] \"cljs/regex\")\n                  (fn [pat] (.pattern ^Pattern pat)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit\n     (delay\n       (try\n         (require '[cognitect.transit])\n         (when-some [ns (find-ns 'cognitect.transit)]\n           {:writer @(ns-resolve ns 'writer)\n            :reader @(ns-resolve ns 'reader)\n            :write  @(ns-resolve ns 'write)\n            :read   @(ns-resolve ns 'read)})\n         (catch Throwable t\n           nil)))))\n\n;; log compiler activities\n(def ^:dynamic *verbose* false)\n\n(def -cljs-macros-loaded (atom false))\n\n(def ^:dynamic *cljs-warnings*\n  {:preamble-missing true\n   :unprovided true\n   :undeclared-var true\n   :private-var-access true\n   :undeclared-ns true\n   :undeclared-ns-form true\n   :redef true\n   :redef-in-file true\n   :dynamic true\n   :fn-var true\n   :fn-arity true\n   :fn-deprecated true\n   :declared-arglists-mismatch true\n   :protocol-deprecated true\n   :undeclared-protocol-symbol true\n   :invalid-protocol-symbol true\n   :multiple-variadic-overloads true\n   :variadic-max-arity true\n   :overload-arity true\n   :extending-base-js-type true\n   :invoke-ctor true\n   :invalid-arithmetic true\n   :invalid-array-access true\n   :protocol-invalid-method true\n   :protocol-duped-method true\n   :protocol-multiple-impls true\n   :protocol-with-variadic-method true\n   :protocol-with-overwriting-method true\n   :protocol-impl-with-variadic-method true\n   :protocol-impl-recur-with-target true\n   :single-segment-namespace true\n   :munged-namespace true\n   :ns-var-clash true\n   :non-dynamic-earmuffed-var true\n   :extend-type-invalid-method-shape true\n   :unsupported-js-module-type true\n   :unsupported-preprocess-value true\n   :js-shadowed-by-local true\n   :infer-warning false})\n\n(defn unchecked-arrays? []\n  *unchecked-arrays*)\n\n(defn compiler-options []\n  (get @env/*compiler* :options))\n\n(defn get-externs []\n  (::externs @env/*compiler*))\n\n(defn checked-arrays\n  \"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.\"\n  []\n  (when (and (not= :advanced (:optimizations (compiler-options)))\n             (not *unchecked-arrays*))\n    *checked-arrays*))\n\n(def js-reserved\n  #{\"arguments\" \"abstract\" \"await\" \"boolean\" \"break\" \"byte\" \"case\"\n    \"catch\" \"char\" \"class\" \"const\" \"continue\"\n    \"debugger\" \"default\" \"delete\" \"do\" \"double\"\n    \"else\" \"enum\" \"export\" \"extends\" \"final\"\n    \"finally\" \"float\" \"for\" \"function\" \"goto\" \"if\"\n    \"implements\" \"import\" \"in\" \"instanceof\" \"int\"\n    \"interface\" \"let\" \"long\" \"native\" \"new\"\n    \"package\" \"private\" \"protected\" \"public\"\n    \"return\" \"short\" \"static\" \"super\" \"switch\"\n    \"synchronized\" \"this\" \"throw\" \"throws\"\n    \"transient\" \"try\" \"typeof\" \"var\" \"void\"\n    \"volatile\" \"while\" \"with\" \"yield\" \"methods\"\n    \"null\" \"constructor\"})\n\n(def es5-allowed\n  #{\"default\"})\n\n#?(:clj (def SENTINEL (Object.))\n   :cljs (def SENTINEL (js-obj)))\n\n(defn gets\n  ([m k0 k1]\n    (let [m (get m k0 SENTINEL)]\n      (when-not (identical? m SENTINEL)\n        (get m k1))))\n  ([m k0 k1 k2]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (get m k2))))))\n  ([m k0 k1 k2 k3]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (let [m (get m k2 SENTINEL)]\n             (when-not (identical? m SENTINEL)\n               (get m k3)))))))))\n\n#?(:cljs\n   (defn munge-path [ss]\n     (munge (str ss))))\n\n#?(:cljs\n   (defn ns->relpath\n     \"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.\"\n     ([ns] (ns->relpath ns :cljs))\n     ([ns ext]\n      (str (string/replace (munge-path ns) \\. \\/) \".\" (name ext)))))\n\n#?(:cljs\n   (defn topo-sort\n     ([x get-deps]\n      (topo-sort x 0 (atom (sorted-map)) (memoize get-deps)))\n     ([x depth state memo-get-deps]\n      (let [deps (memo-get-deps x)]\n        (swap! state update-in [depth] (fnil into #{}) deps)\n        (doseq [dep deps]\n          (topo-sort dep (inc depth) state memo-get-deps))\n        (doseq [[<depth _] (subseq @state < depth)]\n          (swap! state update-in [<depth] set/difference deps))\n        (when (= depth 0)\n          (distinct (apply concat (vals @state))))))))\n\n(declare message namespaces)\n\n(defn ast?\n  #?(:cljs {:tag boolean})\n  [x]\n  (and (map? x) (contains? x :op)))\n\n(defmulti error-message (fn [warning-type & _] warning-type))\n\n(defmethod error-message :preamble-missing\n  [warning-type info]\n  (str \"Preamble resource file not found: \" (string/join \" \" (:missing info))))\n\n(defmethod error-message :unprovided\n  [warning-type info]\n  (str \"Required namespace not provided for \" (string/join \" \" (:unprovided info))))\n\n(defmethod error-message :undeclared-var\n  [warning-type info]\n  (str (if (:macro-present? info)\n         \"Can't take value of macro \"\n         \"Use of undeclared Var \")\n    (:prefix info) \"/\" (:suffix info)))\n\n(defmethod error-message :private-var-access\n  [warning-type info]\n  (str \"var: \" (:sym info) \" is not public\"))\n\n(defmethod error-message :undeclared-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :cljs)\n       \", \" (ns->relpath ns-sym :cljc)\n       \", or JavaScript source providing \\\"\" js-provide \"\\\"\"\n    (when (string/includes? (ns->relpath ns-sym) \"_\")\n      \" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\")))\n\n(defmethod error-message :undeclared-macros-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such macros namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :clj)\n       \" or \" (ns->relpath ns-sym :cljc)))\n\n(defmethod error-message :dynamic\n  [warning-type info]\n  (str (:name info) \" not declared ^:dynamic\"))\n\n(defmethod error-message :redef\n  [warning-type info]\n  (str (:sym info) \" already refers to: \" (symbol (str (:ns info)) (str (:sym info)))\n    \" being replaced by: \" (symbol (str (:ns-name info)) (str (:sym info)))))\n\n(defmethod error-message :redef-in-file\n  [warning-type info]\n  (str (:sym info) \" at line \" (:line info) \" is being replaced\"))\n\n(defmethod error-message :fn-var\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" no longer fn, references are stale\"))\n\n(defmethod error-message :fn-arity\n  [warning-type info]\n  (str \"Wrong number of args (\" (:argc info) \") passed to \"\n    (or (:ctor info)\n      (:name info))))\n\n(defmethod error-message :fn-deprecated\n  [warning-type info]\n  (str (-> info :fexpr :info :name) \" is deprecated\"))\n\n(defmethod error-message :declared-arglists-mismatch\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" declared arglists \" (:declared info)\n    \" mismatch defined arglists \" (:defined info)))\n\n(defmethod error-message :undeclared-ns-form\n  [warning-type info]\n  (str \"Invalid :refer, \" (:type info) \" \" (:lib info) \"/\" (:sym info) \" does not exist\"))\n\n(defmethod error-message :protocol-deprecated\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" is deprecated\"))\n\n(defmethod error-message :undeclared-protocol-symbol\n  [warning-type info]\n  (str \"Can't resolve protocol symbol \" (:protocol info)))\n\n(defmethod error-message :invalid-protocol-symbol\n  [warning-type info]\n  (str \"Symbol \" (:protocol info) \" is not a protocol\"))\n\n(defmethod error-message :protocol-invalid-method\n  [warning-type info]\n  (if (:no-such-method info)\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" does not declare method called \" (:fname info))\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" \" (:fname info) \" does not declare arity \" (:invalid-arity info))))\n\n(defmethod error-message :protocol-duped-method\n  [warning-type info]\n  (str \"Duplicated methods in protocol implementation \" (:protocol info) \" \" (:fname info)))\n\n(defmethod error-message :protocol-multiple-impls\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implemented multiple times\"))\n\n(defmethod error-message :protocol-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" declares method \"\n       (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-with-overwriting-method\n  [warning-type info]\n  (let [overwritten-protocol (-> info :existing :protocol)]\n    (str \"Protocol \" (:protocol info) \" is overwriting \"\n      (if overwritten-protocol \"method\" \"function\")\n      \" \" (:name info)\n      (when overwritten-protocol (str \" of protocol \" (name overwritten-protocol))))))\n\n(defmethod error-message :protocol-impl-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implements method \"\n    (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-recur-with-target\n  [warning-type info]\n  (str \"Ignoring target object \\\"\" (pr-str (:form info)) \"\\\" passed in recur to protocol method head\"))\n\n(defmethod error-message :multiple-variadic-overloads\n  [warning-type info]\n  (str (:name info) \": Can't have more than 1 variadic overload\"))\n\n(defmethod error-message :variadic-max-arity\n  [warning-type info]\n  (str (:name info) \": Can't have fixed arity function with more params than variadic function\"))\n\n(defmethod error-message :overload-arity\n  [warning-type info]\n  (str (:name info) \": Can't have 2 overloads with same arity\"))\n\n(defmethod error-message :extending-base-js-type\n  [warning-type info]\n  (str \"Extending an existing JavaScript type - use a different symbol name \"\n       \"instead of \" (:current-symbol info) \" e.g \" (:suggested-symbol info)))\n\n(defmethod error-message :invalid-arithmetic\n  [warning-type info]\n  (str (:js-op info) \", all arguments must be numbers, got \" (:types info) \" instead\"))\n\n(defmethod error-message :invalid-array-access\n  [warning-type {:keys [name types]}]\n  (case name\n    (cljs.core/checked-aget cljs.core/checked-aget')\n    (str \"cljs.core/aget, arguments must be an array followed by numeric indices, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (rest types)))\n        (str \" (consider \"\n          (if (== 2 (count types))\n            \"goog.object/get\"\n            \"goog.object/getValueByKeys\")\n          \" for object access)\")))\n\n    (cljs.core/checked-aset cljs.core/checked-aset')\n    (str \"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (butlast (rest types))))\n        \" (consider goog.object/set for object access)\"))))\n\n(defmethod error-message :invoke-ctor\n  [warning-type info]\n  (str \"Cannot invoke type constructor \" (-> info :fexpr :info :name) \" as function \"))\n\n(defmethod error-message :single-segment-namespace\n  [warning-type info]\n  (str (:name info) \" is a single segment namespace\"))\n\n(defmethod error-message :munged-namespace\n  [warning-type {:keys [name] :as info}]\n  (let [munged (->> (string/split (clojure.core/name name) #\"\\.\")\n                 (map #(if (js-reserved %) (str % \"$\") %))\n                 (string/join \".\")\n                 (munge))]\n    (str \"Namespace \" name \" contains a reserved JavaScript keyword,\"\n         \" the corresponding Google Closure namespace will be munged to \" munged)))\n\n(defmethod error-message :ns-var-clash\n  [warning-type {:keys [ns var] :as info}]\n  (str \"Namespace \" ns \" clashes with var \" var))\n\n(defmethod error-message :non-dynamic-earmuffed-var\n  [warning-type {:keys [var] :as info}]\n  (str var \" not declared dynamic and thus is not dynamically rebindable, but its name \"\n    \"suggests otherwise. Please either indicate ^:dynamic \" var \" or change the name\"))\n\n(defmethod error-message :extend-type-invalid-method-shape\n  [warning-type {:keys [protocol method] :as info}]\n  (str \"Bad extend-type method shape for protocol \" protocol \" method \" method\n       \", method arities must be grouped together\"))\n\n(defmethod error-message :unsupported-js-module-type\n  [warning-type {:keys [module-type file] :as info}]\n  (str \"Unsupported JavaScript module type \" module-type \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :unsupported-preprocess-value\n  [warning-type {:keys [preprocess file]}]\n  (str \"Unsupported preprocess value \" preprocess \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :js-shadowed-by-local\n  [warning-type {:keys [name]}]\n  (str name \" is shadowed by a local\"))\n\n(defmethod error-message :infer-warning\n  [warning-type {:keys [warn-type form type property]}]\n  (case warn-type\n    :target   (str \"Cannot infer target type in expression \" form \"\")\n    :property (str \"Cannot resolve property \" property\n                   \" for inferred type \" type  \" in expression \" form)\n    :object   (str \"Adding extern to Object for property \" property \" due to \"\n                   \"ambiguous expression \" form)))\n\n(defn default-warning-handler [warning-type env extra]\n  (when (warning-type *cljs-warnings*)\n    (when-let [s (error-message warning-type extra)]\n      #?(:clj  (binding [*out* *err*]\n                 (println (message env (str \"WARNING: \" s))))\n         :cljs (binding [*print-fn* *print-err-fn*]\n                 (println (message env (str \"WARNING: \" s))))))))\n\n(def ^:dynamic *cljs-warning-handlers*\n  [default-warning-handler])\n\n#?(:clj\n   (defmacro with-warning-handlers [handlers & body]\n     `(binding [*cljs-warning-handlers* ~handlers]\n        ~@body)))\n\n(defn- repeat-char [c n]\n  (loop [ret c n n]\n    (if (pos? n)\n      (recur (str ret c) (dec n))\n      ret)))\n\n(defn- hex-format [s pad]\n  #?(:clj  (str \"_u\" (format (str \"%0\" pad \"x\") (int (first s))) \"_\")\n     :cljs (let [hex (.toString (.charCodeAt s 0) 16)\n                 len (. hex -length)\n                 hex (if (< len pad)\n                       (str (repeat-char \"0\" (- pad len)) hex)\n                       hex)]\n             (str \"_u\" hex \"_\"))))\n\n(defn gen-constant-id [value]\n  (let [prefix (cond\n                 (keyword? value) \"cst$kw$\"\n                 (symbol? value)  \"cst$sym$\"\n                 :else\n                 (throw\n                   #?(:clj (Exception. (str \"constant type \" (type value) \" not supported\"))\n                      :cljs (js/Error. (str \"constant type \" (type value) \" not supported\")))))\n        name   (if (keyword? value)\n                 (subs (str value) 1)\n                 (str value))\n        name   (if (= \".\" name)\n                 \"_DOT_\"\n                 (-> name\n                     (string/replace \"-\" \"_DASH_\")\n                     (munge)\n                     (string/replace \".\" \"$\")\n                     (string/replace #\"(?i)[^a-z0-9$_]\" #(hex-format % 4))))]\n    (symbol (str prefix name))))\n\n(defn- register-constant!\n  ([val] (register-constant! nil val))\n  ([env val]\n   (swap! env/*compiler*\n     (fn [cenv]\n       (cond->\n         (-> cenv\n           (update-in [::constant-table]\n             (fn [table]\n               (if (get table val)\n                 table\n                 (assoc table val (gen-constant-id val))))))\n         env (update-in [::namespaces (-> env :ns :name) ::constants]\n               (fn [{:keys [seen order] :or {seen #{} order []} :as constants}]\n                 (cond-> constants\n                   (not (contains? seen val))\n                   (assoc\n                     :seen (conj seen val)\n                     :order (conj order val))))))))))\n\n(def default-namespaces '{cljs.core {:name cljs.core}\n                          cljs.user {:name cljs.user}})\n\n;; this exists solely to support read-only namespace access from macros.\n;; External tools should look at the authoritative ::namespaces slot in the\n;; compiler-env atoms/maps they're using already; this value will yield only\n;; `default-namespaces` when accessed outside the scope of a\n;; compilation/analysis call\n(def namespaces\n  #?(:clj\n     (reify clojure.lang.IDeref\n       (deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))\n     :cljs\n     (reify IDeref\n       (-deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))))\n\n(defn get-namespace\n  ([key]\n    (get-namespace env/*compiler* key))\n  ([cenv key]\n   (if-some [ns (get-in @cenv [::namespaces key])]\n       ns\n       (when (= 'cljs.user key)\n         {:name 'cljs.user}))))\n\n#?(:clj\n   (defmacro no-warn [& body]\n     (let [no-warnings (zipmap (keys *cljs-warnings*) (repeat false))]\n       `(binding [*cljs-warnings* ~no-warnings]\n          ~@body))))\n\n#?(:clj\n   (defmacro all-warn [& body]\n     (let [all-warnings (zipmap (keys *cljs-warnings*) (repeat true))]\n       `(binding [*cljs-warnings* ~all-warnings]\n          ~@body))))\n\n(defn get-line [x env]\n  (or (-> x meta :line) (:line env)))\n\n(defn get-col [x env]\n  (or (-> x meta :column) (:column env)))\n\n(defn intern-macros\n  \"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.\"\n  ([ns] (intern-macros ns false))\n  ([ns reload]\n    (when (or (nil? (gets @env/*compiler* ::namespaces ns :macros))\n              reload)\n      (swap! env/*compiler* assoc-in [::namespaces ns :macros]\n        (->> #?(:clj (ns-interns ns) :cljs (ns-interns* ns))\n             (filter (fn [[_ ^Var v]] (.isMacro v)))\n             (map (fn [[k v]]\n                    [k (as-> (meta v) vm\n                         (let [ns (.getName ^Namespace (:ns vm))]\n                           (assoc vm\n                             :ns ns\n                             :name (symbol (str ns) (str k))\n                             :macro true)))]))\n             (into {}))))))\n\n#?(:clj\n   (def load-mutex (Object.)))\n\n#?(:clj\n   (defn load-core []\n     (when (not @-cljs-macros-loaded)\n       (reset! -cljs-macros-loaded true)\n       (if *cljs-macros-is-classpath*\n         (locking load-mutex\n           (load *cljs-macros-path*))\n         (locking load-mutex\n           (load-file *cljs-macros-path*))))\n     (intern-macros 'cljs.core)))\n\n#?(:clj\n   (defmacro with-core-macros\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-core-macros-file\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path\n                  *cljs-macros-is-classpath* false]\n          ~@body))))\n\n(defn empty-env\n  \"Construct an empty analysis environment. Required to analyze forms.\"\n  []\n  (ensure\n    {:ns (get-namespace *cljs-ns*)\n     :context :statement\n     :locals {}\n     :fn-scope []\n     :js-globals (into {}\n                   (map #(vector % {:op :js-var :name % :ns 'js})\n                     '(alert window document console escape unescape\n                       screen location navigator history location\n                       global process require module exports)))}))\n\n(defn- source-info->error-data\n  [{:keys [file line column]}]\n  {:clojure.error/source file\n   :clojure.error/line   line\n   :clojure.error/column column})\n\n(defn source-info\n  ([env]\n   (when (:line env)\n     (source-info nil env)))\n  ([name env]\n   (cond-> {:file (if (= (-> env :ns :name) 'cljs.core)\n                    \"cljs/core.cljs\"\n                    *cljs-file*)\n            :line (get-line name env)\n            :column (get-col name env)}\n     (:root-source-info env)\n     (merge (select-keys env [:root-source-info])))))\n\n(defn message [env s]\n  (str s\n    (if (:line env)\n      (str \" at line \" (:line env) \" \" *cljs-file*)\n      (when *cljs-file*\n        (str \" in file \" *cljs-file*)))))\n\n(defn warning [warning-type env extra]\n  (doseq [handler *cljs-warning-handlers*]\n    (handler warning-type env extra)))\n\n(defn- accumulating-warning-handler [warn-acc]\n  (fn [warning-type env extra]\n    (when (warning-type *cljs-warnings*)\n      (swap! warn-acc conj [warning-type env extra]))))\n\n(defn- replay-accumulated-warnings [warn-acc]\n  (run! #(apply warning %) @warn-acc))\n\n(defn- error-data\n  ([env phase]\n   (error-data env phase nil))\n  ([env phase symbol]\n   (merge (-> (source-info env) source-info->error-data)\n     {:clojure.error/phase phase}\n     (when symbol\n       {:clojure.error/symbol symbol}))))\n\n(defn- compile-syntax-error\n  [env msg symbol]\n  (ex-info nil (error-data env :compile-syntax-check symbol)\n    #?(:clj (RuntimeException. ^String msg) :cljs (js/Error. msg))))\n\n(defn error\n  ([env msg]\n   (error env msg nil))\n  ([env msg cause]\n   (ex-info (message env msg)\n     (assoc (source-info env) :tag :cljs/analysis-error)\n     cause)))\n\n(defn analysis-error?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (= :cljs/analysis-error (:tag (ex-data ex))))\n\n(defn has-error-data?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (contains? (ex-data ex) :clojure.error/phase))\n\n#?(:clj\n   (defmacro wrapping-errors [env & body]\n     `(try\n        ~@body\n        (catch Throwable err#\n          (cond\n            (has-error-data? err#) (throw err#)\n            (analysis-error? err#) (throw (ex-info nil (error-data ~env :compilation) err#))\n            :else (throw (ex-info nil (error-data ~env :compilation) (error ~env (.getMessage err#) err#))))))))\n\n;; namespaces implicit to the inclusion of cljs.core\n(def implicit-nses '#{goog goog.object goog.string goog.array Math String})\n\n(defn implicit-import?\n  #?(:cljs {:tag boolean})\n  [env prefix suffix]\n  (contains? implicit-nses prefix))\n\n(declare get-expander)\n\n(defn confirm-var-exist-warning [env prefix suffix]\n  (fn [env prefix suffix]\n    (warning :undeclared-var env\n      {:prefix         prefix\n       :suffix         suffix\n       :macro-present? (not (nil? (get-expander (symbol (str prefix) (str suffix)) env)))})))\n\n(defn lib&sublib\n  \"If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property.\"\n  [lib]\n  (if-let [xs (re-matches #\"(.*)\\$(.*)\" (str lib))]\n    (drop 1 xs)\n    [lib nil]))\n\n(defn loaded-js-ns?\n  \"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.\"\n  #?(:cljs {:tag boolean})\n  [env prefix]\n  (when-not (gets @env/*compiler* ::namespaces prefix)\n    (let [ns (:ns env)]\n      (or (some? (get (:requires ns) prefix))\n          (some? (get (:imports ns) prefix))))))\n\n(defn- internal-js-module-exists?\n  [js-module-index module]\n  ;; we need to check both keys and values of the JS module index, because\n  ;; macroexpansion will be looking for the provided name - António Monteiro\n  (contains?\n    (into #{}\n      (mapcat (fn [[k v]]\n                [k (:name v)]))\n      js-module-index)\n    (str module)))\n\n(def js-module-exists?* (memoize internal-js-module-exists?))\n\n(defn js-module-exists?\n  [module]\n  (js-module-exists?* (get-in @env/*compiler* [:js-module-index]) module))\n\n(defn node-module-dep?\n  #?(:cljs {:tag boolean})\n  [module]\n  #?(:clj  (let [idx (get @env/*compiler* :node-module-index)]\n             (contains? idx (str (-> module lib&sublib first))))\n     :cljs (try\n             (and (= *target* \"nodejs\")\n                  (boolean\n                    (or (js/require.resolve (str module))\n                        (js/require.resolve (-> module lib&sublib first)))))\n             (catch :default _\n               false))))\n\n(defn dep-has-global-exports?\n  [module]\n  (let [[module _] (lib&sublib module)\n        global-exports (get-in @env/*compiler* [:js-dependency-index (str module) :global-exports])]\n    (or (contains? global-exports (symbol module))\n        (contains? global-exports (name module)))))\n\n(defn confirm-var-exists\n  ([env prefix suffix]\n   (let [warn (confirm-var-exist-warning env prefix suffix)]\n     (confirm-var-exists env prefix suffix warn)))\n  ([env prefix suffix missing-fn]\n   (let [sufstr     (str suffix)\n         suffix-str (if (and #?(:clj  (not= \"..\" sufstr)\n                                :cljs (not (identical? \"..\" sufstr))) ;; leave cljs.core$macros/.. alone\n                          #?(:clj  (re-find #\"\\.\" sufstr)\n                             :cljs ^boolean (.test #\"\\.\" sufstr)))\n                      (first (string/split sufstr #\"\\.\"))\n                      suffix)\n         suffix     (symbol suffix-str)]\n     (when (and (not (implicit-import? env prefix suffix))\n                (not (loaded-js-ns? env prefix))\n                (not (and (= 'cljs.core prefix) (= 'unquote suffix)))\n                (nil? (gets @env/*compiler* ::namespaces prefix :defs suffix))\n                (not (js-module-exists? prefix)))\n       (missing-fn env prefix suffix)))))\n\n(defn confirm-var-exists-throw []\n  (fn [env prefix suffix]\n    (confirm-var-exists env prefix suffix\n      (fn [env prefix suffix]\n        (throw (error env (str \"Unable to resolve var: \" suffix \" in this context\")))))))\n\n(defn resolve-ns-alias\n  ([env name]\n   (resolve-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:requires (:ns env)) sym not-found))))\n\n(defn resolve-macro-ns-alias\n  ([env name]\n   (resolve-macro-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:require-macros (:ns env)) sym not-found))))\n\n(defn confirm-ns\n  \"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.\"\n  [env ns-sym]\n  (when (and (not= 'cljs.core ns-sym)\n             (nil? (get implicit-nses ns-sym))\n             (nil? (get (-> env :ns :requires) ns-sym))\n             ;; something else may have loaded the namespace, i.e. load-file\n             (nil? (gets @env/*compiler* ::namespaces ns-sym))\n             ;; macros may refer to namespaces never explicitly required\n             ;; confirm that the library at least exists\n             #?(:clj (nil? (util/ns->source ns-sym)))\n             (not (js-module-exists? ns-sym)))\n    (warning :undeclared-ns env {:ns-sym ns-sym :js-provide ns-sym})))\n\n(defn core-name?\n  \"Is sym visible from core in the current compilation namespace?\"\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (and (or (some? (gets @env/*compiler* ::namespaces 'cljs.core :defs sym))\n           (if-some [mac (get-expander sym env)]\n             (let [^Namespace ns (-> mac meta :ns)]\n               (= (.getName ns) #?(:clj 'cljs.core :cljs 'cljs.core$macros)))\n             false))\n       (not (contains? (-> env :ns :excludes) sym))))\n\n(defn public-name?\n  \"Is sym public?\"\n  #?(:cljs {:tag boolean})\n  [ns sym]\n  (let [var-ast (or (gets @env/*compiler* ::namespaces ns :defs sym)\n                    #?(:clj  (gets @env/*compiler* ::namespaces ns :macros sym)\n                       :cljs (gets @env/*compiler* ::namespaces (symbol (str (name ns) \"$macros\")) :defs sym)))]\n    (and (some? var-ast)\n         (not (or (:private var-ast)\n                  (:anonymous var-ast))))))\n\n(defn js-tag? [x]\n  (and (symbol? x)\n       (or (= 'js x)\n           (= \"js\" (namespace x)))))\n\n(defn normalize-js-tag [x]\n  ;; if not 'js, assume constructor\n  (if-not (= 'js x)\n    (with-meta 'js\n      {:prefix (conj (->> (string/split (name x) #\"\\.\")\n                       (map symbol) vec)\n                 'prototype)})\n    x))\n\n(defn ->type-set\n  \"Ensures that a type tag is a set.\"\n  [t]\n  (if #?(:clj  (set? t)\n         :cljs (impl/cljs-set? t))\n    t\n    #{t}))\n\n(defn canonicalize-type [t]\n  \"Ensures that a type tag is either nil, a type symbol, or a non-singleton\n  set of type symbols, absorbing clj-nil into seq and all types into any.\"\n  (cond\n    (symbol? t) t\n    (empty? t) nil\n    (== 1 (count t)) (first t)\n    (contains? t 'any) 'any\n    (contains? t 'seq) (let [res (disj t 'clj-nil)]\n                         (if (== 1 (count res))\n                           'seq\n                           res))\n    :else t))\n\n(defn add-types\n  \"Produces a union of types.\"\n  ([] 'any)\n  ([t1] t1)\n  ([t1 t2]\n   (if (or (nil? t1)\n           (nil? t2))\n     'any\n     (-> (set/union (->type-set t1) (->type-set t2))\n       canonicalize-type)))\n  ([t1 t2 & ts]\n   (apply add-types (add-types t1 t2) ts)))\n\n(def alias->type\n  '{object   Object\n    string   String\n    number   Number\n    array    Array\n    function Function\n    boolean  Boolean\n    symbol   Symbol})\n\n(defn has-extern?*\n  ([pre externs]\n   (let [pre (if-some [me (find\n                            (get-in externs '[Window prototype])\n                            (first pre))]\n               (if-some [tag (-> me first meta :tag)]\n                 (into [tag 'prototype] (next pre))\n                 pre)\n               pre)]\n     (has-extern?* pre externs externs)))\n  ([pre externs top]\n   (cond\n     (empty? pre) true\n     :else\n     (let [x  (first pre)\n           me (find externs x)]\n       (cond\n         (not me) false\n         :else\n         (let [[x' externs'] me\n               xmeta (meta x')]\n           (if (and (= 'Function (:tag xmeta)) (:ctor xmeta))\n             (or (has-extern?* (into '[prototype] (next pre)) externs' top)\n                 (has-extern?* (next pre) externs' top))\n             (recur (next pre) externs' top))))))))\n\n(defn has-extern?\n  ([pre]\n   (has-extern? pre (get-externs)))\n  ([pre externs]\n   (or (has-extern?* pre externs)\n       (when (= 1 (count pre))\n         (let [x (first pre)]\n           (or (get-in externs (conj '[Window prototype] x))\n               (get-in externs (conj '[Number] x)))))\n       (-> (last pre) str (string/starts-with? \"cljs$\")))))\n\n(defn js-tag\n  ([pre]\n   (js-tag pre :tag))\n  ([pre tag-type]\n   (js-tag pre tag-type (get-externs)))\n  ([pre tag-type externs]\n   (js-tag pre tag-type externs externs))\n  ([pre tag-type externs top]\n   (when-let [[p externs' :as me] (find externs (first pre))]\n     (let [tag (-> p meta tag-type)]\n       (if (= (count pre) 1)\n         (when tag (symbol \"js\" (str (alias->type tag tag))))\n         (or (js-tag (next pre) tag-type externs' top)\n             (js-tag (into '[prototype] (next pre)) tag-type (get top tag) top)))))))\n\n(defn dotted-symbol? [sym]\n  (let [s (str sym)]\n    #?(:clj  (and (.contains s \".\")\n                  (not (.contains s \"..\")))\n       :cljs (and ^boolean (goog.string/contains s \".\")\n                  (not ^boolean (goog.string/contains s \"..\"))))))\n\n(defn munge-node-lib [name]\n  (str \"node$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                    :cljs \"$$\")))))\n\n(defn munge-global-export [name]\n  (str \"global$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                      :cljs \"$$\")))))\n\n(defn resolve-alias\n  \"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.\"\n  [ns sym]\n  ;; Conditionally alias aget/aset fns to checked variants\n  (if (and (= 'cljs.core ns)\n           ('#{aget aset} sym)\n           (checked-arrays))\n    (get-in '{:warn  {aget checked-aget\n                      aset checked-aset}\n              :error {aget checked-aget'\n                      aset checked-aset'}}\n      [(checked-arrays) sym])\n    sym))\n\n(defn ns->module-type [ns]\n  (cond\n    (js-module-exists? ns) :js\n    (node-module-dep? ns) :node\n    (dep-has-global-exports? ns) :global))\n\n(defmulti resolve* (fn [env sym full-ns current-ns] (ns->module-type full-ns)))\n\n(defmethod resolve* :js\n  [env sym full-ns current-ns]\n  {:name (symbol (str full-ns) (str (name sym)))\n   :op :js-var\n   :ns full-ns})\n\n(defn extern-pre [sym current-ns]\n  (let [pre (into '[Object] (->> (string/split (name sym) #\"\\.\") (map symbol) vec))]\n    (when-not (has-extern? pre)\n      (swap! env/*compiler* update-in\n        (into [::namespaces current-ns :externs] pre) merge {}))\n    pre))\n\n(defn node-like?\n  ([]\n   (node-like? (compiler-options)))\n  ([opts]\n   (and (= :nodejs (:target opts))\n        (false? (:nodejs-rt opts)))))\n\n(defmethod resolve* :node\n  [env sym full-ns current-ns]\n  ;; not actually targeting Node.js, we need to generate externs\n  (if (node-like?)\n    (let [pre (extern-pre sym current-ns)]\n      {:ns      current-ns\n       :name    (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n       :op      :js-var\n       :tag     (with-meta 'js {:prefix pre})\n       :foreign true})\n    {:ns      current-ns\n     :name    (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n     :op      :js-var\n     :foreign true}))\n\n(defmethod resolve* :global\n  [env sym full-ns current-ns]\n  (let [pre (extern-pre sym current-ns)]\n    {:ns current-ns\n     :name (symbol (str current-ns) (str (munge-global-export full-ns) \".\" (name sym)))\n     :op :js-var\n     :tag (with-meta 'js {:prefix pre})\n     :foreign true}))\n\n(def ^:private private-var-access-exceptions\n  \"Specially-treated symbols for which we don't trigger :private-var-access warnings.\"\n  '#{cljs.core/checked-aget\n     cljs.core/checked-aset\n     cljs.core/checked-aget'\n     cljs.core/checked-aset'})\n\n(defmethod resolve* :default\n  [env sym full-ns current-ns]\n  (let [sym-ast (gets @env/*compiler* ::namespaces full-ns :defs (symbol (name sym)))\n        sym-name (symbol (str full-ns) (str (name sym)))]\n    (when (and (not= current-ns full-ns)\n               (:private sym-ast)\n               (not *private-var-access-nowarn*)\n               (not (contains? private-var-access-exceptions sym-name)))\n      (warning :private-var-access env\n        {:sym sym-name}))\n    (merge sym-ast\n      {:name sym-name\n       :op :var\n       :ns   full-ns})))\n\n(defn required? [ns env]\n  (or (contains? (set (vals (gets env :ns :requires))) ns)\n      (contains? (set (vals (gets env :ns :uses))) ns)))\n\n(defn invokeable-ns?\n  \"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.\"\n  [ns env]\n  (let [ns (resolve-ns-alias env ns)]\n    (and (required? ns env)\n         (or (js-module-exists? ns)\n             (node-module-dep? ns)\n             (dep-has-global-exports? ns)))))\n\n(defn resolve-invokeable-ns [ns current-ns env]\n  (let [ns (resolve-ns-alias env ns)\n        module-type (ns->module-type ns)]\n    (case module-type\n      :js     {:name (symbol\n                       (or (gets @env/*compiler* :js-module-index ns :name)\n                           (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns 'js}\n      :node   {:name (symbol (str current-ns)\n                       (munge-node-lib (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns}\n      :global {:name (symbol (str current-ns)\n                       (munge-global-export (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns})))\n\n;; core.async calls `macroexpand-1` manually with an ill-formed\n;; :locals map. Normally :locals maps symbols maps, but\n;; core.async adds entries mapping symbols to symbols. We work\n;; around that specific case here. This is called defensively\n;; every time we lookup the :locals map.\n(defn handle-symbol-local [sym lb]\n  (if (symbol? lb)\n    {:name sym}\n    lb))\n\n(defn resolve-var\n  \"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.\"\n  ([env sym]\n   (resolve-var env sym nil))\n  ([env sym confirm]\n   (resolve-var env sym confirm true))\n  ([env sym confirm default?]\n   (let [locals (:locals env)]\n     (if #?(:clj  (= \"js\" (namespace sym))\n            :cljs (identical? \"js\" (namespace sym)))\n       (let [symn (-> sym name symbol)\n             shadowed-by-local (handle-symbol-local symn (get locals symn))]\n         (cond\n           (some? shadowed-by-local)\n           (do (warning :js-shadowed-by-local env {:name sym})\n               (assoc shadowed-by-local :op :local))\n\n           :else\n           (let [pre (->> (string/split (name sym) #\"\\.\") (map symbol) vec)]\n             (when (and (not (has-extern? pre))\n                        ;; ignore exists? usage\n                        (not (-> sym meta ::no-resolve)))\n               (swap! env/*compiler* update-in\n                 (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))\n             (merge\n               {:name sym\n                :op :js-var\n                :ns   'js\n                :tag  (with-meta (or (js-tag pre) (:tag (meta sym)) 'js) {:prefix pre})}\n               (when-let [ret-tag (js-tag pre :ret-tag)]\n                 {:js-fn-var true\n                  :ret-tag ret-tag})))))\n       (let [s  (str sym)\n             lb (handle-symbol-local sym (get locals sym))\n             current-ns (-> env :ns :name)]\n         (cond\n           (some? lb) (assoc lb :op :local)\n\n           (some? (namespace sym))\n           (let [ns      (namespace sym)\n                 ns      (if #?(:clj  (= \"clojure.core\" ns)\n                                :cljs (identical? \"clojure.core\" ns))\n                           \"cljs.core\"\n                           ns)\n                 full-ns (resolve-ns-alias env ns\n                           (or (and (js-module-exists? ns)\n                                    (gets @env/*compiler* :js-module-index ns :name))\n                             (symbol ns)))]\n             (when (some? confirm)\n               (when (not= current-ns full-ns)\n                 (confirm-ns env full-ns))\n               (confirm env full-ns (symbol (name sym))))\n             (resolve* env sym full-ns current-ns))\n\n           (dotted-symbol? sym)\n           (let [idx    (.indexOf s \".\")\n                 prefix (symbol (subs s 0 idx))\n                 suffix (subs s (inc idx))]\n             ;; check if prefix is some existing def\n             (if-let [resolved (resolve-var env prefix nil false)]\n               (update resolved :name #(symbol (str % \".\" suffix)))\n               (let [idx (.lastIndexOf s \".\")\n                     pre (subs s 0 idx)\n                     suf (subs s (inc idx))]\n                 {:op   :var\n                  :name (symbol pre suf)\n                  :ns   (symbol pre)})))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :uses sym))\n           (let [full-ns (gets @env/*compiler* ::namespaces current-ns :uses sym)]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :renames sym))\n           (let [qualified-symbol (gets @env/*compiler* ::namespaces current-ns :renames sym)\n                 full-ns (symbol (namespace qualified-symbol))\n                 sym     (symbol (name qualified-symbol))]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :imports sym))\n           (recur env (gets @env/*compiler* ::namespaces current-ns :imports sym) confirm default?)\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :defs sym))\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))\n\n           (core-name? env sym)\n           (let [sym (resolve-alias 'cljs.core sym)]\n             (when (some? confirm)\n               (confirm env 'cljs.core sym))\n             (merge (gets @env/*compiler* ::namespaces 'cljs.core :defs sym)\n               {:name (symbol \"cljs.core\" (str sym))\n                :op :var\n                :ns 'cljs.core}))\n\n           (invokeable-ns? s env)\n           (resolve-invokeable-ns s current-ns env)\n\n           :else\n           (when default?\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))))))))\n\n(defn resolve-existing-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.\"\n  [env sym]\n  (if-not (-> sym meta ::no-resolve)\n    (resolve-var env sym confirm-var-exists)\n    (resolve-var env sym)))\n\n(defn confirm-bindings\n  \"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.\"\n  [env names]\n  (doseq [name names]\n    (let [env (assoc env :ns (get-namespace *cljs-ns*))\n          ev (resolve-existing-var env name)]\n      (when (and ev (not (-> ev :dynamic)))\n        (warning :dynamic env {:ev ev :name (:name ev)})))))\n\n(defn resolve-macro-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"\n  [env sym]\n  (let [ns (-> env :ns :name)\n        namespaces (get @env/*compiler* ::namespaces)]\n    (cond\n      (some? (namespace sym))\n      (let [ns (namespace sym)\n            ns (if (= \"clojure.core\" ns) \"cljs.core\" ns)\n            full-ns (resolve-macro-ns-alias env ns)\n            #?@(:cljs [full-ns (if-not (string/ends-with? (str full-ns) \"$macros\")\n                                 (symbol (str full-ns \"$macros\"))\n                                 full-ns)])]\n        #?(:clj (get-in namespaces [full-ns :macros (symbol (name sym))])\n           :cljs (get-in namespaces [full-ns :defs (symbol (name sym))])))\n\n      (some? (get-in namespaces [ns :use-macros sym]))\n      (let [full-ns (get-in namespaces [ns :use-macros sym])]\n        (get-in namespaces [full-ns :macros sym]))\n\n      (some? (get-in namespaces [ns :rename-macros sym]))\n      (let [qualified-symbol (get-in namespaces [ns :rename-macros sym])\n            full-ns (symbol (namespace qualified-symbol))\n            sym     (symbol (name qualified-symbol))]\n        (get-in namespaces [full-ns :macros sym]))\n\n      :else\n      (let [ns (cond\n                 (some? (get-in namespaces [ns :macros sym])) ns\n                 (core-name? env sym) #?(:clj  'cljs.core\n                                         :cljs impl/CLJS_CORE_MACROS_SYM))]\n        (when (some? ns)\n          #?(:clj  (get-in namespaces [ns :macros sym])\n             :cljs (get-in namespaces [ns :defs sym])))))))\n\n(declare analyze analyze-symbol analyze-seq)\n\n;; Note: This is the set of parse multimethod dispatch values,\n;; along with '&, and differs from cljs.core/special-symbol?\n(def specials '#{if def fn* do let* loop* letfn* throw try recur new set!\n                 ns deftype* defrecord* . js* & quote case* var ns*})\n\n(def ^:dynamic *recur-frames* nil)\n(def ^:dynamic *loop-lets* ())\n(def ^:dynamic *allow-redef* false)\n(def ^:dynamic *allow-ns* true)\n\n#?(:clj\n   (defmacro disallowing-recur [& body]\n     `(binding [*recur-frames* (cons nil *recur-frames*)] ~@body)))\n\n#?(:clj\n   (defmacro allowing-redef [& body]\n     `(binding [*allow-redef* true] ~@body)))\n\n#?(:clj\n   (defmacro disallowing-ns* [& body]\n     `(binding [*allow-ns* false] ~@body)))\n\n;; TODO: move this logic out - David\n(defn analyze-keyword\n  [env sym]\n  (register-constant! env sym)\n  {:op :const :val sym :env env :form sym :tag 'cljs.core/Keyword})\n\n(defn get-tag [e]\n  (if-some [tag (-> e :form meta :tag)]\n    tag\n    (if-some [tag (-> e :tag)]\n      tag\n      (-> e :info :tag))))\n\n(defn find-matching-method [f params]\n  ;; if local fn, need to look in :info\n  (let [methods (or (:methods f) (-> f :info :methods))\n        c       (count params)]\n    (some\n      (fn [m]\n        (and (or (== (:fixed-arity m) c)\n                 (:variadic? m))\n             m))\n      methods)))\n\n(defn type?\n  #?(:cljs {:tag boolean})\n  [env t]\n  ;; don't use resolve-existing-var to avoid warnings\n  (when (and (some? t) (symbol? t))\n    (let [var (binding [*private-var-access-nowarn* true]\n                (resolve-var env t))]\n      (if-some [type (:type var)]\n        type\n          (if-some [type (-> var :info :type)]\n            type\n              (if-some [proto (:protocol-symbol var)]\n                proto\n                (get '#{cljs.core/PersistentHashMap cljs.core/List} t)))))))\n\n(declare infer-tag)\n\n(defn unwrap-quote [{:keys [op] :as expr}]\n  (if #?(:clj (= op :quote)\n         :cljs (keyword-identical? op :quote))\n    (:expr expr)\n    expr))\n\n(defn infer-if [env e]\n  (let [{:keys [op form]} (unwrap-quote (:test e))\n        then-tag (infer-tag env (:then e))]\n    (if (and #?(:clj (= op :const)\n                :cljs (keyword-identical? op :const))\n             (not (nil? form))\n             (not (false? form)))\n      then-tag\n      (let [else-tag (infer-tag env (:else e))]\n        (cond\n          (or #?(:clj (= then-tag else-tag)\n                 :cljs (symbol-identical? then-tag else-tag))\n              #?(:clj (= else-tag impl/IGNORE_SYM)\n                 :cljs (symbol-identical? else-tag impl/IGNORE_SYM))) then-tag\n          #?(:clj (= then-tag impl/IGNORE_SYM)\n             :cljs (symbol-identical? then-tag impl/IGNORE_SYM)) else-tag\n          ;; TODO: temporary until we move not-native -> clj - David\n          (and (or (some? (get impl/NOT_NATIVE then-tag)) (type? env then-tag))\n               (or (some? (get impl/NOT_NATIVE else-tag)) (type? env else-tag)))\n          'clj\n          :else\n          (if (and (some? (get impl/BOOLEAN_OR_SEQ then-tag))\n                   (some? (get impl/BOOLEAN_OR_SEQ else-tag)))\n            'seq\n            (let [then-tag (if #?(:clj (set? then-tag)\n                                  :cljs (impl/cljs-set? then-tag))\n                             then-tag #{then-tag})\n                  else-tag (if #?(:clj (set? else-tag)\n                                  :cljs (impl/cljs-set? else-tag))\n                             else-tag #{else-tag})]\n              (into then-tag else-tag))))))))\n\n(defn infer-invoke [env {f :fn :keys [args] :as e}]\n  (let [me (assoc (find-matching-method f args) :op :fn-method)]\n    (if-some [ret-tag (infer-tag env me)]\n      ret-tag\n      (let [{:keys [info]} f]\n        (if-some [ret-tag (if (or (true? (:fn-var info))\n                                  (true? (:js-fn-var info)))\n                            (:ret-tag info)\n                            (when (= 'js (:ns info)) 'js))]\n          ret-tag\n          impl/ANY_SYM)))))\n\n(defn infer-tag\n  \"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node\"\n  [env e]\n    (if-some [tag (get-tag e)]\n      tag\n      (case (:op e)\n        :recur    impl/IGNORE_SYM\n        :throw    impl/IGNORE_SYM\n        :let      (infer-tag env (:body e))\n        :loop     (infer-tag env (:body e))\n        :do       (infer-tag env (:ret e))\n        :fn-method (infer-tag env (:body e))\n        :def      (infer-tag env (:init e))\n        :invoke   (infer-invoke env e)\n        :if       (infer-if env e)\n        :const    (case (:form e)\n                    true impl/BOOLEAN_SYM\n                    false impl/BOOLEAN_SYM\n                    impl/ANY_SYM)\n        :quote    (infer-tag env (:expr e))\n        (:var :local :js-var :binding)\n                  (if-some [init (:init e)]\n                    (infer-tag env init)\n                    (infer-tag env (:info e)))\n        (:host-field :host-call)\n                  impl/ANY_SYM\n        :js       impl/ANY_SYM\n        nil)))\n\n(defmulti parse (fn [op & rest] op))\n\n(defn var-meta\n  ([var]\n    (var-meta var nil))\n  ([var expr-env]\n   (let [sym (:name var)\n         ks [:ns :doc :file :line :column]\n         m (merge\n             (let [user-meta (:meta var)\n                   uks (keys user-meta)]\n               (zipmap uks\n                 (map #(list 'quote (get user-meta %)) uks)))\n             (assoc (zipmap ks (map #(list 'quote (get var %)) ks))\n               :name `(quote ~(symbol (name (:name var))))\n               :test `(when ~sym (.-cljs$lang$test ~sym))\n               :arglists (let [arglists (:arglists var)\n                               arglists' (if (= 'quote (first arglists))\n                                           (second arglists)\n                                           arglists)]\n                           (list 'quote\n                             (doall (map with-meta arglists'\n                                      (:arglists-meta var)))))))]\n     (if expr-env\n       (analyze expr-env m)\n       m))))\n\n(defn var-ast\n  [env sym]\n  ;; we need to dissoc locals for the `(let [x 1] (def x x))` case, because we\n  ;; want the var's AST and `resolve-var` will check locals first. - António Monteiro\n  (binding [*private-var-access-nowarn* true]\n    (let [env      (dissoc env :locals)\n          var      (resolve-var env sym (confirm-var-exists-throw))\n          expr-env (assoc env :context :expr)]\n      (when-some [var-ns (:ns var)]\n        {:var  (analyze expr-env sym)\n         :sym  (analyze expr-env `(quote ~(symbol (name var-ns) (name (:name var)))))\n         :meta (var-meta var expr-env)}))))\n\n(defmethod parse 'var\n  [op env [_ sym :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to var\")))\n  (when-not (symbol? sym)\n    (throw (error env \"Argument to var must be symbol\")))\n  (merge\n    {:env env\n     :op :the-var\n     :children [:var :sym :meta]\n     :form form}\n    (var-ast env sym)))\n\n(def ^:private predicate->tag\n  '{\n    ;; Base values\n    cljs.core/nil?            clj-nil\n    cljs.core/undefined?      clj-nil\n    cljs.core/false?          boolean\n    cljs.core/true?           boolean\n    cljs.core/zero?           number\n    cljs.core/infinite?       number\n\n    ;; Base types\n    cljs.core/boolean?        boolean\n    cljs.core/string?         string\n    cljs.core/char?           string\n    cljs.core/number?         number\n    cljs.core/integer?        number\n    cljs.core/float?          number\n    cljs.core/double?         number\n    cljs.core/array?          array\n    cljs.core/seq?            seq\n\n    ;; JavaScript types\n    cljs.core/regexp?         js/RegExp\n\n    ;; Types\n    cljs.core/keyword?        cljs.core/Keyword\n    cljs.core/var?            cljs.core/Var\n    cljs.core/symbol?         cljs.core/Symbol\n    cljs.core/volatile?       cljs.core/Volatile\n    cljs.core/delay?          cljs.core/Delay\n    cljs.core/reduced?        cljs.core/Reduced\n\n    ;; Subtypes\n    cljs.core/simple-keyword?    cljs.core/Keyword\n    cljs.core/qualified-keyword? cljs.core/Keyword\n    cljs.core/simple-symbol?     cljs.core/Symbol\n    cljs.core/qualified-symbol?  cljs.core/Symbol\n\n    ;;; Note: For non-marker protocol entries below, we\n    ;;; omit predicates that are based on satisfies? because\n    ;;; we cannot safely apply the fast-path optimization\n    ;;; which is enabled when the protocol type is inferred.\n    ;;; If adding a non-marker entry here, also add a test to\n    ;;; cljs.extend-to-native-test/test-extend-to-protocols.\n\n    ;; Protocols\n    cljs.core/map-entry?      cljs.core/IMapEntry\n    cljs.core/uuid?           cljs.core/IUUID\n    cljs.core/tagged-literal? cljs.core/ITaggedLiteral\n    cljs.core/inst?           cljs.core/Inst\n    cljs.core/sequential?     cljs.core/ISequential\n    cljs.core/list?           cljs.core/IList\n    cljs.core/record?         cljs.core/IRecord\n    cljs.core/chunked-seq?    cljs.core/IChunkedSeq\n\n    ;; Composites\n    cljs.core/seqable?        #{cljs.core/ISeqable array string}\n    cljs.core/ident?          #{cljs.core/Keyword cljs.core/Symbol}\n\n    ;; Composite subtypes\n    cljs.core/simple-ident?    #{cljs.core/Keyword cljs.core/Symbol}\n    cljs.core/qualified-ident? #{cljs.core/Keyword cljs.core/Symbol}\n    })\n\n(defn- simple-predicate-induced-tag\n  \"Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x).\"\n  [env test]\n  (when (and (list? test)\n             (== 2 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when-let [tag (predicate->tag (:name analyzed-fn))]\n          (let [sym (last test)]\n            (when (and (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(declare specials)\n\n(defn- type-check-induced-tag\n  \"Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x).\"\n  [env test]\n  (when (and (list? test)\n             (== 3 (count test))\n             (every? symbol? test)\n             (not (contains? specials (first test))))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when ('#{cljs.core/instance? cljs.core/implements?} (:name analyzed-fn))\n          (let [analyzed-type (no-warn (analyze (assoc env :context :expr) (second test)))\n                tag (:name analyzed-type)\n                sym (last test)]\n            (when (and (= :var (:op analyzed-type))\n                       (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- truth-induced-tag\n  \"Refine a tag to exclude clj-nil if the test is a local.\"\n  [env test]\n  (when (and (symbol? test)\n             (nil? (namespace test))\n             (get-in env [:locals test]))\n    (let [analyzed-symbol (no-warn (analyze (assoc env :context :expr) test))]\n      (when-let [tag (:tag analyzed-symbol)]\n        (when (and (set? tag)\n                   (contains? tag 'clj-nil))\n          [test (canonicalize-type (disj tag 'clj-nil))])))))\n\n(defn- set-test-induced-tags\n  \"Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type.\"\n  [env test]\n  (let [[local tag] (or (simple-predicate-induced-tag env test)\n                        (type-check-induced-tag env test)\n                        (truth-induced-tag env test))]\n    (cond-> env\n      local (assoc-in [:locals local :tag] tag))))\n\n(defmethod parse 'if\n  [op env [_ test then else :as form] name _]\n  (when (< (count form) 3)\n    (throw (compile-syntax-error env \"Too few arguments to if\" 'if)))\n  (when (> (count form) 4)\n    (throw (compile-syntax-error env \"Too many arguments to if\" 'if)))\n  (let [test-expr (disallowing-recur (analyze (assoc env :context :expr) test))\n        then-expr (allowing-redef (analyze (set-test-induced-tags env test) then))\n        else-expr (allowing-redef (analyze env else))]\n    {:env env :op :if :form form\n     :test test-expr :then then-expr :else else-expr\n     :unchecked *unchecked-if*\n     :children [:test :then :else]}))\n\n(defmethod parse 'case*\n  [op env [_ sym tests thens default :as form] name _]\n  (assert (symbol? sym) \"case* must switch on symbol\")\n  (assert (every? vector? tests) \"case* tests must be grouped in vectors\")\n  (let [expr-env (assoc env :context :expr)\n        v        (disallowing-recur (analyze expr-env sym))\n        tests    (mapv #(mapv (fn [t] (analyze expr-env t)) %) tests)\n        thens    (mapv #(analyze env %) thens)\n        nodes    (mapv (fn [tests then]\n                         {:op :case-node\n                          ;synthetic node, no :form\n                          :env env\n                          :tests (mapv (fn [test]\n                                         {:op :case-test\n                                          :form (:form test)\n                                          :env expr-env\n                                          :test test\n                                          :children [:test]})\n                                       tests)\n                          :then {:op :case-then\n                                 :form (:form then)\n                                 :env env\n                                 :then then\n                                 :children [:then]}\n                          :children [:tests :then]})\n                       tests\n                       thens)\n        default  (analyze env default)]\n    (assert (every? (fn [t]\n                      (or\n                        (-> t :info :const)\n                        (and (= :const (:op t))\n                             ((some-fn number? string? char?) (:form t)))))\n              (apply concat tests))\n      \"case* tests must be numbers, strings, or constants\")\n    {:env env :op :case :form form\n     :test v :nodes nodes :default default\n     :children [:test :nodes :default]}))\n\n(defmethod parse 'throw\n  [op env [_ throw-form :as form] name _]\n  (cond\n    (= 1 (count form))\n    (throw\n      (error env \"Too few arguments to throw, throw expects a single Error instance\"))\n    (< 2 (count form))\n    (throw\n      (error env \"Too many arguments to throw, throw expects a single Error instance\")))\n  (let [throw-expr (disallowing-recur (analyze (assoc env :context :expr) throw-form))]\n    {:env env :op :throw :form form\n     :exception throw-expr\n     :children [:exception]}))\n\n(defmethod parse 'try\n  [op env [_ & body :as form] name _]\n  (let [catchenv (update-in env [:context] #(if (= :expr %) :return %))\n        catch? (every-pred seq? #(= (first %) 'catch))\n        default? (every-pred catch? #(= (second %) :default))\n        finally? (every-pred seq? #(= (first %) 'finally))\n\n        {:keys [body cblocks dblock fblock]}\n        (loop [parser {:state :start :forms body\n                       :body [] :cblocks [] :dblock nil :fblock nil}]\n          (if (seq? (:forms parser))\n            (let [[form & forms*] (:forms parser)\n                  parser* (assoc parser :forms forms*)]\n              (case (:state parser)\n                :start (cond\n                         (catch? form) (recur (assoc parser :state :catches))\n                         (finally? form) (recur (assoc parser :state :finally))\n                         :else (recur (update-in parser* [:body] conj form)))\n                :catches (cond\n                           (default? form) (recur (assoc parser* :dblock form :state :finally))\n                           (catch? form) (recur (update-in parser* [:cblocks] conj form))\n                           (finally? form) (recur (assoc parser :state :finally))\n                           :else (throw (error env \"Invalid try form\")))\n                :finally (recur (assoc parser* :fblock form :state :done))\n                :done (throw (error env \"Unexpected form after finally\"))))\n            parser))\n\n        finally (when (seq fblock)\n                  (-> (disallowing-recur (analyze (assoc env :context :statement) `(do ~@(rest fblock))))\n                      (assoc :body? true)))\n        e (when (or (seq cblocks) dblock) (gensym \"e\"))\n        default (if-let [[_ _ name & cb] dblock]\n                  `(cljs.core/let [~name ~e] ~@cb)\n                  `(throw ~e))\n        cblock (if (seq cblocks)\n                 `(cljs.core/cond\n                   ~@(mapcat\n                      (fn [[_ type name & cb]]\n                        (when name (assert (not (namespace name)) \"Can't qualify symbol in catch\"))\n                        `[(cljs.core/instance? ~type ~e)\n                          (cljs.core/let [~name ~e] ~@cb)])\n                      cblocks)\n                   :else ~default)\n                 default)\n        locals (:locals catchenv)\n        locals (if e\n                 (assoc locals e\n                        {:name e\n                         :line (get-line e env)\n                         :column (get-col e env)})\n                 locals)\n        catch (when cblock\n                (disallowing-recur (analyze (assoc catchenv :locals locals) cblock)))\n        try (disallowing-recur (analyze (if (or e finally) catchenv env) `(do ~@body)))]\n\n    {:env env :op :try :form form\n     :body (assoc try :body? true)\n     :finally finally\n     :name e\n     :catch catch\n     :children (vec\n                 (concat [:body]\n                         (when catch\n                           [:catch])\n                         (when finally\n                           [:finally])))}))\n\n(defn valid-proto [x]\n  (when (symbol? x) x))\n\n(defn elide-env [env ast opts]\n  (dissoc ast :env))\n\n(defn replace-env-pass [new-env]\n  (fn [env ast opts]\n    (assoc ast :env new-env)))\n\n(defn ast-children [ast]\n  (mapcat (fn [c]\n            (let [g (get ast c)]\n              (cond\n                (vector? g) g\n                g [g])))\n          (:children ast)))\n\n(defn constant-value?\n  [{:keys [op] :as ast}]\n  (or (#{:quote :const} op)\n      (and (#{:map :set :vector} op)\n           (every? constant-value? (ast-children ast)))))\n\n(defn const-expr->constant-value [{:keys [op] :as e}]\n  (case op\n    :quote  (const-expr->constant-value (:expr e))\n    :const  (:val e)\n    :map    (zipmap (map const-expr->constant-value (:keys e))\n                    (map const-expr->constant-value (:vals e)))\n    :set    (into #{} (map const-expr->constant-value (:items e)))\n    :vector (into [] (map const-expr->constant-value (:items e)))))\n\n(defn- earmuffed? [sym]\n  (let [s (name sym)]\n    (and (> (count s) 2)\n         (string/starts-with? s \"*\")\n         (string/ends-with? s \"*\"))))\n\n(defn- core-ns? [ns-sym]\n  (let [s (name ns-sym)]\n    (and (not= 'cljs.user ns-sym)\n         (or (string/starts-with? s \"cljs.\")\n             (string/starts-with? s \"clojure.\")))))\n\n(defmethod parse 'def\n  [op env form _ _]\n  (when (> (count form) 4)\n    (throw (error env \"Too many arguments to def\")))\n  (let [pfn (fn\n              ([_ sym] {:sym sym})\n              ([_ sym init] {:sym sym :init init})\n              ([_ sym doc init] {:sym sym :doc doc :init init}))\n        args (apply pfn form)\n        sym (:sym args)\n        const? (-> sym meta :const)\n        sym-meta (meta sym)\n        tag (-> sym meta :tag)\n        protocol (-> sym meta :protocol valid-proto)\n        dynamic (-> sym meta :dynamic)\n        ns-name (-> env :ns :name)\n        locals (:locals env)\n        clash-ns (symbol (str ns-name \".\" sym))\n        sym-ns   (namespace sym)\n        sym      (cond\n                   (and sym-ns (not #?(:clj  (= (symbol sym-ns) ns-name)\n                                       :cljs (symbol-identical? (symbol sym-ns) ns-name))))\n                   (throw (error env (str \"Can't def ns-qualified name in namespace \" sym-ns)))\n\n                   (some? sym-ns)\n                   (symbol (name sym))\n\n                   :else sym)]\n    (when (some? (get-in @env/*compiler* [::namespaces clash-ns]))\n      (warning :ns-var-clash env\n        {:ns (symbol (str ns-name \".\" sym))\n         :var (symbol (str ns-name) (str sym))}))\n    (when (some? (:const (resolve-var (dissoc env :locals) sym)))\n      (throw (error env \"Can't redefine a constant\")))\n    (when-some [doc (:doc args)]\n      (when-not (string? doc)\n        (throw (error env \"Too many arguments to def\"))))\n    (when (and (not dynamic)\n               (earmuffed? sym)\n               (not (core-ns? ns-name)))\n      (warning :non-dynamic-earmuffed-var env\n        {:var (str sym)}))\n    (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n      (when (and (not *allow-redef*)\n                 (not (:declared v))\n                 (not (:declared sym-meta))\n                 *file-defs*\n                 (get @*file-defs* sym))\n        (warning :redef-in-file env {:sym sym :line (:line v)}))\n      (when (and (:declared v)\n                 (:arglists v)\n                 (not= (:arglists v) (:arglists sym-meta)))\n        (warning :declared-arglists-mismatch env {:ns-name  ns-name :sym sym\n                                                  :declared (second (:arglists v))\n                                                  :defined  (second (:arglists sym-meta))})))\n    (let [env (if (or (and (not= ns-name 'cljs.core)\n                           (core-name? env sym))\n                      (some? (get-in @env/*compiler* [::namespaces ns-name :uses sym])))\n                (let [ev (resolve-existing-var (dissoc env :locals)\n                           ;; ::no-resolve true is to suppress \"can't take value\n                           ;; of macro warning\" when sym resolves to a macro\n                           (with-meta sym {::no-resolve true}))\n                      conj-to-set (fnil conj #{})]\n                  (when (public-name? (:ns ev) sym)\n                    (warning :redef env {:sym sym :ns (:ns ev) :ns-name ns-name}))\n                  (swap! env/*compiler* update-in [::namespaces ns-name :excludes]\n                     conj-to-set sym)\n                  (update-in env [:ns :excludes] conj-to-set sym))\n                env)\n          var-name (:name (resolve-var (dissoc env :locals) sym))\n          init-expr (when (contains? args :init)\n                      (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n                        (merge\n                          {:name var-name}\n                          sym-meta\n                          (when (true? dynamic) {:dynamic true})\n                          (source-info var-name env)))\n                      (disallowing-recur\n                        (disallowing-ns*\n                          (analyze (assoc env :context :expr) (:init args) sym))))\n          fn-var? (and (some? init-expr) (= (:op init-expr) :fn))\n          tag (cond\n                fn-var? (or (:ret-tag init-expr) tag (:inferred-ret-tag init-expr))\n                tag tag\n                dynamic impl/ANY_SYM\n                :else (:tag init-expr))\n          export-as (when-let [export-val (-> sym meta :export)]\n                      (if (= true export-val) var-name export-val))\n          doc (or (:doc args) (-> sym meta :doc))]\n      (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n        (when (and (not (-> sym meta :declared))\n                   (and (true? (:fn-var v)) (not fn-var?)))\n          (warning :fn-var env {:ns-name ns-name :sym sym})))\n\n      ;; declare must not replace any analyzer data of an already def'd sym\n      (when (or (nil? (get-in @env/*compiler* [::namespaces ns-name :defs sym]))\n                (not (:declared sym-meta)))\n        (when *file-defs*\n          (swap! *file-defs* conj sym))\n\n        (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n          (merge\n            {:name var-name}\n            ;; remove actual test metadata, as it includes non-valid EDN and\n            ;; cannot be present in analysis cached to disk - David\n            (cond-> sym-meta\n              (:test sym-meta) (assoc :test true))\n            {:meta (-> sym-meta\n                       (dissoc :test)\n                       (update-in [:file]\n                         (fn [f]\n                           (if (= (-> env :ns :name) 'cljs.core)\n                             \"cljs/core.cljs\"\n                             f))))}\n            (when doc {:doc doc})\n            (when const?\n              (let [const-expr\n                    (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n                      (analyze env (:init args)))]\n                (when (constant-value? const-expr)\n                  {:const-expr const-expr})))\n            (when (true? dynamic) {:dynamic true})\n            (source-info var-name env)\n            ;; the protocol a protocol fn belongs to\n            (when protocol\n              {:protocol protocol})\n            ;; symbol for reified protocol\n            (when-let [protocol-symbol (-> sym meta :protocol-symbol)]\n              {:protocol-symbol protocol-symbol\n               :info (-> protocol-symbol meta :protocol-info)\n               :impls #{}})\n            (when fn-var?\n              (let [params (map #(vec (map :name (:params %))) (:methods init-expr))]\n                (merge\n                  {:fn-var (not (:macro sym-meta))\n                   ;; protocol implementation context\n                   :protocol-impl (:protocol-impl init-expr)\n                   ;; inline protocol implementation context\n                   :protocol-inline (:protocol-inline init-expr)}\n                  (if-some [top-fn-meta (:top-fn sym-meta)]\n                    top-fn-meta\n                    {:variadic? (:variadic? init-expr)\n                     :max-fixed-arity (:max-fixed-arity init-expr)\n                     :method-params params\n                     :arglists (:arglists sym-meta)\n                     :arglists-meta (doall (map meta (:arglists sym-meta)))}))))\n            (when (and (:declared sym-meta)\n                       (:arglists sym-meta))\n              {:declared true\n               :fn-var true\n               :method-params (second (:arglists sym-meta))})\n            (if (and fn-var? (some? tag))\n              {:ret-tag tag}\n              (when tag {:tag tag})))))\n      (merge\n        {:env env\n         :op :def\n         :form form\n         :ns ns-name\n         :name var-name\n         :var (assoc\n                (analyze\n                  (-> env (dissoc :locals)\n                    (assoc :context :expr)\n                    (assoc :def-var true))\n                  sym)\n                :op :var)\n         :doc doc\n         :jsdoc (:jsdoc sym-meta)}\n        (when-let [goog-type (:goog-define sym-meta)]\n          {:goog-define goog-type})\n        (when (true? (:def-emits-var env))\n          {:var-ast (var-ast env sym)})\n        (when-some [test (:test sym-meta)]\n          {:test (analyze (assoc env :context :expr) test)})\n        (when (some? tag)\n          (if fn-var?\n            {:ret-tag tag}\n            {:tag tag}))\n        (when (true? dynamic) {:dynamic true})\n        (when (some? export-as) {:export export-as})\n        (if (some? init-expr)\n          {:init init-expr\n           :children [:var :init]}\n          {:children [:var]})))))\n\n(defn analyze-fn-method-param [env]\n  (fn [[locals params] [arg-id name]]\n    (when (namespace name)\n      (throw (error env (str \"Can't use qualified name as parameter: \" name))))\n    (let [line   (get-line name env)\n          column (get-col name env)\n          nmeta  (meta name)\n          tag    (:tag nmeta)\n          shadow (when (some? locals)\n                   (handle-symbol-local name (locals name)))\n          env    (merge (select-keys env [:context])\n                   {:line line :column column})\n          param  {:op :binding\n                  :name name\n                  :line line\n                  :column column\n                  :tag tag\n                  :shadow shadow\n                  :local :arg\n                  :arg-id arg-id\n                  ;; Give the fn params the same shape\n                  ;; as a :var, so it gets routed\n                  ;; correctly in the compiler\n                  :env env\n                  :info {:name name :shadow shadow}\n                  :binding-form? true}]\n     [(assoc locals name param) (conj params param)])))\n\n(defn analyze-fn-method-body [env form recur-frames]\n  (binding [*recur-frames* recur-frames]\n    (analyze env form)))\n\n(defn- analyze-fn-method [env locals form type analyze-body?]\n  (let [param-names     (first form)\n        variadic        (boolean (some '#{&} param-names))\n        param-names     (vec (remove '#{&} param-names))\n        body            (next form)\n        step            (analyze-fn-method-param env)\n        step-init       [locals []]\n        [locals params] (reduce step step-init (map-indexed vector param-names))\n        params'         (if (true? variadic)\n                          (butlast params)\n                          params)\n        fixed-arity     (count params')\n        recur-frame     {:protocol-impl (:protocol-impl env)\n                         :params        params\n                         :flag          (atom nil)\n                         :tags          (atom [])}\n        recur-frames    (cons recur-frame *recur-frames*)\n        body-env        (assoc env :context :return :locals locals)\n        body-form       `(do ~@body)\n        expr            (when analyze-body?\n                          (analyze-fn-method-body body-env body-form recur-frames))\n        recurs          @(:flag recur-frame)]\n    (merge\n      {:env env\n       :op :fn-method\n       :variadic? variadic\n       :params params\n       :fixed-arity fixed-arity\n       :type type\n       :form form\n       :recurs recurs}\n      (if (some? expr)\n        {:body (assoc expr :body? true)\n         :children [:params :body]}\n        {:children [:params]}))))\n\n(declare analyze-wrap-meta)\n\n(defn fn-name-var [env locals name]\n  (when (some? name)\n    (let [ns       (-> env :ns :name)\n          shadow   (handle-symbol-local name (get locals name))\n          shadow   (when (nil? shadow)\n                     (get-in env [:js-globals name]))\n          fn-scope (:fn-scope env)\n          name-var {:name name\n                    :op :binding\n                    :local :fn\n                    :info {:fn-self-name true\n                           :fn-scope fn-scope\n                           :ns ns\n                           :shadow shadow}}\n          tag      (-> name meta :tag)\n          ret-tag  (when (some? tag)\n                     {:ret-tag tag})]\n      (merge name-var ret-tag))))\n\n(defn analyze-fn-methods-pass2* [menv locals type meths]\n  (mapv #(analyze-fn-method menv locals % type true) meths))\n\n(defn analyze-fn-methods-pass2 [menv locals type meths]\n  (analyze-fn-methods-pass2* menv locals type meths))\n\n(defmethod parse 'fn*\n  [op env [_ & args :as form] name _]\n  (let [named-fn?    (symbol? (first args))\n        [name meths] (if named-fn?\n                         [(first args) (next args)]\n                         [name (seq args)])\n        ;; turn (fn [] ...) into (fn ([]...))\n        meths        (if (vector? (first meths))\n                       (list meths)\n                       meths)\n        locals       (:locals env)\n        name-var     (fn-name-var env locals name)\n        env          (if (some? name)\n                       (update-in env [:fn-scope] conj name-var)\n                       env)\n        locals       (if (and (some? locals)\n                              named-fn?)\n                       (assoc locals name name-var)\n                       locals)\n        form-meta    (meta form)\n        type         (::type form-meta)\n        proto-impl   (::protocol-impl form-meta)\n        proto-inline (::protocol-inline form-meta)\n        menv         (-> env\n                         (cond->\n                           (> (count meths) 1)\n                           (assoc :context :expr))\n                         ;; clear loop flag since method bodies won't be in a loop at first\n                         ;; only tracking this to keep track of locals we need to capture\n                         (dissoc :in-loop)\n                         (merge {:protocol-impl proto-impl\n                                 :protocol-inline proto-inline}))\n        methods      (map #(disallowing-ns* (analyze-fn-method menv locals % type (nil? name))) meths)\n        mfa          (transduce (map :fixed-arity) max 0 methods)\n        variadic     (boolean (some :variadic? methods))\n        locals       (if named-fn?\n                       (update-in locals [name] assoc\n                         ;; TODO: can we simplify? - David\n                         :fn-var true\n                         :variadic? variadic\n                         :max-fixed-arity mfa\n                         :method-params (map :params methods))\n                       locals)\n        methods      (if (some? name)\n                       ;; a second pass with knowledge of our function-ness/arity\n                       ;; lets us optimize self calls\n                       (disallowing-ns* (analyze-fn-methods-pass2 menv locals type meths))\n                       (vec methods))\n        form         (vary-meta form dissoc ::protocol-impl ::protocol-inline ::type)\n        js-doc       (when (true? variadic)\n                       \"@param {...*} var_args\")\n        children     (if (some? name-var)\n                       [:local :methods]\n                       [:methods])\n        inferred-ret-tag (let [inferred-tags (map (partial infer-tag env) (map :body methods))]\n                           (when (apply = inferred-tags)\n                             (first inferred-tags)))\n        ast   (merge {:op :fn\n                      :env env\n                      :form form\n                      :name name-var\n                      :methods methods\n                      :variadic? variadic\n                      :tag 'function\n                      :inferred-ret-tag inferred-ret-tag\n                      :recur-frames *recur-frames*\n                      :in-loop (:in-loop env)\n                      :loop-lets *loop-lets*\n                      :jsdoc [js-doc]\n                      :max-fixed-arity mfa\n                      :protocol-impl proto-impl\n                      :protocol-inline proto-inline\n                      :children children}\n                     (when (some? name-var)\n                       {:local name-var}))]\n    (let [variadic-methods (into []\n                             (comp (filter :variadic?) (take 1))\n                             methods)\n          variadic-params  (if (pos? (count variadic-methods))\n                             (count (:params (nth variadic-methods 0)))\n                             0)\n          param-counts     (into [] (map (comp count :params)) methods)]\n      (when (< 1 (count variadic-methods))\n        (warning :multiple-variadic-overloads env {:name name-var}))\n      (when (not (or (zero? variadic-params) (== variadic-params (+ 1 mfa))))\n        (warning :variadic-max-arity env {:name name-var}))\n      (when (not= (distinct param-counts) param-counts)\n        (warning :overload-arity env {:name name-var})))\n    (analyze-wrap-meta ast)))\n\n(defmethod parse 'letfn*\n  [op env [_ bindings & exprs :as form] name _]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error env \"bindings must be vector of even number of elements\")))\n  (let [n->fexpr (into {} (map (juxt first second) (partition 2 bindings)))\n        names    (keys n->fexpr)\n        context  (:context env)\n        ;; first pass to collect information for recursive references\n        [meth-env bes]\n        (reduce (fn [[{:keys [locals] :as env} bes] n]\n                  (let [ret-tag (-> n meta :tag)\n                        fexpr (no-warn (analyze env (n->fexpr n)))\n                        be (cond->\n                             {:name n\n                              :op :binding\n                              :fn-var true\n                              :line (get-line n env)\n                              :column (get-col n env)\n                              :local :letfn\n                              :shadow (handle-symbol-local n (locals n))\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))}\n                             ret-tag (assoc :ret-tag ret-tag))]\n                    [(assoc-in env [:locals n] be)\n                     (conj bes be)]))\n                [env []] names)\n        meth-env (assoc meth-env :context :expr)\n        ;; the real pass\n        [meth-env bes]\n        (reduce (fn [[meth-env bes] {:keys [name shadow] :as be}]\n                  (let [env (assoc-in meth-env [:locals name] shadow)\n                        fexpr (analyze env (n->fexpr name))\n                        be' (assoc be\n                              :init fexpr\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))\n                              :children [:init])]\n                    [(assoc-in env [:locals name] be')\n                     (conj bes be')]))\n          [meth-env []] bes)\n        expr (-> (analyze (assoc meth-env :context (if (= :expr context) :return context)) `(do ~@exprs))\n                 (assoc :body? true))]\n    {:env env :op :letfn :bindings bes :body expr :form form\n     :children [:bindings :body]}))\n\n(defn analyze-do-statements* [env exprs]\n  (mapv #(analyze (assoc env :context :statement) %) (butlast exprs)))\n\n(defn analyze-do-statements [env exprs]\n  (disallowing-recur (analyze-do-statements* env exprs)))\n\n(defmethod parse 'do\n  [op env [_ & exprs :as form] _ _]\n  (let [statements (analyze-do-statements env exprs)]\n    (if (<= (count exprs) 1)\n      (let [ret      (analyze env (first exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements :ret ret\n         :children children})\n      (let [ret-env  (if (= :statement (:context env))\n                       (assoc env :context :statement)\n                       (assoc env :context :return))\n            ret      (analyze ret-env (last exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements\n         :ret ret\n         :children children}))))\n\n(defn analyze-let-binding-init [env init loop-lets]\n  (binding [*loop-lets* loop-lets]\n    (analyze env init)))\n\n(defn get-let-tag [name init-expr]\n  (if-some [tag (-> name meta :tag)]\n      tag\n        (if-some [tag (-> init-expr :tag)]\n          tag\n          (-> init-expr :info :tag))))\n\n(defn analyze-let-bindings* [encl-env bindings op]\n  (loop [bes []\n         env (assoc encl-env :context :expr)\n         bindings (seq (partition 2 bindings))]\n\n      (if-some [[name init] (first bindings)]\n        (let []\n          (when (or (some? (namespace name))\n                  #?(:clj  (.contains (str name) \".\")\n                     :cljs ^boolean (goog.string/contains (str name) \".\")))\n            (throw (error encl-env (str \"Invalid local name: \" name))))\n          (let [init-expr (analyze-let-binding-init env init (cons {:params bes} *loop-lets*))\n                line (get-line name env)\n                col (get-col name env)\n                shadow (handle-symbol-local name (get-in env [:locals name]))\n                be {:name name\n                    :line line\n                    :column col\n                    :init init-expr\n                    :tag (get-let-tag name init-expr)\n                    :local op\n                    :shadow shadow\n                    ;; Give let* bindings same shape as var so\n                    ;; they get routed correctly in the compiler\n                    :op :binding\n                    :env {:line line :column col}\n                    :info {:name name\n                           :shadow shadow}\n                    :binding-form? true\n                    :children [:init]}\n                be (if (= :fn (:op init-expr))\n                     ;; TODO: can we simplify - David\n                     (merge be\n                       {:fn-var true\n                        ;; copy over the :fn-method information we need for invoke type inference\n                        :methods (into [] (map #(select-keys % [:tag :fixed-arity :variadic?]) (:methods init-expr)))\n                        :variadic? (:variadic? init-expr)\n                        :max-fixed-arity (:max-fixed-arity init-expr)\n                        :method-params (map :params (:methods init-expr))})\n                     be)]\n            (recur (conj bes be)\n              (assoc-in env [:locals name] be)\n              (next bindings))))\n        [bes env])))\n\n(defn analyze-let-bindings [encl-env bindings op]\n  (disallowing-recur (analyze-let-bindings* encl-env bindings op)))\n\n(defn analyze-let-body* [env context exprs]\n  (analyze (assoc env :context (if (= :expr context) :return context)) `(do ~@exprs)))\n\n(defn analyze-let-body [env context exprs recur-frames loop-lets]\n  (binding [*recur-frames* recur-frames\n            *loop-lets* loop-lets]\n    (analyze-let-body* env context exprs)))\n\n(defn analyze-let\n  [encl-env [_ bindings & exprs :as form] is-loop widened-tags]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error encl-env \"bindings must be vector of even number of elements\")))\n  (let [context      (:context encl-env)\n        op           (if (true? is-loop) :loop :let)\n        bindings     (if widened-tags\n                       (vec (mapcat\n                              (fn [[name init] widened-tag]\n                                [(vary-meta name assoc :tag widened-tag) init])\n                              (partition 2 bindings)\n                              widened-tags))\n                       bindings)\n        [bes env]    (-> encl-env\n                         (cond->\n                           (true? is-loop) (assoc :in-loop true))\n                         (analyze-let-bindings bindings op))\n        recur-frame  (when (true? is-loop)\n                       {:params bes\n                        :flag (atom nil)\n                        :tags (atom (mapv :tag bes))})\n        recur-frames (if recur-frame\n                       (cons recur-frame *recur-frames*)\n                       *recur-frames*)\n        loop-lets    (cond\n                       (true? is-loop) *loop-lets*\n                       (some? *loop-lets*) (cons {:params bes} *loop-lets*))\n        ;; Accumulate warnings for deferred replay iff there's a possibility of re-analyzing\n        warn-acc     (when (and is-loop\n                                (not widened-tags))\n                       (atom []))\n        expr         (if warn-acc\n                       (with-warning-handlers [(accumulating-warning-handler warn-acc)]\n                         (analyze-let-body env context exprs recur-frames loop-lets))\n                       (analyze-let-body env context exprs recur-frames loop-lets))\n        children     [:bindings :body]\n        nil->any     (fnil identity 'any)]\n    (if (and is-loop\n             (not widened-tags)\n             (not= (mapv nil->any @(:tags recur-frame))\n                   (mapv (comp nil->any :tag) bes)))\n      (recur encl-env form is-loop @(:tags recur-frame))\n      (do\n        (when warn-acc\n          (replay-accumulated-warnings warn-acc))\n        {:op       op\n         :env      encl-env\n         :bindings bes\n         :body     (assoc expr :body? true)\n         :form     form\n         :children children}))))\n\n(defmethod parse 'let*\n  [op encl-env form _ _]\n  (analyze-let encl-env form false nil))\n\n(defmethod parse 'loop*\n  [op encl-env form _ _]\n  (analyze-let encl-env form true nil))\n\n(defmethod parse 'recur\n  [op env [_ & exprs :as form] _ _]\n  (let [context (:context env)\n        frame (first *recur-frames*)\n        ;; Add dummy implicit target object if recuring to proto impl method head\n        add-implicit-target-object? (and (:protocol-impl frame)\n                                         (= (count exprs) (dec (count (:params frame)))))\n        exprs (cond->> exprs add-implicit-target-object? (cons nil))\n        exprs (disallowing-recur (vec (map #(analyze (assoc env :context :expr) %) exprs)))]\n    (when-not frame\n      (throw (error env \"Can't recur here\")))\n    (when-not (= (count exprs) (count (:params frame)))\n      (throw (error env (str \"recur argument count mismatch, expected: \"\n                          (count (:params frame)) \" args, got: \" (count exprs)))))\n    (when (and (:protocol-impl frame)\n               (not add-implicit-target-object?))\n      (warning :protocol-impl-recur-with-target env {:form (:form (first exprs))}))\n    (reset! (:flag frame) true)\n    (swap! (:tags frame) (fn [tags]\n                           (mapv (fn [tag expr]\n                                   ;; Widen by adding the type of the recur expression, except when recurring with a\n                                   ;; loop local: Since its final widened type is unknown, conservatively assume 'any.\n                                   (if (= :loop (:local expr))\n                                     'any\n                                     (add-types tag (:tag expr))))\n                             tags exprs)))\n    (assoc {:env env :op :recur :form form}\n      :frame frame\n      :exprs exprs\n      :children [:exprs])))\n\n(defn analyze-const\n  [env form]\n  (let [;; register constants\n        {:keys [tag]} (analyze (assoc env :quoted? true) form)]\n    {:op       :const\n     :env      env\n     :literal? true\n     :val      form\n     :tag      tag\n     :form     form}))\n\n(defmethod parse 'quote\n  [_ env [_ x :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to quote\")))\n  (let [expr (analyze-const env x)]\n    {:op :quote\n     :expr expr\n     :env env\n     :form form\n     :tag (:tag expr)\n     :children [:expr]}))\n\n(defmethod parse 'new\n  [_ env [_ ctor & args :as form] _ _]\n  (disallowing-recur\n   (let [enve (assoc env :context :expr)\n         ctorexpr (analyze enve ctor)\n         ctor-var (when (#{:var :local :js-var} (:op ctorexpr))\n                    (resolve-existing-var env ctor))\n         record-args\n         (when (and (:record ctor-var) (not (-> ctor meta :internal-ctor)))\n           (repeat 3 (analyze enve nil)))\n         argexprs (into (vec (map #(analyze enve %) args)) record-args)\n         known-num-fields (:num-fields ctor-var)\n         argc (count args)]\n     (when (and (not (-> ctor meta :internal-ctor))\n                (some? known-num-fields) (not= known-num-fields argc))\n       (warning :fn-arity env {:argc argc :ctor ctor}))\n     {:env env :op :new :form form :class ctorexpr :args argexprs\n      :children [:class :args]\n      :tag (let [name (-> ctorexpr :info :name)]\n             (or ('{js/Object object\n                    js/String string\n                    js/Array  array\n                    js/Number number\n                    js/Function function\n                    js/Boolean boolean} name)\n                 name))})))\n\n(defmethod parse 'set!\n  [_ env [_ target val alt :as form] _ _]\n  (let [[target val] (if alt\n                       ;; (set! o -prop val)\n                       [`(. ~target ~val) alt]\n                       [target val])]\n    (disallowing-recur\n      (binding [*private-var-access-nowarn* true]\n        (let [enve  (assoc env :context :expr)\n              texpr (cond\n                      (symbol? target)\n                      (do\n                        (cond\n                          (and (= target '*unchecked-if*)   ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-if* val)\n\n                          (and (= target '*unchecked-arrays*) ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-arrays* val)\n\n                          (and (= target '*warn-on-infer*)\n                               (or (true? val) (false? val)))\n                          (set! *cljs-warnings* (assoc *cljs-warnings* :infer-warning val)))\n                        (when (some? (:const (resolve-var (dissoc env :locals) target)))\n                          (throw (error env \"Can't set! a constant\")))\n                        (let [local (handle-symbol-local target (-> env :locals target))]\n                          (when-not (or (nil? local)\n                                        (and (:field local)\n                                             (or (:mutable local)\n                                                 (:unsynchronized-mutable local)\n                                                 (:volatile-mutable local))))\n                            (throw (error env \"Can't set! local var or non-mutable field\"))))\n                        (analyze-symbol enve target))\n\n                      :else\n                      (when (seq? target)\n                        (let [texpr (if (-> target meta :extend-type)\n                                      ;; we're setting a prototype via extend-type macro\n                                      ;; nothing to warn\n                                      (binding [*cljs-warnings*\n                                                (assoc *cljs-warnings* :infer-warning false)]\n                                        (analyze-seq enve target nil))\n                                      (analyze-seq enve target nil))]\n                          (when (:field texpr)\n                            texpr))))\n              vexpr (analyze enve val)]\n          ;; as top level fns are decomposed for Closure cross-module code motion, we need to\n          ;; restore their :methods information\n          (when (seq? target)\n            (let [sym  (some-> target second)\n                  meta (meta sym)]\n              (when-let [info (and (= :fn (:op vexpr)) (:top-fn meta))]\n                (swap! env/*compiler* update-in\n                  [::namespaces (-> env :ns :name) :defs sym :methods]\n                  (fnil conj [])\n                  ;; just use original fn meta, as the fn method is already desugared\n                  ;; only get tag from analysis\n                  (merge\n                    (select-keys info [:fixed-arity :variadic?])\n                    (select-keys (-> vexpr :methods first) [:tag]))))))\n          (when-not texpr\n            (throw (error env \"set! target must be a field or a symbol naming a var\")))\n          (cond\n            (and (not (:def-emits-var env))                 ;; non-REPL context\n                 (some? ('#{*unchecked-if* *unchecked-arrays* *warn-on-infer*} target)))\n            {:env env :op :no-op}\n\n            :else\n            {:env env :op :set! :form form :target texpr :val vexpr\n             :children [:target :val]}))))))\n\n#?(:clj (declare analyze-file))\n\n#?(:clj\n   (defn locate-src\n     \"Given a namespace return the corresponding ClojureScript (.cljs or .cljc)\n     resource on the classpath or file from the root of the build.\"\n     [ns]\n     (or (util/ns->source ns)\n       ;; Find sources available in inputs given to cljs.closure/build - Juho Teperi\n       (some (fn [source]\n               (if (= ns (:ns source))\n                 (:source-file source)))\n             (:sources @env/*compiler*))\n       ;; Find sources in directory given to cljs.compiler/compile-root - Juho Teperi\n       (let [rootp (when-let [root (:root @env/*compiler*)]\n                     (.getPath ^File root))\n             cljsf (io/file rootp (ns->relpath ns :cljs))\n             cljcf (io/file rootp (ns->relpath ns :cljc))]\n         (if (and (.exists cljsf) (.isFile cljsf))\n           cljsf\n           (if (and (.exists cljcf) (.isFile cljcf))\n             cljcf))))))\n\n(defn foreign-dep?\n  #?(:cljs {:tag boolean})\n  [dep]\n  (let [js-index (:js-dependency-index @env/*compiler*)]\n    (if-some [[_ {:keys [foreign]}] (find js-index (name (-> dep lib&sublib first)))]\n      foreign\n      false)))\n\n(defn analyze-deps\n  \"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.\"\n  ([lib deps env]\n   (analyze-deps lib deps env\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([lib deps env opts]\n   (let [compiler @env/*compiler*]\n     (binding [*cljs-dep-set* (vary-meta (conj *cljs-dep-set* lib) update-in [:dep-path] conj lib)]\n       (assert (every? #(not (contains? *cljs-dep-set* %)) deps)\n         (str \"Circular dependency detected, \"\n           (apply str\n             (interpose \" -> \"\n               (conj (-> *cljs-dep-set* meta :dep-path)\n                 (some *cljs-dep-set* deps))))))\n       (doseq [dep deps]\n         (when-not (or (some? (get-in compiler [::namespaces dep :defs]))\n                       (node-module-dep? dep)\n                       (js-module-exists? (name dep))\n                       #?(:clj (deps/find-classpath-lib dep)))\n           (let [idx (:js-dependency-index compiler)\n                 dep (-> dep lib&sublib first)]\n             (if (contains? idx (name dep))\n               (let [dep-name (name dep)]\n                 (when (string/starts-with? dep-name \"goog.\")\n                   #?(:clj (let [js-lib (get idx dep-name)\n                                 ns (externs/analyze-goog-file (:file js-lib) (symbol dep-name))]\n                             (swap! env/*compiler* update-in [::namespaces dep] merge ns)))))\n               #?(:clj  (if-some [src (locate-src dep)]\n                          (analyze-file src opts)\n                          (throw\n                            (error env\n                              (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))\n                  :cljs (throw\n                          (error env\n                            (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))))))))))\n\n(defn missing-use? [lib sym cenv]\n  (let [js-lib (get-in cenv [:js-dependency-index (name lib)])]\n    (and (= (get-in cenv [::namespaces lib :defs sym] ::not-found) ::not-found)\n         (not (= (get js-lib :group) :goog))\n         (not (get js-lib :closure-lib))\n         (not (node-module-dep? lib))\n         (not (dep-has-global-exports? lib)))))\n\n(defn missing-rename? [sym cenv]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))]\n    (missing-use? lib sym cenv)))\n\n(defn missing-use-macro? [lib sym]\n  ;; guard against string requires\n  (when (symbol? lib)\n    (let [the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n      (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym))))))\n\n(defn missing-rename-macro? [sym]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))\n        the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n    (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym)))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-uses\n  [uses env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use? lib sym cenv)) uses))))\n\n;; returns (s/map-of symbol? qualified-symbol?)\n(defn missing-renames [renames env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[_ qualified-sym]] (missing-rename? qualified-sym cenv)) renames))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use-macro? lib sym)) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (not (missing-use-macro? lib sym))) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-rename-macros [rename-macros env]\n  (into {} (filter (fn [[_ qualified-sym]] (not (missing-rename-macro? qualified-sym))) rename-macros)))\n\n(defn check-uses [uses env]\n  (let [cenv @env/*compiler*]\n    (doseq [[sym lib] uses]\n      (when (missing-use? lib sym cenv)\n        (throw\n          (error env\n            (error-message :undeclared-ns-form {:type \"var\" :lib lib :sym sym})))))))\n\n(defn check-use-macros\n  ([use-macros env]\n    (check-use-macros use-macros nil env))\n  ([use-macros missing-uses env]\n   (let [cenv @env/*compiler*]\n     (doseq [[sym lib] use-macros]\n       (when (missing-use-macro? lib sym)\n         (throw\n           (error env\n             (error-message :undeclared-ns-form {:type \"macro\" :lib lib :sym sym})))))\n     (check-uses (missing-use-macros missing-uses env) env)\n     (inferred-use-macros missing-uses env))))\n\n(defn check-use-macros-inferring-missing\n  [{:keys [name uses use-macros] :as ast} env]\n  (let [missing-uses        (when (and *analyze-deps* (seq uses))\n                              (missing-uses uses env))\n        maybe-macros        (apply dissoc uses (keys missing-uses))\n        remove-missing-uses #(apply dissoc % (keys missing-uses))\n        ast' (-> ast\n               (update-in [:use-macros]\n                 #(-> %\n                   (merge (check-use-macros use-macros missing-uses env))\n                   (merge (inferred-use-macros maybe-macros env))))\n               (update-in [:uses] remove-missing-uses))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :use-macros] merge (:use-macros ast'))\n        (update-in [::namespaces name :uses] remove-missing-uses)))\n    ast'))\n\n(defn check-rename-macros-inferring-missing\n  [{:keys [name renames] :as ast} env]\n  (let [missing-renames        (when (and *analyze-deps* (seq renames))\n                                 (missing-renames renames env))\n        maybe-macros           (apply dissoc renames (keys missing-renames))\n        missing-rename-macros  (inferred-rename-macros missing-renames env)\n        remove-missing-renames #(apply dissoc % (keys missing-renames))\n        ast' (-> ast\n               (update-in [:rename-macros]\n                 #(-> %\n                   (merge missing-rename-macros)\n                   (merge (inferred-rename-macros maybe-macros env))))\n               (update-in [:renames] remove-missing-renames))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :rename-macros] merge (:rename-macros ast'))\n        (update-in [::namespaces name :renames] remove-missing-renames)))\n    ast'))\n\n(defn parse-ns-error-msg [spec msg]\n  (str msg \"; offending spec: \" (pr-str spec)))\n\n(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (string? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (or (symbol? (first spec)) (string? (first spec)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"))))\n    (when-not (every? #{:as :refer :rename} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as, :refer and :rename options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))\n\n(defn parse-ns-excludes [env args]\n  (reduce\n    (fn [s [k & filters]]\n      (if (= k :refer-clojure)\n        (do\n          (when (seq (:excludes s))\n            (throw (error env \"Only one :refer-clojure form is allowed per namespace definition\")))\n          (let [valid-kws #{:exclude :rename}\n                xs\n                (loop [fs (seq filters)\n                       ret {:excludes #{}\n                            :renames {}}\n                       err (not (even? (count filters)))]\n                  (cond\n                    (true? err)\n                    (throw\n                      (error env \"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\"))\n\n                    (some? fs)\n                    (let [kw (first fs)]\n                      (if (valid-kws kw)\n                        (let [refs (second fs)]\n                          (cond\n                            (not (or (and (= kw :exclude) (sequential? refs) (every? symbol? refs))\n                                     (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs))))\n                            (recur fs ret true)\n\n                            (= kw :exclude)\n                            (recur (nnext fs) (update-in ret [:excludes] into refs) false)\n\n                            (= kw :rename)\n                            (recur (nnext fs) (update-in ret [:renames] merge refs) false)))\n                        (recur fs ret true)))\n\n                    :else ret))]\n            (merge-with into s xs)))\n        s))\n    {:excludes #{}\n     :renames {}} args))\n\n(defn use->require [env [lib & filters :as spec]]\n  (when-not (and (symbol? lib) (odd? (count spec)))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"))))\n  (loop [fs (seq filters) ret [lib] err false]\n    (cond\n      (true? err)\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\")))\n\n      (some? fs)\n      (let [kw (first fs)\n            only? (= kw :only)]\n        (if (or only? (= kw :rename))\n          (if (some? (some #{(if only? :refer kw)} ret))\n            (throw\n              (error env\n                (parse-ns-error-msg spec\n                  \"Each of :only and :rename options may only be specified once in :use / :use-macros\")))\n            (let [refs (second fs)]\n              (if-not (or (and only? (sequential? refs) (every? symbol? refs))\n                          (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs)))\n                (recur fs ret true)\n                (recur (nnext fs) (into ret [(if only? :refer kw) refs]) false))))\n          (recur fs ret true )))\n\n      :else (if (some? (some #{:refer} ret))\n              ret\n              (recur fs ret true)))))\n\n(defn parse-require-spec [env macros? deps aliases spec]\n  (if (or (symbol? spec) (string? spec))\n    (recur env macros? deps aliases [spec])\n    (do\n      (basic-validate-ns-spec env macros? spec)\n      (let [[lib & opts] spec\n            ;; We need to load JS modules by the name that has been created by the\n            ;; Google Closure compiler, e.g. module$resources$libs$calculator.\n            ;; This means that we need to create an alias from the module name\n            ;; given with :provides to the new name.\n            [lib js-module-provides] (if-some [js-module-name (gets @env/*compiler* :js-module-index (str lib) :name)]\n                                       [(symbol js-module-name) lib]\n                                       [lib nil])\n            {alias :as referred :refer renamed :rename\n             :or {alias (if (string? lib)\n                          (symbol (munge lib))\n                          lib)}}\n            (apply hash-map opts)\n            referred-without-renamed (seq (remove (set (keys renamed)) referred))\n            [rk uk renk] (if macros? [:require-macros :use-macros :rename-macros] [:require :use :rename])]\n        (when-not (or (symbol? alias) (nil? alias))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":as must be followed by a symbol in :require / :require-macros\"))))\n        (when (some? alias)\n          (let [alias-type (if macros? :macros :fns)\n                lib'       ((alias-type @aliases) alias)]\n            (when (and (some? lib') (not= lib lib'))\n              (throw (error env (parse-ns-error-msg spec \":as alias must be unique\"))))\n            (swap! aliases\n              update-in [alias-type]\n              conj [alias lib] (when js-module-provides [js-module-provides lib]))))\n        (when-not (or (and (sequential? referred)\n                           (every? symbol? referred))\n                      (nil? referred))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":refer must be followed by a sequence of symbols in :require / :require-macros\"))))\n        (when-not macros?\n          (swap! deps conj lib))\n        (merge\n          (when (some? alias)\n            {rk (merge {alias lib} {lib lib}\n                  (when js-module-provides {js-module-provides lib}))})\n          (when (some? referred-without-renamed)\n            {uk (apply hash-map (interleave referred-without-renamed (repeat lib)))})\n          (when (some? renamed)\n            {renk (reduce (fn [m [original renamed]]\n                            (when-not (some #{original} referred)\n                              (throw (error env\n                                       (str \"Renamed symbol \" original \" not referred\"))))\n                            (assoc m renamed (symbol (str lib) (str original))))\n                    {} renamed)}))))))\n\n(defn parse-import-spec [env deps spec]\n  (when-not (or (and (sequential? spec)\n                     (every? symbol? spec))\n                (and (symbol? spec) (nil? (namespace spec))))\n    (throw (error env (parse-ns-error-msg spec \"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"))))\n  (let [import-map (cond\n                     (sequential? spec)\n                     (->> (rest spec)\n                       (map #(vector % (symbol (str (first spec) \".\" %))))\n                       (into {}))\n\n                     (not (== -1 (.indexOf (str spec) \".\")))\n                     {(symbol (last (string/split (str spec) #\"\\.\"))) spec}\n\n                     :else {})]\n    (doseq [[_ spec] import-map]\n      (swap! deps conj spec))\n    {:import  import-map\n     :require import-map}))\n\n#?(:clj (declare parse-ns))\n\n(defn macro-autoload-ns?\n  \"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.\"\n  #?(:cljs {:tag boolean})\n  [form]\n  (when *macro-infer*\n    (let [ns (if (sequential? form) (first form) form)\n         {:keys [use-macros require-macros]}\n         (or (get-in @env/*compiler* [::namespaces ns])\n             #?(:clj\n                (when-let [res (util/ns->source ns)]\n                  (:ast (parse-ns res)))))]\n      (or (some #{ns} (vals use-macros))\n          (some #{ns} (vals require-macros))))))\n\n(defn clj-ns->cljs-ns\n  \"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs\"\n  [sym]\n  (let [segs (string/split (clojure.core/name sym) #\"\\.\")]\n    (if (= \"clojure\" (first segs))\n      (symbol (string/join \".\" (cons \"cljs\" (next segs))))\n      sym)))\n\n#?(:clj\n   (defn aliasable-clj-ns?\n     \"Predicate for testing with a symbol represents an aliasable clojure namespace.\"\n     [sym]\n     (when-not (util/ns->source sym)\n       (let [[seg1 :as segs] (string/split (clojure.core/name sym) #\"\\.\")]\n         (when (= \"clojure\" seg1)\n           (let [sym' (clj-ns->cljs-ns sym)]\n             (util/ns->source sym')))))))\n\n#?(:clj\n   (defn process-rewrite-form [[k & specs :as form]]\n     (letfn [(process-spec [maybe-spec]\n               (let [[lib & xs] (if (sequential? maybe-spec)\n                                  maybe-spec\n                                  [maybe-spec])]\n                 (if (and (symbol? lib) (aliasable-clj-ns? lib))\n                   (let [lib' (clj-ns->cljs-ns lib)\n                         spec (cons lib' xs)]\n                     (into (if xs [spec] []) [(list lib' :as lib)]))\n                   [maybe-spec])))]\n       (if (#{:use :require} k)\n         (cons k (mapcat process-spec specs))\n         form))))\n\n#?(:clj\n   (defn rewrite-cljs-aliases\n     \"Alias non-existing clojure.* namespaces to existing cljs.* namespaces if\n      possible.\"\n     [args]\n     (map process-rewrite-form args)))\n\n(defn canonicalize-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (as-> (second quoted-spec-or-kw) spec\n                (if (or (vector? spec) (map? spec)) spec [spec]))))]\n    (map canonicalize specs)))\n\n(defn canonicalize-import-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (second quoted-spec-or-kw)))]\n    (map canonicalize specs)))\n\n(defn desugar-ns-specs\n  \"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.\"\n  [args]\n  (let [{:keys [require] :as indexed}\n        (->> args\n          (map (fn [[k & specs]] [k (into [] specs)]))\n          (into {}))\n        sugar-keys #{:include-macros :refer-macros}\n        ;; drop spec k and value from spec for generated :require-macros\n        remove-from-spec\n        (fn [pred spec]\n          (if-not (and (sequential? spec) (some pred spec))\n            spec\n            (let [[l r] (split-with (complement pred) spec)]\n              (recur pred (concat l (drop 2 r))))))\n        ;; rewrite :refer-macros to :refer for generated :require-macros\n        replace-refer-macros\n        (fn [spec]\n          (if-not (sequential? spec)\n            spec\n            (map (fn [x] (if (= x :refer-macros) :refer x)) spec)))\n        reload-spec? #(#{:reload :reload-all} %)\n        to-macro-specs\n        (fn [specs]\n          (->> specs\n            (filter\n              (fn [x]\n                (or (and (sequential? x)\n                         (some sugar-keys x))\n                    (reload-spec? x)\n                    (macro-autoload-ns? x))))\n            (map (fn [x]\n                   (if-not (reload-spec? x)\n                     (->> x (remove-from-spec #{:include-macros})\n                            (remove-from-spec #{:refer})\n                            (remove-from-spec #{:rename})\n                            (replace-refer-macros))\n                     x)))))\n        remove-sugar (partial remove-from-spec sugar-keys)]\n    (if-some [require-specs (seq (to-macro-specs require))]\n      (map (fn [x]\n             (if-not (reload-spec? x)\n               (let [[k v] x]\n                 (cons k (map remove-sugar v)))\n               x))\n        (update-in indexed [:require-macros] (fnil into []) require-specs))\n      args)))\n\n(defn find-def-clash [env ns segments]\n  (let [to-check (map (fn [xs]\n                        [(symbol (string/join \".\" (butlast xs)))\n                         (symbol (last xs))])\n                   (drop 2 (reductions conj [] segments)))]\n    (doseq [[clash-ns name] to-check]\n      (when (get-in @env/*compiler* [::namespaces clash-ns :defs name])\n        (warning :ns-var-clash env\n          {:ns ns\n           :var (symbol (str clash-ns) (str name))})))))\n\n(defn macro-ns-name [name]\n  (let [name-str (str name)]\n    (if-not #?(:clj  (.endsWith name-str \"$macros\")\n               :cljs (gstring/endsWith name-str \"$macros\"))\n      (symbol (str name-str \"$macros\"))\n      name)))\n\n(defn- check-duplicate-aliases\n  [env old new]\n  (let [ns-name (:name old)]\n    (doseq [k [:requires :require-macros]]\n      (let [old-aliases (get old k)\n            new-aliases (get new k)]\n        (when-some [alias (some (set (keys new-aliases))\n                                (->> old-aliases\n                                     (remove (fn [[k v :as entry]]\n                                               (or (= k v)\n                                                   (= entry (find new-aliases k)))))\n                                     keys))]\n          (throw (error env\n                        (str \"Alias \" alias \" already exists in namespace \" ns-name\n                             \", aliasing \" (get old-aliases alias)))))))))\n\n(defn- merge-ns-info [old new env]\n  (if (pos? (count old))\n    (let [deep-merge-keys\n          [:use-macros :require-macros :rename-macros\n           :uses :requires :renames :imports]]\n      #?(:clj\n         (when *check-alias-dupes*\n           (check-duplicate-aliases env old new)))\n      (merge\n       old\n       (select-keys new [:excludes])\n       (merge-with merge\n                   (select-keys old deep-merge-keys)\n                   (select-keys new deep-merge-keys))))\n    new))\n\n(defmethod parse 'ns\n  [_ env [_ name & args :as form] _ opts]\n  (when-not *allow-ns*\n    (throw (error env \"Namespace declarations must appear at the top-level.\")))\n  (when-not (symbol? name)\n    (throw (error env \"Namespaces must be named by a symbol.\")))\n  (let [name (cond-> name (:macros-ns opts) macro-ns-name)]\n    (let [segments (string/split (clojure.core/name name) #\"\\.\")]\n      (when (= 1 (count segments))\n        (warning :single-segment-namespace env {:name name}))\n      (let [segment (some js-reserved segments)]\n        (when (some? segment)\n          (warning :munged-namespace env {:name name})))\n      (find-def-clash env name segments)\n      #?(:clj\n         (when (some (complement util/valid-js-id-start?) segments)\n           (throw\n             (AssertionError.\n               (str \"Namespace \" name \" has a segment starting with an invaild \"\n                    \"JavaScript identifier\"))))))\n    (let [docstring    (when (string? (first args)) (first args))\n          mdocstr      (-> name meta :doc)\n          args         (if (some? docstring) (next args) args)\n          metadata     (when (map? (first args)) (first args))\n          args         (desugar-ns-specs\n                         #?(:clj  (rewrite-cljs-aliases\n                                    (if metadata (next args) args))\n                            :cljs (if (some? metadata) (next args) args)))\n          name         (vary-meta name merge metadata)\n          {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n          core-renames (reduce (fn [m [original renamed]]\n                                 (assoc m renamed (symbol \"cljs.core\" (str original))))\n                         {} core-renames)\n          deps         (atom [])\n          aliases      (atom {:fns {} :macros {}})\n          spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                        :require-macros (partial parse-require-spec env true deps aliases)\n                        :use            (comp (partial parse-require-spec env false deps aliases)\n                                          (partial use->require env))\n                        :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                          (partial use->require env))\n                        :import         (partial parse-import-spec env deps)}\n          valid-forms  (atom #{:use :use-macros :require :require-macros :import})\n          reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n          reloads      (atom {})\n          {uses :use requires :require renames :rename\n           use-macros :use-macros require-macros :require-macros\n           rename-macros :rename-macros imports :import :as params}\n          (reduce\n            (fn [m [k & libs :as libspec]]\n              (when-not (#{:use :use-macros :require :require-macros :import} k)\n                (throw (error env (str \"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \" libspec \" instead.\"))))\n              (when-not (@valid-forms k)\n                (throw (error env (str \"Only one \" k \" form is allowed per namespace definition\"))))\n              (swap! valid-forms disj k)\n              ;; check for spec type reloads\n              (when-not (= :import k)\n                (when (some? (some #{:reload} libs))\n                  (swap! reload assoc k :reload))\n                (when (some? (some #{:reload-all} libs))\n                  (swap! reload assoc k :reload-all)))\n              ;; check for individual ns reloads from REPL interactions\n              (when-let [xs (seq (filter #(-> % meta :reload) libs))]\n                (swap! reloads assoc k\n                  (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n              (apply merge-with merge m\n                (map (spec-parsers k)\n                  (remove #{:reload :reload-all} libs))))\n            {} (remove (fn [[r]] (= r :refer-clojure)) args))\n          ;; patch `require-macros` and `use-macros` in Bootstrap for namespaces\n          ;; that require their own macros\n          #?@(:cljs [[require-macros use-macros]\n                     (map (fn [spec-map]\n                            (if (:macros-ns opts)\n                              (let [ns (symbol (subs (str name) 0 (- (count (str name)) 7)))]\n                                (reduce (fn [m [k v]]\n                                          (cond-> m\n                                            (not (symbol-identical? v ns))\n                                            (assoc k v)))\n                                  {} spec-map))\n                              spec-map)) [require-macros use-macros])])]\n      (set! *cljs-ns* name)\n      (let [ns-info\n            {:name           name\n             :doc            (or docstring mdocstr)\n             :excludes       excludes\n             :use-macros     use-macros\n             :require-macros require-macros\n             :rename-macros  rename-macros\n             :uses           uses\n             :requires       requires\n             :renames        (merge renames core-renames)\n             :imports        imports}]\n        (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n        (merge {:op      :ns\n                :env     env\n                :form    form\n                :deps    (into [] (distinct @deps))\n                :reload  @reload\n                :reloads @reloads}\n          (cond-> ns-info\n            (@reload :use)\n            (update-in [:uses]\n              (fn [m] (with-meta m {(@reload :use) true})))\n            (@reload :require)\n            (update-in [:requires]\n              (fn [m] (with-meta m {(@reload :require) true})))))))))\n\n(defmethod parse 'ns*\n  [_ env [_ quoted-specs :as form] _ opts]\n  (when-let [not-quoted (->> (remove keyword? quoted-specs)\n                          (remove #(and (seq? %) (= 'quote (first %))) )\n                          first)]\n    (throw (error env (str \"Arguments to \" (name (first quoted-specs))\n                        \" must be quoted. Offending spec: \" not-quoted))))\n  (when-not *allow-ns*\n    (throw (error env (str \"Calls to `\" (name (first quoted-specs))\n                        \"` must appear at the top-level.\"))))\n  (let [specs        (if (= :import (first quoted-specs))\n                       (canonicalize-import-specs quoted-specs)\n                       (canonicalize-specs quoted-specs))\n        name         (-> env :ns :name)\n        args         (desugar-ns-specs\n                       #?(:clj  (list (process-rewrite-form\n                                        specs))\n                          :cljs (list specs)))\n        {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n        core-renames (reduce (fn [m [original renamed]]\n                               (assoc m renamed (symbol \"cljs.core\" (str original))))\n                       {} core-renames)\n        deps         (atom [])\n        aliases      (atom {:fns {} :macros {}})\n        spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                      :require-macros (partial parse-require-spec env true deps aliases)\n                      :use            (comp (partial parse-require-spec env false deps aliases)\n                                        (partial use->require env))\n                      :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                        (partial use->require env))\n                      :import         (partial parse-import-spec env deps)}\n        reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n        reloads      (atom {})\n        {uses :use requires :require renames :rename\n         use-macros :use-macros require-macros :require-macros\n         rename-macros :rename-macros imports :import :as params}\n        (reduce\n          (fn [m [k & libs]]\n            ;; check for spec type reloads\n            (when-not (= :import k)\n              (when (some? (some #{:reload} libs))\n                (swap! reload assoc k :reload))\n              (when (some? (some #{:reload-all} libs))\n                (swap! reload assoc k :reload-all)))\n            ;; check for individual ns reloads from REPL interactions\n            (when-some [xs (seq (filter #(-> % meta :reload) libs))]\n              (swap! reloads assoc k\n                (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n            (apply merge-with merge m\n              (map (spec-parsers k)\n                (remove #{:reload :reload-all} libs))))\n          {} (remove (fn [[r]] (= r :refer-clojure)) args))]\n    (set! *cljs-ns* name)\n    (let [require-info\n          {:name           name\n           :excludes       excludes\n           :use-macros     use-macros\n           :require-macros require-macros\n           :rename-macros  rename-macros\n           :uses           uses\n           :requires       requires\n           :renames        (merge renames core-renames)\n           :imports        imports}]\n      (swap! env/*compiler* update-in [::namespaces name] merge-ns-info require-info env)\n      (merge {:op      :ns*\n              :env     env\n              :form    form\n              :deps    (into [] (distinct @deps))\n              :reload  @reload\n              :reloads @reloads}\n        (cond-> require-info\n          (@reload :use)\n          (update-in [:uses]\n            (fn [m] (with-meta m {(@reload :use) true})))\n          (@reload :require)\n          (update-in [:requires]\n            (fn [m] (with-meta m {(@reload :require) true}))))))))\n\n(defn parse-type\n  [op env [_ tsym fields pmasks body :as form]]\n  (let [t (:name (resolve-var (dissoc env :locals) tsym))\n        locals (reduce (fn [m fld]\n                         (assoc m fld\n                                {:name fld\n                                 :line (get-line fld env)\n                                 :column (get-col fld env)\n                                 :local :field\n                                 :field true\n                                 :mutable (-> fld meta :mutable)\n                                 :unsynchronized-mutable (-> fld meta :unsynchronized-mutable)\n                                 :volatile-mutable (-> fld meta :volatile-mutable)\n                                 :tag (-> fld meta :tag)\n                                 :shadow (m fld)}))\n                       {} (if (= :defrecord op)\n                            (concat fields '[__meta __extmap ^:mutable __hash])\n                            fields))\n        protocols (-> tsym meta :protocols)]\n    (swap! env/*compiler* update-in [::namespaces (-> env :ns :name) :defs tsym]\n           (fn [m]\n             (let [m (assoc (or m {})\n                       :name t\n                       :tag 'function\n                       :type true\n                       :num-fields (count fields)\n                       :record (= :defrecord op))]\n               (merge m\n                      (dissoc (meta tsym) :protocols)\n                      {:protocols protocols}\n                      (source-info tsym env)))))\n    {:op op :env env :form form :t t :fields fields :pmasks pmasks\n     :tag 'function\n     :protocols (disj protocols 'cljs.core/Object)\n     :children [#_:fields :body]\n     :body (analyze (assoc env :locals locals) body)}))\n\n(defmethod parse 'deftype*\n  [_ env form _ _]\n  (parse-type :deftype env form))\n\n(defmethod parse 'defrecord*\n  [_ env form _ _]\n  (parse-type :defrecord env form) )\n\n;; dot accessor code\n\n(def ^:private property-symbol? #(boolean (and (symbol? %) (re-matches #\"^-.*\" (name %)))))\n\n(defn- classify-dot-form\n  [[target member args]]\n  [(cond (nil? target) ::error\n         :default      ::expr)\n   (cond (property-symbol? member) ::property\n         (symbol? member)          ::symbol\n         (seq? member)             ::list\n         :default                  ::error)\n   (cond (nil? args) ()\n         :default    ::expr)])\n\n(defmulti build-dot-form #(classify-dot-form %))\n\n;; (. o -p)\n;; (. (...) -p)\n(defmethod build-dot-form [::expr ::property ()]\n  [[target prop _]]\n  {:dot-action ::access :target target\n   :field (with-meta (-> prop name (.substring 1) symbol) (meta prop))})\n\n;; (. o -p <args>)\n(defmethod build-dot-form [::expr ::property ::list]\n  [[target prop args]]\n  #?(:clj  (throw (Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))\n     :cljs (throw (js/Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))))\n\n(defn- build-method-call\n  \"Builds the intermediate method call map used to reason about the parsed form during\n  compilation.\"\n  [target meth args]\n  (if (symbol? meth)\n    {:dot-action ::call :target target :method meth :args args}\n    {:dot-action ::call :target target :method (first meth) :args args}))\n\n;; (. o m 1 2)\n(defmethod build-dot-form [::expr ::symbol ::expr]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o m)\n(defmethod build-dot-form [::expr ::symbol ()]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o (m))\n;; (. o (m 1 2))\n(defmethod build-dot-form [::expr ::list ()]\n  [[target meth-expr _]]\n  (build-method-call target (first meth-expr) (rest meth-expr)))\n\n(defmethod build-dot-form :default\n  [dot-form]\n  #?(:clj  (throw\n             (Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))\n     :cljs (throw\n             (js/Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))))\n\n(defn analyze-dot [env target field member+ form]\n  (let [v [target field member+]\n        {:keys [dot-action target method field args]} (build-dot-form v)\n        enve       (assoc env :context :expr)\n        targetexpr (analyze enve target)\n        form-meta  (meta form)\n        target-tag (:tag targetexpr)\n        prop       (or field method)\n        tag        (or (:tag form-meta)\n                       (and (js-tag? target-tag)\n                            (vary-meta (normalize-js-tag target-tag)\n                              update-in [:prefix] (fnil conj '[Object]) prop))\n                       nil)]\n    (when (and (not= 'constructor prop)\n               (not (string/starts-with? (str prop) \"cljs$\"))\n               (not (-> prop meta :protocol-prop)))\n      ;; Adding to Object\n      (when (= 'Object (first (-> tag meta :prefix)))\n        (warning :infer-warning env\n          {:warn-type :object :form form :property prop}))\n      (when (not= 'js target-tag)\n        ;; Cannot determine type of the target\n        (when (or (nil? target-tag) ('#{any} target-tag))\n          (warning :infer-warning env\n            {:warn-type :target :form form :property prop}))\n        ;; Unresolveable property on existing extern\n        (let [[pre' pre] ((juxt butlast identity) (-> tag meta :prefix))]\n          (when (and (has-extern? pre') (not (has-extern? pre)))\n            (warning :infer-warning env\n              {:warn-type :property :form form\n               :type (symbol \"js\"\n                       (string/join \".\"\n                         (cond-> pre' (= 'prototype (last pre')) butlast)))\n               :property prop})))))\n    (when (js-tag? tag)\n      (let [pre (-> tag meta :prefix)]\n        (when-not (has-extern? pre)\n          (swap! env/*compiler* update-in\n            (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))))\n    (case dot-action\n      ::access (let [children [:target]]\n                 {:op :host-field\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :field field\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :tag) tag)\n                         tag)})\n      ::call   (let [argexprs (mapv #(analyze enve %) args)\n                     children [:target :args]]\n                 {:op :host-call\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :method method\n                  :args argexprs\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :ret-tag) 'js)\n                         tag)}))))\n\n(defmethod parse '.\n  [_ env [_ target & [field & member+] :as form] _ _]\n  (disallowing-recur (analyze-dot env target field member+ form)))\n\n(defn get-js-tag [form]\n  (let [form-meta (meta form)]\n    (if-some [tag (:tag form-meta)]\n      tag\n      (when (true? (:numeric form-meta))\n        'number))))\n\n(defn js-star-interp\n  [env ^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)\n            inner (:name (resolve-existing-var env (symbol (subs s (+ 2 idx) end))))]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (cons inner\n              (js-star-interp env (subs s (inc end))))))))))\n\n(defn js-star-seg\n  [^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (js-star-seg (subs s (inc end)))))))))\n\n(def NUMERIC_SET '#{any number long double})\n\n(defn numeric-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO: type inference is not strong enough to detect that\n  ;; when functions like first won't return nil, so variadic\n  ;; numeric functions like cljs.core/< would produce a spurious\n  ;; warning without this - David\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    :else\n    (if (and (symbol? t) (some? (get NUMERIC_SET t)))\n      true\n      (when #?(:clj  (set? t)\n               :cljs (impl/cljs-set? t))\n        (or (contains? t 'number)\n            (contains? t 'long)\n            (contains? t 'double)\n            (contains? t 'any)\n            (contains? t 'js))))))\n\n(def array-types\n  '#{array objects ints longs floats doubles chars shorts bytes boolean})\n\n(defn array-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO same inference caveats as the numeric-type? fn above\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    (= 'any t) true\n    (contains? array-types t) true\n    :else\n    (boolean\n      (when #?(:clj  (set? t)\n               :cljs (impl/cljs-set? t))\n        (or (contains? t 'any)\n            (contains? t 'js)\n            (some array-types t))))))\n\n(defn- analyze-js-star-args [js-op env args]\n  (first (reduce\n           (fn [[argexprs env] arg]\n             [(conj argexprs (analyze env arg))\n              (if (= js-op 'cljs.core/and)\n                (set-test-induced-tags env arg)\n                env)])\n           [[] env]\n           args)))\n\n(defn analyze-js-star* [env jsform args form]\n  (let [enve      (assoc env :context :expr)\n        form-meta (meta form)\n        segs      (js-star-seg jsform)\n        tag       (get-js-tag form)\n        js-op     (:js-op form-meta)\n        argexprs  (analyze-js-star-args js-op enve args)\n        numeric   (:numeric form-meta)\n        validate  (fn [warning-type valid-types?]\n                    (let [types (map #(infer-tag env %) argexprs)]\n                      (when-not (valid-types? types)\n                        (warning warning-type env\n                          {:js-op js-op\n                           :types (into [] types)}))))\n        op-match? (fn [sym]\n                    #?(:clj  (= sym (:js-op form-meta))\n                       :cljs (symbol-identical? sym (:js-op form-meta))))]\n    (when (true? numeric)\n      (validate :invalid-arithmetic #(every? numeric-type? %)))\n    {:op :js\n     :env env\n     :segs segs\n     :args argexprs\n     :tag tag\n     :form form\n     :children [:args]\n     :js-op js-op\n     :numeric numeric}))\n\n(defn analyze-js-star [env jsform args form]\n  (disallowing-recur (analyze-js-star* env jsform args form)))\n\n(defmethod parse 'js*\n  [op env [_ jsform & args :as form] _ _]\n  (when-not (string? jsform)\n    (throw (error env \"Invalid js* form\")))\n  (if (some? args)\n    (analyze-js-star env jsform args form)\n    (let [code      (apply str (js-star-interp env jsform))\n          tag       (get-js-tag form)\n          form-meta (meta form)\n          js-op     (:js-op form-meta)\n          numeric   (:numeric form-meta)]\n      {:op :js\n       :env env\n       :form form\n       :code code\n       :tag tag\n       :js-op js-op\n       :numeric numeric})))\n\n;; TODO: analyzed analyzed? should take pass name as qualified keyword arg\n;; then compiler passes can mark/check individually - David\n\n(defn- unsorted-map? [x]\n  (and (map? x)\n       (not (sorted? x))))\n\n(defn analyzed\n  \"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.\"\n  [x]\n  (cond\n    (unsorted-map? x) (assoc x ::analyzed true)\n    :else (vary-meta x assoc ::analyzed true)))\n\n(defn analyzed?\n  \"Returns boolean if the form has already been marked as analyzed.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (boolean\n    (cond\n      (unsorted-map? x) (::analyzed x)\n      :else (::analyzed (meta x)))))\n\n(defn- all-values?\n  #?(:cljs {:tag boolean})\n  [exprs]\n  (every? #(or (nil? %) (symbol? %) (string? %) (number? %) (true? %) (false? %)) exprs))\n\n(defn- valid-arity?\n  #?(:cljs {:tag boolean})\n  [argc method-params]\n  (or (nil? method-params)  ; Assume valid if method-params unavailable\n      (boolean (some #{argc} (map count method-params)))))\n\n(defn- record-tag?\n  [tag]\n  (boolean (and (symbol? tag)\n                (some? (namespace tag))\n                (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs (symbol (name tag)) :record]))))\n\n(defn- record-basis\n  [tag]\n  (let [positional-factory (symbol (str \"->\" (name tag)))\n        fields             (first (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs positional-factory :method-params]))]\n    (into #{} fields)))\n\n(defn- record-with-field?\n  [tag field]\n  (and (record-tag? tag)\n       (contains? (record-basis tag) field)))\n\n(defn- invalid-arity? [argc method-params variadic max-fixed-arity]\n  (and (not (valid-arity? argc method-params))\n       (or (not variadic)\n           (and variadic (< argc max-fixed-arity)))))\n\n(defn parse-invoke*\n  [env [f & args :as form]]\n  (let [enve    (assoc env :context :expr)\n        fexpr   (analyze enve f)\n        argc    (count args)\n        fn-var? (or (-> fexpr :info :fn-var)\n                    (-> fexpr :info :js-fn-var))\n        kw?     (= 'cljs.core/Keyword (:tag fexpr))\n        cur-ns  (-> env :ns :name)\n        HO-invoke? (and (boolean *cljs-static-fns*)\n                        (not fn-var?)\n                        (not (js-tag? f))\n                        (not kw?)\n                        (not (analyzed? f)))\n        ;; function expressions, eg: ((deref m) x) or ((:x m) :a)\n        bind-f-expr? (and HO-invoke?\n                          (not (symbol? f)))\n        ;; Higher order invokes with (some) argument expressions. Bind the arguments\n        ;; to avoid exponential complexity that is created by the IFn arity check branch.\n        bind-args? (and HO-invoke?\n                        (not (all-values? args)))]\n    (when ^boolean fn-var?\n      (let [{^boolean variadic :variadic? :keys [max-fixed-arity method-params name ns macro]} (:info fexpr)]\n        ;; don't warn about invalid arity when when compiling a macros namespace\n        ;; that requires itself, as that code is not meant to be executed in the\n        ;; `$macros` ns - António Monteiro\n        (when (and #?(:cljs (not (and (gstring/endsWith (str cur-ns) \"$macros\")\n                                      (symbol-identical? cur-ns ns)\n                                      (true? macro))))\n                   (invalid-arity? argc method-params variadic max-fixed-arity))\n          (warning :fn-arity env {:name name :argc argc}))))\n    (when (and kw? (not (or (== 1 argc) (== 2 argc))))\n      (warning :fn-arity env {:name (first form) :argc argc}))\n    (let [deprecated? (-> fexpr :info :deprecated)\n          no-warn? (-> form meta :deprecation-nowarn)]\n      (when (and (boolean deprecated?)\n                 (not (boolean no-warn?)))\n        (warning :fn-deprecated env {:fexpr fexpr})))\n    (when (some? (-> fexpr :info :type))\n      (warning :invoke-ctor env {:fexpr fexpr}))\n    (if (or bind-args? bind-f-expr?)\n      (let [arg-syms (when bind-args? (take argc (repeatedly gensym)))\n            f-sym (when bind-f-expr? (gensym \"fexpr__\"))\n            bindings (cond-> []\n                       bind-args? (into (interleave arg-syms args))\n                       bind-f-expr? (conj f-sym (analyzed f)))\n            tag (:tag (meta form))]\n        (analyze env\n          `(let [~@bindings]\n             ~(with-meta\n               `(~(analyzed (if bind-f-expr? f-sym f))\n                 ~@(if bind-args? arg-syms args))\n               {:tag tag}))))\n      (let [ana-expr #(analyze enve %)\n            argexprs (mapv ana-expr args)]\n        (if (and (and (keyword? f)\n                      (nil? (namespace f)))\n                 (== 1 (count args))\n                 (record-with-field? (:tag (first argexprs)) (symbol (name f))))\n          (let [field-access-form (list* (symbol (str \".-\" (name f))) args)]\n            (no-warn (analyze env field-access-form)))\n          {:env      env :op :invoke :form form :fn fexpr :args argexprs\n           :children [:fn :args]})))))\n\n(defn parse-invoke\n  [env form]\n  (disallowing-recur (parse-invoke* env form)))\n\n(defn desugar-dotted-expr [{:keys [op] :as expr}]\n  (case op\n    (:var :local) (if (dotted-symbol? (symbol (name (:name expr))))\n                    (let [s      (name (:name expr))\n                          idx    (.lastIndexOf s \".\")\n                          _ (assert (not= (inc idx) (count s)))\n                          prefix (with-meta (symbol (namespace (:name expr)) (subs s 0 idx))\n                                            (meta (:form expr)))\n                          field (symbol (subs s (inc idx)))]\n                      (assert (not (:const-expr expr)))\n                      {:op :host-field\n                       :env (:env expr)\n                       :form (list '. prefix field)\n                       :target (desugar-dotted-expr (-> expr\n                                                        (assoc :name prefix\n                                                               :form prefix)\n                                                        (dissoc :tag)\n                                                        (assoc-in [:info :name] prefix)\n                                                        (assoc-in [:env :context] :expr)))\n                       :field field\n                       :tag (:tag expr)\n                       :children [:target]})\n                    expr)\n    ;:var\n    expr))\n\n\n(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if ^boolean (:quoted? env)\n    (do\n      (register-constant! env sym)\n      (analyze-wrap-meta {:op :const :val sym :env env :form sym :tag 'cljs.core/Symbol}))\n    (let [{:keys [line column]} (meta sym)\n          env  (if-not (nil? line)\n                 (assoc env :line line)\n                 env)\n          env  (if-not (nil? column)\n                 (assoc env :column column)\n                 env)\n          ret  {:env env :form sym}\n          lcls (:locals env)]\n      (if-some [lb (handle-symbol-local sym (get lcls sym))]\n        (merge\n          (assoc ret :op :local :info lb)\n          ;; this is a temporary workaround for core.async see CLJS-3030 - David\n          (when (map? lb)\n            (select-keys lb [:name :local :arg-id :variadic? :init])))\n        (let [sym-meta (meta sym)\n              sym-ns (namespace sym)\n              cur-ns (str (-> env :ns :name))\n              ;; when compiling a macros namespace that requires itself, we need\n              ;; to resolve calls to `my-ns.core/foo` to `my-ns.core$macros/foo`\n              ;; to avoid undeclared variable warnings - António Monteiro\n              #?@(:cljs [sym (if (and sym-ns\n                                   (not= sym-ns \"cljs.core\")\n                                   (gstring/endsWith cur-ns \"$macros\")\n                                   (not (gstring/endsWith sym-ns \"$macros\"))\n                                   (= sym-ns (subs cur-ns 0 (- (count cur-ns) 7))))\n                               (symbol (str sym-ns \"$macros\") (name sym))\n                               sym)])\n              info     (if-not (contains? sym-meta ::analyzed)\n                         (resolve-existing-var env sym)\n                         (resolve-var env sym))]\n          (assert (:op info) (:op info))\n          (desugar-dotted-expr\n            (if-not (true? (:def-var env))\n              (merge\n                (assoc ret :info info)\n                (select-keys info [:op :name :ns :tag])\n                (when-let [const-expr (:const-expr info)]\n                  {:const-expr const-expr}))\n              (let [info (resolve-var env sym)]\n                (merge (assoc ret :op :var :info info)\n                       (select-keys info [:op :name :ns :tag]))))))))))\n\n(defn excluded?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :excludes sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :excludes sym))))\n\n(defn used?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :use-macros sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :use-macros sym))))\n\n(defn get-expander-ns [env ^String nstr]\n  ;; first check for clojure.* -> cljs.* cases\n  (let [res  (or (resolve-macro-ns-alias env nstr nil)\n                 (resolve-ns-alias env nstr nil))\n        nstr (if (some? res) (str res) nstr)]\n    (cond\n     #?@(:clj  [(= \"clojure.core\" nstr) (find-ns 'cljs.core)]\n         :cljs [(identical? \"clojure.core\" nstr) (find-macros-ns impl/CLJS_CORE_MACROS_SYM)])\n     #?@(:clj  [(= \"clojure.repl\" nstr) (find-ns 'cljs.repl)]\n         :cljs [(identical? \"clojure.repl\" nstr) (find-macros-ns 'cljs.repl)])\n     #?@(:clj  [(.contains nstr \".\") (find-ns (symbol nstr))]\n         :cljs [(goog.string/contains nstr \".\") (find-macros-ns (symbol nstr))])\n     :else (some-> env :ns :require-macros (get (symbol nstr)) #?(:clj  find-ns\n                                                                  :cljs find-macros-ns)))))\n\n(defn get-expander* [sym env]\n  (when-not (or (some? (gets env :locals sym)) ; locals hide macros\n                (and (excluded? env sym) (not (used? env sym))))\n    (let [nstr (namespace sym)]\n      (cond\n        (some? nstr)\n        (let [ns (get-expander-ns env nstr)]\n          (when (some? ns)\n            (.findInternedVar ^clojure.lang.Namespace ns (symbol (name sym)))))\n\n        (some? (gets env :ns :rename-macros sym))\n        (let [qualified-symbol (gets env :ns :rename-macros sym)\n              nsym (symbol (namespace qualified-symbol))\n              sym  (symbol (name qualified-symbol))]\n          (.findInternedVar ^clojure.lang.Namespace\n            #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym))\n\n        :else\n        (let [nsym (gets env :ns :use-macros sym)]\n          (if (and (some? nsym) (symbol? nsym))\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym)\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns 'cljs.core) :cljs (find-macros-ns impl/CLJS_CORE_MACROS_SYM)) sym)))))))\n\n(defn get-expander\n  \"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.\"\n  [sym env]\n  (let [mvar (get-expander* sym env)]\n    (when (and (some? mvar)\n            #?(:clj  (.isMacro ^clojure.lang.Var mvar)\n               :cljs ^boolean (.isMacro mvar)))\n      mvar)))\n\n#?(:cljs\n   (let [cached-var (delay (get (ns-interns* 'cljs.spec.alpha) 'macroexpand-check))]\n     (defn get-macroexpand-check-var []\n       (when (some? (find-ns-obj 'cljs.spec.alpha))\n         @cached-var))))\n\n(defn- var->sym [var]\n  #?(:clj  (symbol (str (.-ns ^clojure.lang.Var var)) (str (.-sym ^clojure.lang.Var var)))\n     :cljs (.-sym var)))\n\n(defn- do-macroexpand-check\n  [env form mac-var]\n  (when (not (-> @env/*compiler* :options :spec-skip-macros))\n    (let [mchk #?(:clj (some-> (find-ns 'clojure.spec.alpha)\n                       (ns-resolve 'macroexpand-check))\n                :cljs (get-macroexpand-check-var))]\n    (when (some? mchk)\n      (try\n        (mchk mac-var (next form))\n        (catch #?(:clj Throwable :cljs :default) e\n          (throw (ex-info nil (error-data env :macro-syntax-check (var->sym mac-var)) e))))))))\n\n#?(:cljs\n   (defn- check-macro-arity [mac-var form]\n     (let [mac-sym (.-sym mac-var)]\n       (when-let [{:keys [variadic? max-fixed-arity method-params]}\n                  (get-in @env/*compiler* [::namespaces (symbol (namespace mac-sym)) :defs (symbol (name mac-sym))])]\n         (let [argc   (count (rest form))\n               offset (if (= '&form (ffirst method-params)) 2 0)]\n           (when (invalid-arity? argc (map #(nthrest %1 offset) method-params)\n                   variadic? (when max-fixed-arity (- max-fixed-arity offset)))\n             (throw (js/Error. (error-message :fn-arity {:argc argc, :name mac-sym})))))))))\n\n(defn macroexpand-1*\n  [env form]\n  (let [op (first form)]\n    (if (contains? specials op)\n      (do\n        (when (= 'ns op)\n          (do-macroexpand-check env form (get-expander 'cljs.core/ns-special-form env)))\n        form)\n      ;else\n        (if-some [mac-var (when (symbol? op) (get-expander op env))]\n          (#?@(:clj [binding [*ns* (create-ns *cljs-ns*)]]\n               :cljs [do])\n            (do-macroexpand-check env form mac-var)\n            (let [form' (try\n                          #?(:cljs (check-macro-arity mac-var form))\n                          (apply @mac-var form env (rest form))\n                          #?(:clj (catch ArityException e\n                                    (throw (ArityException. (- (.actual e) 2) (.name e)))))\n                          (catch #?(:clj Throwable :cljs :default) e\n                            (throw (ex-info nil (error-data env :macroexpansion (var->sym mac-var)) e))))]\n              (if #?(:clj (seq? form') :cljs (impl/cljs-seq? form'))\n                (let [sym' (first form')\n                      sym  (first form)]\n                  (if #?(:clj  (= sym' 'js*)\n                         :cljs (symbol-identical? sym' impl/JS_STAR_SYM))\n                    (let [sym   (if (some? (namespace sym))\n                                  sym\n                                  (symbol \"cljs.core\" (str sym)))\n                          js-op {:js-op sym}\n                          numeric #?(:clj  (-> mac-var meta ::numeric)\n                                     :cljs (let [mac-var-ns   (symbol (namespace (.-sym mac-var)))\n                                                 mac-var-name (symbol (name (.-sym mac-var)))]\n                                             (get-in @env/*compiler*\n                                               [::namespaces mac-var-ns :defs mac-var-name :meta ::numeric])))\n                          js-op (if (true? numeric)\n                                  (assoc js-op :numeric true)\n                                  js-op)]\n                      (vary-meta form' merge js-op))\n                    form'))\n                form')))\n          (if (symbol? op)\n            (let [opname (str op)]\n              (cond\n                (identical? \\.\n                  #?(:clj  (first opname)\n                     :cljs (.charAt opname 0)))\n                (let [[target & args] (next form)]\n                  (with-meta (list* #?(:clj '. :cljs impl/DOT_SYM) target (symbol (subs opname 1)) args)\n                    (meta form)))\n\n                (identical? \\.\n                  #?(:clj  (last opname)\n                     :cljs (.charAt opname (dec (. opname -length)))))\n                (with-meta\n                  (list* #?(:clj 'new :cljs impl/NEW_SYM) (symbol (subs opname 0 (dec (count opname)))) (next form))\n                  (meta form))\n\n                :else form))\n            form)))))\n\n(defn macroexpand-1\n  \"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.\"\n  [env form]\n  (wrapping-errors env (macroexpand-1* env form)))\n\n(declare analyze-list)\n\n(defn analyze-seq* [op env form name opts]\n  (if (contains? specials op)\n    (parse op env form name opts)\n    (parse-invoke env form)))\n\n(defn analyze-seq*-wrap [op env form name opts]\n  (wrapping-errors env\n    (analyze-seq* op env form name opts)))\n\n(defn analyze-seq\n  ([env form name]\n   (analyze-seq env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (if ^boolean (:quoted? env)\n     (analyze-list env form)\n     (let [line (-> form meta :line)\n           line (if (nil? line)\n                  (:line env)\n                  line)\n           col  (-> form meta :column)\n           col  (if (nil? col)\n                  (:column env)\n                  col)\n           env  (assoc env :line line :column col)]\n       (let [op (first form)]\n         (when (nil? op)\n           (throw (error env \"Can't call nil\")))\n         (let [mform (macroexpand-1 env form)]\n           (if (identical? form mform)\n             (analyze-seq*-wrap op env form name opts)\n             (analyze env mform name opts))))))))\n\n(defn analyze-map\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        ks (disallowing-recur (mapv #(analyze expr-env %) (keys form)))\n        vs (disallowing-recur (mapv #(analyze expr-env %) (vals form)))]\n    (analyze-wrap-meta {:op :map :env env :form form\n                        :keys ks :vals vs\n                        :children [:keys :vals]\n                        :tag 'cljs.core/IMap})))\n\n;; :list is not used in the emitter any more, but analyze-list is called from analyze-const\n;; to hit the `register-constant!` cases for symbols and keywords.\n(defn analyze-list\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :list :env env :form form :items items :children [:items] :tag 'cljs.core/IList})))\n\n(defn analyze-vector\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :vector :env env :form form :items items :children [:items] :tag 'cljs.core/IVector})))\n\n(defn analyze-set\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :set :env env :form form :items items :children [:items] :tag 'cljs.core/ISet})))\n\n(defn analyze-js-value\n  [env ^JSValue form]\n  (let [val (.-val form)\n        expr-env (assoc env :context :expr)]\n    (if (map? val)\n      (let [keys (vec (keys val))\n            vals (disallowing-recur\n                   (mapv #(analyze expr-env %) (vals val)))]\n        {:op :js-object\n         :env env\n         :form form\n         :keys keys\n         :vals vals\n         :children [:vals]\n         :tag 'object})\n      (let [items (disallowing-recur\n                    (mapv #(analyze expr-env %) val))]\n        {:op :js-array\n         :env env\n         :form form\n         :items items\n         :children [:items]\n         :tag 'array}))))\n\n(defn record-ns+name [x]\n  (map symbol\n       #?(:clj\n          ((juxt (comp #(string/join \".\" %) butlast) last)\n           (string/split (.getName ^Class (type x)) #\"\\.\"))\n          :cljs\n          (string/split (pr-str (type x)) #\"/\"))))\n\n(defn analyze-record\n  [env x]\n  (let [;; register constansts\n        _items_   (disallowing-recur\n                    (analyze (assoc env :context :expr) (into {} x)))\n        [ns name] (record-ns+name x)]\n    {:op :const\n     :val x\n     :env env\n     :form x\n     :tag (symbol (str ns) (str name))}))\n\n(defn elide-reader-meta [m]\n  (dissoc m :file :line :column :end-column :end-line :source))\n\n(defn elide-analyzer-meta [m]\n  (dissoc m ::analyzed))\n\n(defn elide-irrelevant-meta [m]\n  (-> m elide-reader-meta elide-analyzer-meta))\n\n(defn analyze-wrap-meta [expr]\n  (let [form (:form expr)\n        m    (elide-irrelevant-meta (meta form))]\n    (if (some? (seq m))\n      (let [env (:env expr) ; take on expr's context ourselves\n            expr (assoc-in expr [:env :context] :expr) ; change expr to :expr\n            meta-expr (analyze-map (:env expr) m)]\n        {:op :with-meta :env env :form form\n         :meta meta-expr :expr expr :children [:meta :expr]})\n      expr)))\n\n(defn infer-type [env {:keys [tag] :as ast} _]\n  (if (or (nil? tag) (= 'function tag))\n    ;; infer-type won't get a chance to process :methods\n    ;; so treat :fn as a special case for now, could probably\n    ;; fix up to use :children to walk child nodes\n    (if (= :fn (:op ast))\n      (update ast :methods\n        (fn [ms] (into [] (map #(infer-type env % _)) ms)))\n      (if-some [tag (infer-tag env ast)]\n        (assoc ast :tag tag)\n        ast))\n    ast))\n\n(defn- repl-self-require? [env deps]\n  (and (:repl-env env) (some #{*cljs-ns*} deps)))\n\n#?(:clj\n   (defn ns-side-effects\n     [env {:keys [op] :as ast} opts]\n     (if (#{:ns :ns*} op)\n       (let [{:keys [name deps uses require-macros use-macros reload reloads]} ast]\n         (when (and *analyze-deps* (seq deps))\n           (analyze-deps\n             (if (repl-self-require? env deps) 'cljs.user name)\n             deps env (dissoc opts :macros-ns)))\n         (if *load-macros*\n           (do\n             (load-core)\n             (doseq [nsym (vals use-macros)]\n               (let [k (or (:use-macros reload)\n                         (get-in reloads [:use-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (doseq [nsym (vals require-macros)]\n               (let [k (or (:require-macros reload)\n                         (get-in reloads [:require-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (-> ast\n               (check-use-macros-inferring-missing env)\n               (check-rename-macros-inferring-missing env)))\n           (do\n             (check-uses\n               (when (and *analyze-deps* (seq uses))\n                 (missing-uses uses env))\n               env)\n             ast)))\n       ast)))\n\n;; A set of validators that can be used to do static type\n;; checking of runtime fns based on inferred argument types.\n(def invoke-arg-type-validators\n  (let [aget-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (rest %)))\n                        :warning-type :invalid-array-access}\n        aset-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (butlast (rest %))))\n                        :warning-type :invalid-array-access}]\n    {'cljs.core/checked-aget  aget-validator\n     'cljs.core/checked-aset  aset-validator\n     'cljs.core/checked-aget' aget-validator\n     'cljs.core/checked-aset' aset-validator}))\n\n(defn check-invoke-arg-types\n  [env {:keys [op] :as ast} opts]\n  (when (and (not (analyzed? ast))\n             #?(:clj  (= :invoke op)\n                :cljs (keyword-identical? :invoke op)))\n    (when-some [[name {:keys [valid? warning-type]}] (find invoke-arg-type-validators (-> ast :fn :info :name))]\n      (let [types (mapv :tag (:args ast))]\n        (when-not (valid? types)\n          (warning warning-type env\n            {:name  name\n             :types types})))))\n  (analyzed ast))\n\n#?(:clj\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (seq? form) (seq form)) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (map? form) (analyze-map env form)\n       (vector? form) (analyze-vector env form)\n       (set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) 'clj-nil\n                   (number? form) 'number\n                   (string? form) 'string\n                   (instance? Character form) 'string\n                   (true? form) 'boolean\n                   (false? form) 'boolean\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n#?(:cljs\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (impl/cljs-seq? form) (some? (seq form))) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (impl/cljs-map? form) (analyze-map env form)\n       (impl/cljs-vector? form) (analyze-vector env form)\n       (impl/cljs-set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? cljs.tagged-literals/JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) impl/CLJ_NIL_SYM\n                   (number? form) impl/NUMBER_SYM\n                   (string? form) impl/STRING_SYM\n                   (true? form) impl/BOOLEAN_SYM\n                   (false? form) impl/BOOLEAN_SYM\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n(def default-passes\n  #?(:clj  [infer-type and-or/optimize check-invoke-arg-types ns-side-effects]\n     :cljs [infer-type and-or/optimize check-invoke-arg-types]))\n\n(defn analyze* [env form name opts]\n  (let [passes *passes*\n        passes (if (nil? passes)\n                 default-passes\n                 passes)\n        form   (if (instance? LazySeq form)\n                 (if (seq form) form ())\n                 form)\n        ast    (analyze-form env form name opts)]\n    (reduce (fn [ast pass] (pass env ast opts)) ast passes)))\n\n(defn analyze\n  \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.\"\n  ([env form] (analyze env form nil))\n  ([env form name]\n   (analyze env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (wrapping-errors env\n     (if (analyzed? form)\n       (no-warn (analyze* env form name opts))\n       (analyze* env form name opts)))))\n\n(defn add-consts\n  \"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.\"\n  [compiler-state constants-map]\n  (reduce-kv\n    (fn [compiler-state sym value]\n      (let [ns (symbol (namespace sym))]\n        (update-in compiler-state\n          [::namespaces ns :defs (symbol (name sym))] merge\n          {:const-expr\n           (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n             (analyze (empty-env) value))})))\n    compiler-state constants-map))\n\n#?(:clj\n   (defn- source-path\n     \"Returns a path suitable for providing to tools.reader as a 'filename'.\"\n     [x]\n     (cond\n       (instance? File x) (.getAbsolutePath ^File x)\n       :default (str x))))\n\n(defn resolve-symbol [sym]\n  (if (and (not (namespace sym))\n           (dotted-symbol? sym))\n    sym\n    (:name (binding [*private-var-access-nowarn* true]\n             (resolve-var (assoc @env/*compiler* :ns (get-namespace *cljs-ns*))\n               sym)))))\n\n#?(:clj\n   (defn forms-seq*\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([^Reader rdr] (forms-seq* rdr nil))\n     ([^Reader rdr filename]\n      {:pre [(instance? Reader rdr)]}\n      (let [eof-sentinel (Object.)\n            opts (merge\n                   {:eof eof-sentinel}\n                   (if (and filename (= (util/ext filename) \"cljc\"))\n                     {:read-cond :allow :features #{:cljs}}))\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq_\n            (fn forms-seq_ []\n              (lazy-seq\n                (let [form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))\n                                     reader/resolve-symbol resolve-symbol]\n                             (reader/read opts pbr))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq_))))))]\n        (forms-seq_)))))\n\n#?(:clj\n   (defn forms-seq\n     \"DEPRECATED: Seq of Clojure/ClojureScript forms from [f], which can be anything\n     for which `clojure.java.io/reader` can produce a `java.io.Reader`. Optionally\n     accepts a [filename] argument, which the reader will use in any emitted errors.\"\n     ([f] (forms-seq f (source-path f)))\n     ([f filename] (forms-seq f filename false))\n     ([f filename return-reader?]\n      (let [rdr (io/reader f)\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq*\n            (fn forms-seq* []\n              (lazy-seq\n                (let [eof-sentinel (Object.)\n                      form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))]\n                             (reader/read pbr nil eof-sentinel))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq*))))))]\n        (if (true? return-reader?)\n          [(forms-seq*) rdr]\n          (forms-seq*))))))\n\n#?(:clj\n   (defn gen-user-ns\n     [src]\n     (if (sequential? src)\n       (symbol (str \"cljs.user.source$form$\" (util/content-sha (pr-str src) 7)))\n       (let [full-name (str src)\n             name (.substring full-name\n                    (inc (.lastIndexOf full-name \"/\"))\n                    (.lastIndexOf full-name \".\"))]\n         (symbol (str \"cljs.user.\" name (util/content-sha full-name 7)))))))\n\n#?(:clj\n   (defn macro-call? [form env]\n     (when (and (seq? form) (seq form) (and (symbol? (first form))))\n       (let [sym (first form)\n             nstr (namespace sym)]\n         (or (and (some? nstr)\n                  (some? (gets env :ns :require-macros (symbol nstr))))\n             (some? (gets env :ns :rename-macros sym))\n             (some? (gets env :ns :use-macros sym)))))))\n\n#?(:clj\n   (declare ns-side-effects macroexpand-1))\n\n#?(:clj\n   (defn ^:dynamic parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src]\n      (parse-ns src nil\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (ensure\n        (let [src (if (symbol? src)\n                    (util/ns->source src)\n                    src)\n              ijs\n              (binding [env/*compiler* (if (false? (:restore opts))\n                                         env/*compiler*\n                                         (atom @env/*compiler*))\n                        *file-defs* nil\n                        #?@(:clj [*unchecked-if* false\n                                  *unchecked-arrays* false])\n                        *cljs-ns* 'cljs.user\n                        *cljs-file* src\n                        *macro-infer*\n                        (or (when (contains? opts :macro-infer)\n                              (:macro-infer opts))\n                          false)\n                        *analyze-deps*\n                        (or (when (contains? opts :analyze-deps)\n                              (:analyze-deps opts))\n                          false)\n                        *load-macros*\n                        (or (when (contains? opts :load-macros)\n                              (:load-macros opts))\n                          false)]\n                (let [rdr (when-not (sequential? src) (io/reader src))]\n                  (try\n                    (loop [env (empty-env)\n                           forms (if rdr\n                                   (forms-seq* rdr (source-path src))\n                                   src)\n                           ret (merge\n                                 {:file         dest\n                                  :source-file  (when rdr src)\n                                  :source-forms (when-not rdr src)\n                                  :macros-ns    (:macros-ns opts)\n                                  :requires     (cond-> #{'cljs.core}\n                                                  (get-in @env/*compiler* [:options :emit-constants])\n                                                  (conj constants-ns-sym))}\n                                 (when (and dest (.exists ^File dest))\n                                   {:lines (with-open [reader (io/reader dest)]\n                                             (-> reader line-seq count))}))]\n                      (if (seq forms)\n                        (let [form (first forms)\n                              macro? (macro-call? form env)\n                              env (if macro?\n                                    (binding [*load-macros* true]\n                                      (assoc (:env (ns-side-effects env (:ast ret) opts)) :ns (:ns env)))\n                                    env)\n                              ast (when (or macro? (and (seq? form) ('#{ns ns* require use require-macros} (first form))))\n                                    (no-warn (analyze env form nil opts)))\n                              env (assoc (:env ast) :ns (:ns env))]\n                          (cond\n                            (= :ns (:op ast))\n                            (let [ns-name (:name ast)\n                                  ns-name (if (and (= 'cljs.core ns-name)\n                                                   (= \"cljc\" (util/ext src)))\n                                            'cljs.core$macros\n                                            ns-name)\n                                  deps (merge (:uses ast) (:requires ast))\n                                  env (assoc (:env ast) :ns (dissoc ast :env))]\n                              (recur env\n                                     (rest forms)\n                                     (cond->\n                                         {:ns           (or ns-name 'cljs.user)\n                                          :provides     [ns-name]\n                                          :requires     (if (= 'cljs.core ns-name)\n                                                          (set (vals deps))\n                                                          (cond-> (conj (set (vals deps)) 'cljs.core)\n                                                            (get-in @env/*compiler* [:options :emit-constants])\n                                                            (conj constants-ns-sym)))\n                                          :file         dest\n                                          :source-file  (when rdr src)\n                                          :source-forms (when-not rdr src)\n                                          :ast          ast\n                                          :macros-ns    (or (:macros-ns opts)\n                                                            (= 'cljs.core$macros ns-name))}\n                                       (and dest (.exists ^File dest))\n                                       (assoc :lines (with-open [reader (io/reader dest)]\n                                                       (-> reader line-seq count))))))\n\n                            (= :ns* (:op ast))\n                            (let [deps (merge (:uses ast) (:requires ast))]\n                              (recur (:env ast)\n                                     (rest forms)\n                                     (cond-> (update-in ret [:requires] into (set (vals deps)))\n                                       ;; we need to defer generating the user namespace\n                                       ;; until we actually need or it will break when\n                                       ;; `src` is a sequence of forms - António Monteiro\n                                       (not (:ns ret))\n                                       (assoc :ns (gen-user-ns src) :provides [(gen-user-ns src)]))))\n\n                            :else ret))\n                        ret))\n                    (finally\n                      (when rdr\n                        (.close ^Reader rdr))))))]\n          (cond-> ijs\n            (not (contains? ijs :ns))\n            (merge\n              {:ns (gen-user-ns src)\n               :provides [(gen-user-ns src)]})))))))\n\n#?(:clj\n   (defn- cache-analysis-ext\n     ([] (cache-analysis-ext (get-in @env/*compiler* [:options :cache-analysis-format] :transit)))\n     ([format]\n      (if (and (= format :transit) @transit) \"json\" \"edn\"))))\n\n#?(:clj\n   (defn build-affecting-options [opts]\n     (select-keys opts\n       [:static-fns :fn-invoke-direct :optimize-constants :elide-asserts :target :nodejs-rt\n        :cache-key :checked-arrays :language-out :optimizations])))\n\n#?(:clj\n   (defn build-affecting-options-sha [path opts]\n     (let [m (assoc (build-affecting-options opts) :path path)]\n       (util/content-sha (pr-str m) 7))))\n\n#?(:clj\n   (defn ^File cache-base-path\n     ([path]\n      (cache-base-path path nil))\n     ([path opts]\n      (io/file (System/getProperty \"user.home\")\n        \".cljs\" \".aot_cache\" (util/clojurescript-version)\n        (build-affecting-options-sha path opts)))))\n\n#?(:clj\n   (defn cacheable-files\n     ([rsrc ext]\n      (cacheable-files rsrc ext nil))\n     ([rsrc ext opts]\n      (let [{:keys [ns]} (parse-ns rsrc)\n            path (cache-base-path (util/path rsrc) opts)\n            name (util/ns->relpath ns nil File/separatorChar)]\n        (into {}\n          (map\n            (fn [[k v]]\n              [k (io/file path\n                   (if (and (= (str \"cljs\" File/separatorChar \"core$macros\") name)\n                         (= :source k))\n                     (str \"cljs\" File/separatorChar \"core.cljc\")\n                     (str name v)))]))\n          {:source (str \".\" ext)\n           :output-file \".js\"\n           :source-map \".js.map\"\n           :analysis-cache-edn (str \".\" ext \".cache.edn\")\n           :analysis-cache-json (str \".\" ext \".cache.json\")})))))\n\n#?(:clj\n   (defn cache-file\n     \"Given a ClojureScript source file returns the read/write path to the analysis\n      cache file. Defaults to the read path which is usually also the write path.\"\n     ([src] (cache-file src \"out\"))\n     ([src output-dir] (cache-file src (parse-ns src) output-dir))\n     ([src ns-info output-dir]\n      (cache-file src ns-info output-dir :read nil))\n     ([src ns-info output-dir mode]\n      (cache-file src ns-info output-dir mode nil))\n     ([src ns-info output-dir mode opts]\n      {:pre [(map? ns-info)]}\n      (let [ext (cache-analysis-ext)]\n        (if-let [core-cache\n                 (and (= mode :read)\n                      (= (:ns ns-info) 'cljs.core)\n                      (io/resource (str \"cljs/core.cljs.cache.aot.\" ext)))]\n          core-cache\n          (let [aot-cache-file\n                (when (util/url? src)\n                  ((keyword (str \"analysis-cache-\" ext))\n                    (cacheable-files src (util/ext src) opts)))]\n            (if (and aot-cache-file (.exists ^File aot-cache-file))\n              aot-cache-file\n              (let [target-file (util/to-target-file output-dir ns-info\n                                  (util/ext (:source-file ns-info)))]\n                (io/file (str target-file \".cache.\" ext))))))))))\n\n#?(:clj\n   (defn requires-analysis?\n     \"Given a src, a resource, and output-dir, a compilation output directory\n      return true or false depending on whether src needs to be (re-)analyzed.\n      Can optionally pass cache, the analysis cache file.\"\n     ([src] (requires-analysis? src \"out\"))\n     ([src output-dir]\n      (let [cache (cache-file src output-dir)]\n        (requires-analysis? src cache output-dir nil)))\n     ([src cache output-dir]\n      (requires-analysis? src cache output-dir nil))\n     ([src cache output-dir opts]\n      (cond\n        (util/url? cache)\n        (let [path (.getPath ^URL cache)]\n          (if (or (.endsWith path \"cljs/core.cljs.cache.aot.edn\")\n                  (.endsWith path \"cljs/core.cljs.cache.aot.json\"))\n            false\n            (throw (Exception. (str \"Invalid anlaysis cache, must be file not URL \" cache)))))\n\n        (and (util/file? cache)\n             (not (.exists ^File cache)))\n        true\n\n        :else\n        (let [out-src   (util/to-target-file output-dir (parse-ns src))\n              cache-src (:output-file (cacheable-files src (util/ext src) opts))]\n          (if (and (not (.exists out-src))\n                   (not (.exists ^File cache-src)))\n            true\n            (or (not cache) (util/changed? src cache))))))))\n\n#?(:clj\n   (defn- get-spec-vars\n     []\n     (when-let [spec-ns (find-ns 'cljs.spec.alpha)]\n       (locking load-mutex\n         {:registry-ref (ns-resolve spec-ns 'registry-ref)\n          :speced-vars  (ns-resolve spec-ns '_speced_vars)})))\n   :cljs\n   (let [registry-ref (delay (get (ns-interns* 'cljs.spec.alpha$macros) 'registry-ref))\n         ;; Here, we look up the symbol '-speced-vars because ns-interns*\n         ;; is implemented by invoking demunge on the result of js-keys.\n         speced-vars  (delay (get (ns-interns* 'cljs.spec.alpha$macros) '-speced-vars))]\n     (defn- get-spec-vars []\n       (when (some? (find-ns-obj 'cljs.spec.alpha$macros))\n         {:registry-ref @registry-ref\n          :speced-vars  @speced-vars}))))\n\n(defn dump-specs\n  \"Dumps registered speced vars for a given namespace into the compiler\n  environment.\"\n  [ns]\n  (let [spec-vars (get-spec-vars)\n        ns-str    (str ns)]\n    (swap! env/*compiler* update-in [::namespaces ns]\n      merge\n      (when-let [registry-ref (:registry-ref spec-vars)]\n        {:cljs.spec/registry-ref\n         (into []\n           (filter (fn [[k _]] (= ns-str (namespace k))))\n           @@registry-ref)})\n      (when-let [speced-vars (:speced-vars spec-vars)]\n        {:cljs.spec/speced-vars\n         (into []\n           (filter\n             (fn [v]\n               (or (= ns-str (namespace v))\n                   (= ns (-> v meta :fdef-ns)))))\n           @@speced-vars)}))))\n\n(defn register-specs\n  \"Registers speced vars found in a namespace analysis cache.\"\n  [cached-ns]\n  #?(:clj (try\n            (locking load-mutex\n              (clojure.core/require 'cljs.spec.alpha))\n            (catch Throwable t)))\n  (let [{:keys [registry-ref speced-vars]} (get-spec-vars)]\n    (when-let [registry (seq (:cljs.spec/registry-ref cached-ns))]\n      (when registry-ref\n        (swap! @registry-ref into registry)))\n    (when-let [vars (seq (:cljs.spec/speced-vars cached-ns))]\n      (when speced-vars\n        (swap! @speced-vars into vars)))))\n\n#?(:clj\n   (defn write-analysis-cache\n     ([ns cache-file]\n       (write-analysis-cache ns cache-file nil))\n     ([ns ^File cache-file src]\n      (util/mkdirs cache-file)\n      (dump-specs ns)\n      (let [ext (util/ext cache-file)\n            analysis (dissoc (get-in @env/*compiler* [::namespaces ns]) :macros)]\n        (case ext\n          \"edn\"  (spit cache-file\n                   (str \";; Analyzed by ClojureScript \" (util/clojurescript-version) \"\\n\"\n                     (pr-str analysis)))\n          \"json\" (when-let [{:keys [writer write]} @transit]\n                   (with-open [os (io/output-stream cache-file)]\n                     (write (writer os :json transit-write-opts) analysis)))))\n      (when src\n        (.setLastModified ^File cache-file (util/last-modified src))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     ([cache-file src]\n      (read-analysis-cache cache-file src nil))\n     ([^File cache-file src opts]\n       ;; we want want to keep dependency analysis information\n       ;; don't revert the environment - David\n      (let [{:keys [ns]} (parse-ns src\n                           (merge opts\n                             {:restore false\n                              :analyze-deps true\n                              :load-macros true}))\n            ext          (util/ext cache-file)\n            cached-ns    (case ext\n                           \"edn\"  (edn/read-string (slurp cache-file))\n                           \"json\" (let [{:keys [reader read]} @transit]\n                                    (with-open [is (io/input-stream cache-file)]\n                                      (read (reader is :json transit-read-opts)))))]\n        (when (or *verbose* (:verbose opts))\n          (util/debug-prn \"Reading analysis cache for\" (str src)))\n        (swap! env/*compiler*\n          (fn [cenv]\n            (do\n              (register-specs cached-ns)\n              (doseq [x (get-in cached-ns [::constants :order])]\n                (register-constant! x))\n              (-> cenv\n                (assoc-in [::namespaces ns] cached-ns)))))))))\n\n(defn analyze-form-seq\n  ([forms]\n   (analyze-form-seq forms\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([forms opts]\n   (analyze-form-seq forms opts false))\n  ([forms opts return-last?]\n   (let [env (assoc (empty-env) :build-options opts)]\n     (binding [*file-defs* nil\n               #?@(:clj [*unchecked-if* false\n                         *unchecked-arrays* false])\n               *cljs-ns* 'cljs.user\n               *cljs-file* nil\n               reader/*alias-map* (or reader/*alias-map* {})]\n       (loop [ns nil forms forms last-ast nil]\n         (if (some? forms)\n           (let [form (first forms)\n                 env  (assoc env :ns (get-namespace *cljs-ns*))\n                 ast  (analyze env form nil opts)]\n             (if (= (:op ast) :ns)\n               (recur (:name ast) (next forms) ast)\n               (recur ns (next forms) ast)))\n           (if return-last?\n             last-ast\n             ns)))))))\n\n(defn ensure-defs\n  \"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)\"\n  [ns]\n  (swap! env/*compiler* update-in [::namespaces ns :defs] #(or % {})))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f]\n      (analyze-file f\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([f opts]\n      (analyze-file f false opts))\n     ([f skip-cache opts]\n      (binding [*file-defs*        (atom #{})\n                *unchecked-if*     false\n                *unchecked-arrays* false\n                *cljs-warnings*    *cljs-warnings*]\n        (let [output-dir (util/output-directory opts)\n              res        (cond\n                           (instance? File f) f\n                           (instance? URL f) f\n                           (re-find #\"^file://\" f) (URL. f)\n                           :else (io/resource f))]\n          (assert res (str \"Can't find \" f \" in classpath\"))\n          (ensure\n            (let [ns-info (parse-ns res)\n                  path    (if (instance? File res)\n                            (.getPath ^File res)\n                            (.getPath ^URL res))\n                  cache   (when (:cache-analysis opts)\n                            (cache-file res ns-info output-dir :read opts))]\n              (when-not (get-in @env/*compiler* [::namespaces (:ns ns-info) :defs])\n                (if (or skip-cache (not cache) (requires-analysis? res cache output-dir opts))\n                  (binding [*cljs-ns* 'cljs.user\n                            *cljs-file* path\n                            reader/*alias-map* (or reader/*alias-map* {})]\n                    (when (or *verbose* (:verbose opts))\n                      (util/debug-prn \"Analyzing\" (str res)))\n                    (let [env (assoc (empty-env) :build-options opts)\n                          ns  (with-open [rdr (io/reader res)]\n                                (loop [ns nil forms (seq (forms-seq* rdr (util/path res)))]\n                                  (if forms\n                                    (let [form (first forms)\n                                          env (assoc env :ns (get-namespace *cljs-ns*))\n                                          ast (analyze env form nil opts)]\n                                      (cond\n                                        (= (:op ast) :ns)\n                                        (recur (:name ast) (next forms))\n\n                                        (and (nil? ns) (= (:op ast) :ns*))\n                                        (recur (gen-user-ns res) (next forms))\n\n                                        :else\n                                        (recur ns (next forms))))\n                                    ns)))]\n                      (ensure-defs ns)\n                      (when (and cache (true? (:cache-analysis opts)))\n                        (write-analysis-cache ns cache res))))\n                  (try\n                    (read-analysis-cache cache res opts)\n                    (catch Throwable e\n                      (analyze-file f true opts))))))))))))\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.analyzer/*cljs-ns*","cljs.analyzer/*cljs-file*","cljs.analyzer/*checked-arrays*","cljs.analyzer/*check-alias-dupes*","cljs.analyzer/*cljs-static-fns*","cljs.analyzer/*fn-invoke-direct*","cljs.analyzer/*cljs-macros-path*","cljs.analyzer/*cljs-macros-is-classpath*","cljs.analyzer/*cljs-dep-set*","cljs.core/with-meta","cljs.analyzer/*analyze-deps*","cljs.analyzer/*load-tests*","cljs.analyzer/*load-macros*","cljs.analyzer/*reload-macros*","cljs.analyzer/*macro-infer*","cljs.analyzer/*passes*","cljs.analyzer/*file-defs*","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer/constants-ns-sym","cljs.analyzer/*verbose*","cljs.analyzer/-cljs-macros-loaded","cljs.core.atom","cljs.analyzer/*cljs-warnings*","cljs.analyzer/unchecked-arrays?","cljs.core/*unchecked-arrays*","cljs.analyzer/compiler-options","cljs.core/deref","cljs.core.get","cljs.env/*compiler*","cljs.analyzer/get-externs","cljs.analyzer/checked-arrays","cljs.core.not_EQ_","cljs.analyzer/js-reserved","cljs.analyzer/es5-allowed","cljs.analyzer/SENTINEL","var_args","G__46453","cljs.analyzer/gets","js/Error","m","k0","k1","k2","k3","cljs.analyzer/munge-path","ss","cljs.core/munge","G__46455","cljs.analyzer/ns->relpath","ns","cljs.analyzer.ns__GT_relpath","ext","clojure.string/replace","cljs.core/name","G__46457","cljs.analyzer/topo-sort","x","get-deps","cljs.analyzer.topo_sort","cljs.core/sorted-map","cljs.core/memoize","depth","state","memo-get-deps","deps","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core.fnil","cljs.core/into","seq__46458","cljs.core/seq","chunk__46459","count__46460","i__46461","temp__5753__auto__","cljs.core/chunked-seq?","c__4649__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","dep","seq__46462","chunk__46463","count__46464","i__46465","vec__46472","cljs.core.nth","vec__46475","<depth","_","cljs.core.subseq","cljs.core/<","clojure.set/difference","cljs.core._EQ_","cljs.core.distinct","cljs.core.apply","cljs.core/concat","cljs.core/vals","cljs.analyzer/ast?","cljs.core/map?","cljs.core/contains?","js/cljs","js/cljs.analyzer","js/cljs.analyzer.error-message","method-table__4712__auto__","prefer-table__4713__auto__","method-cache__4714__auto__","cached-hierarchy__4715__auto__","hierarchy__4716__auto__","fexpr__46478","cljs.core/MultiFn","cljs.core.symbol","cljs.analyzer/error-message","warning-type","info","clojure.string.join","p__46479","map__46480","cljs.core/--destructure-map","ns-sym","js-provide","clojure.string/includes?","p__46481","map__46482","or__4223__auto__","overwritten-protocol","cljs.core.pr_str","p__46483","map__46484","name","types","G__46485","cljs.core/every?","cljs.core/rest","cljs.core/butlast","p__46487","map__46488","munged","clojure.string.split","p1__46486#","cljs.core.map","p__46489","map__46490","var","p__46491","map__46492","p__46493","map__46494","protocol","method","p__46495","map__46496","module-type","file","p__46497","map__46498","preprocess","p__46499","map__46500","p__46501","map__46502","warn-type","form","type","property","G__46503","cljs.core/Keyword","cljs.analyzer/default-warning-handler","env","extra","s","*print-fn*-orig-val__46504","*print-fn*-temp-val__46505","cljs.core/*print-fn*","cljs.core/*print-err-fn*","cljs.core.println","G__46506","G__46507","cljs.analyzer/message","cljs.analyzer/*cljs-warning-handlers*","cljs.analyzer/repeat-char","c","n","ret","cljs.analyzer/hex-format","pad","hex","len","cljs.analyzer/gen-constant-id","value","prefix","cljs.core/Symbol","cljs.core/type","cljs.core.subs","p1__46508#","G__46510","cljs.analyzer/register-constant!","val","cljs.analyzer.register_constant_BANG_","cenv","G__46511","cljs.core.update_in","table","cljs.core.assoc","p__46512","map__46513","seen","order","constants","G__46514","cljs.core.conj","cljs.analyzer/default-namespaces","cljs.analyzer/namespaces","js/cljs.analyzer.t_cljs$analyzer46515","cljs.analyzer/t_cljs$analyzer46515","_46517","meta46516","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","cljs.core/-write","cljs.analyzer/->t_cljs$analyzer46515","G__46519","cljs.analyzer/get-namespace","key","cljs.analyzer.get_namespace","temp__5755__auto__","cljs.core.get_in","cljs.analyzer/get-line","cljs.core/meta","cljs.analyzer/get-col","G__46521","cljs.analyzer/intern-macros","cljs.analyzer.intern_macros","reload","cljs.analyzer.gets","cljs.core/assoc-in","cljs.core/ns-interns*","cljs.core.filter","p__46526","vec__46527","v","p__46522","vec__46523","k","vm","cljs.core.into","cljs.analyzer/empty-env","val__46392__auto__","cljs.env.default_compiler_env","p1__46530#","cljs.core/PersistentVector","p__46531","map__46532","cljs.analyzer/source-info->error-data","line","column","G__46534","cljs.analyzer/source-info","cljs.analyzer.source_info","G__46535","cljs.core.merge","cljs.core/select-keys","cljs.analyzer/warning","seq__46536","chunk__46537","count__46538","i__46539","handler","cljs.analyzer/accumulating-warning-handler","warn-acc","cljs.core/conj","cljs.analyzer/replay-accumulated-warnings","p1__46540#","cljs.core/run!","G__46542","cljs.analyzer/error-data","phase","cljs.analyzer.error_data","symbol","cljs.analyzer/compile-syntax-error","msg","cljs.core.ex_info","G__46544","cljs.analyzer/error","cljs.analyzer.error","cause","cljs.analyzer/analysis-error?","ex","cljs.core/ex-data","cljs.analyzer/has-error-data?","cljs.analyzer/implicit-nses","cljs.analyzer/implicit-import?","suffix","cljs.analyzer/confirm-var-exist-warning","G__46546","G__46547","cljs.analyzer/get-expander","cljs.analyzer/lib&sublib","lib","temp__5751__auto__","xs","cljs.core/re-matches","cljs.core.drop","cljs.analyzer/loaded-js-ns?","cljs.analyzer/internal-js-module-exists?","js-module-index","module","cljs.core.mapcat","p__46548","vec__46549","cljs.analyzer/js-module-exists?*","cljs.analyzer/js-module-exists?","cljs.analyzer/node-module-dep?","e46552","cljs.core/*target*","cljs.core/boolean","js/require.resolve","cljs.analyzer/dep-has-global-exports?","vec__46553","global-exports","G__46557","cljs.analyzer/confirm-var-exists","warn","cljs.analyzer.confirm_var_exists","missing-fn","sufstr","suffix-str","cljs.core/not","cljs.analyzer/confirm-var-exists-throw","G__46559","cljs.analyzer/resolve-ns-alias","cljs.analyzer.resolve_ns_alias","not-found","sym","G__46561","cljs.analyzer/resolve-macro-ns-alias","cljs.analyzer.resolve_macro_ns_alias","cljs.analyzer/confirm-ns","cljs.analyzer/core-name?","and__4221__auto__","mac","cljs.analyzer/public-name?","var-ast","cljs.analyzer/js-tag?","cljs.core/namespace","cljs.analyzer/normalize-js-tag","cljs.core/symbol","cljs.core/vec","cljs.analyzer/->type-set","t","cljs.analyzer.impl/cljs-set?","cljs.analyzer/canonicalize-type","cljs.core/empty?","res","cljs.core.disj","G__46566","cljs.analyzer/add-types","args-arr__4850__auto__","len__4829__auto__","i__4830__auto__","argseq__4851__auto__","cljs.core/IndexedSeq","seq46563","G__46564","G__46565","self__4816__auto__","t1","t2","clojure.set.union","ts","cljs.analyzer.add_types","cljs.analyzer/alias->type","G__46568","cljs.analyzer/has-extern?*","pre","externs","me","cljs.core/find","tag","cljs.analyzer.has_extern_QMARK__STAR_","top","vec__46569","x'","externs'","xmeta","G__46573","cljs.analyzer/has-extern?","cljs.analyzer.has_extern_QMARK_","cljs.core/last","clojure.string/starts-with?","G__46575","cljs.analyzer/js-tag","cljs.analyzer.js_tag","tag-type","vec__46576","p","G__46579","cljs.analyzer/dotted-symbol?","goog.string/contains","cljs.analyzer/munge-node-lib","cljs.analyzer/munge-global-export","cljs.analyzer/resolve-alias","fexpr__46580","cljs.analyzer/ns->module-type","js/cljs.analyzer.resolve*","fexpr__46581","cljs.analyzer/resolve*","full-ns","current-ns","cljs.analyzer/extern-pre","cljs.core/merge","G__46583","cljs.analyzer/node-like?","cljs.analyzer.node_like_QMARK_","opts","cljs.analyzer/private-var-access-exceptions","sym-ast","sym-name","cljs.analyzer/required?","cljs.core/set","cljs.analyzer/invokeable-ns?","cljs.analyzer/resolve-invokeable-ns","G__46584","cljs.analyzer/handle-symbol-local","lb","G__46587","cljs.analyzer/resolve-var","cljs.analyzer.resolve_var","confirm","default?","locals","symn","shadowed-by-local","ret-tag","G__46588","G__46589","G__46590","idx","resolved","p1__46585#","cljs.core.update","suf","qualified-symbol","G__46591","G__46592","G__46593","cljs.analyzer/resolve-existing-var","cljs.analyzer/confirm-bindings","names","seq__46594","chunk__46595","count__46596","i__46597","ev","cljs.analyzer/resolve-macro-var","namespaces","clojure.string/ends-with?","cljs.analyzer.impl/CLJS_CORE_MACROS_SYM","cljs.analyzer/specials","cljs.analyzer/*recur-frames*","cljs.analyzer/*loop-lets*","cljs.analyzer/*allow-redef*","cljs.analyzer/*allow-ns*","cljs.analyzer/analyze-keyword","cljs.analyzer/get-tag","e","cljs.analyzer/find-matching-method","f","params","methods","cljs.core/some","cljs.analyzer/type?","*private-var-access-nowarn*-orig-val__46598","*private-var-access-nowarn*-temp-val__46599","proto","p__46600","map__46601","cljs.analyzer/unwrap-quote","op","expr","cljs.core/keyword-identical?","cljs.analyzer/infer-if","map__46602","then-tag","G__46603","G__46604","cljs.analyzer/infer-tag","else-tag","G__46605","G__46606","cljs.core/symbol-identical?","cljs.analyzer.impl/IGNORE_SYM","cljs.analyzer.impl/NOT_NATIVE","cljs.analyzer.impl/BOOLEAN_OR_SEQ","p__46607","map__46608","cljs.analyzer/infer-invoke","args","map__46609","cljs.analyzer.impl/ANY_SYM","G__46610","G__46611","G__46612","G__46613","G__46614","G__46615","G__46616","G__46617","G__46618","G__46619","G__46620","G__46621","cljs.analyzer.impl/BOOLEAN_SYM","G__46622","G__46623","init","G__46624","G__46625","js/cljs.analyzer.parse","fexpr__46626","cljs.analyzer/parse","rest","G__46630","cljs.analyzer/var-meta","cljs.analyzer.var_meta","expr-env","ks","user-meta","uks","cljs.core/keys","cljs.core/zipmap","p1__46627#","cljs.core/List","cljs.core.sequence","cljs.core.concat","p1__46628#","arglists","arglists'","cljs.core/second","cljs.core.doall","cljs.analyzer/analyze","cljs.analyzer/var-ast","*private-var-access-nowarn*-orig-val__46631","*private-var-access-nowarn*-temp-val__46632","cljs.core.dissoc","temp__5757__auto__","var-ns","G__46633","G__46634","p__46635","vec__46636","cljs.analyzer/predicate->tag","cljs.analyzer/simple-predicate-induced-tag","test","cljs.core/list?","cljs.core/symbol?","analyzed-fn","*cljs-warnings*-orig-val__46639","*cljs-warnings*-temp-val__46640","cljs.core.repeat","G__46641","G__46642","G__46643","cljs.analyzer/type-check-induced-tag","*cljs-warnings*-orig-val__46644","*cljs-warnings*-temp-val__46645","G__46646","G__46647","G__46649","fexpr__46648","analyzed-type","*cljs-warnings*-orig-val__46650","*cljs-warnings*-temp-val__46651","G__46652","G__46653","cljs.analyzer/truth-induced-tag","analyzed-symbol","*cljs-warnings*-orig-val__46654","*cljs-warnings*-temp-val__46655","G__46656","G__46657","cljs.core/set?","cljs.analyzer/set-test-induced-tags","vec__46658","local","G__46661","p__46662","vec__46663","then","else","test-expr","*recur-frames*-orig-val__46666","*recur-frames*-temp-val__46667","cljs.core/cons","G__46668","G__46669","then-expr","*allow-redef*-orig-val__46670","*allow-redef*-temp-val__46671","G__46672","G__46673","else-expr","*allow-redef*-orig-val__46674","*allow-redef*-temp-val__46675","cljs.core/*unchecked-if*","p__46678","vec__46679","tests","thens","default","cljs.core/vector?","*recur-frames*-orig-val__46682","*recur-frames*-temp-val__46683","p1__46676#","cljs.core.mapv","p1__46677#","nodes","cljs.core.some_fn","cljs.core/number?","cljs.core/string?","cljs.core/char?","p__46684","vec__46685","throw-form","throw-expr","*recur-frames*-orig-val__46688","*recur-frames*-temp-val__46689","G__46690","G__46691","p__46696","vec__46697","seq__46698","first__46699","body","map__46700","catchenv","p1__46692#","catch?","p1__46693#","cljs.core.every_pred","cljs.core/seq?","p1__46694#","finally?","p1__46695#","cblocks","dblock","fblock","parser","vec__46705","seq__46706","first__46707","forms*","parser*","G__46708","finally","*recur-frames*-orig-val__46709","*recur-frames*-temp-val__46710","G__46711","G__46712","cljs.core.gensym","vec__46713","seq__46714","first__46715","cb","cblock","p__46716","vec__46717","seq__46718","first__46719","catch","*recur-frames*-orig-val__46720","*recur-frames*-temp-val__46721","G__46722","G__46723","try","*recur-frames*-orig-val__46724","*recur-frames*-temp-val__46725","G__46726","G__46727","cljs.analyzer/valid-proto","cljs.analyzer/elide-env","ast","cljs.analyzer/replace-env-pass","new-env","cljs.analyzer/ast-children","g","p__46728","map__46729","cljs.analyzer/constant-value?","fexpr__46730","fexpr__46731","p__46732","map__46733","cljs.analyzer/const-expr->constant-value","G__46734","G__46735","cljs.analyzer/earmuffed?","cljs.analyzer/core-ns?","pfn","doc","const?","sym-meta","dynamic","ns-name","clash-ns","sym-ns","conj-to-set","var-name","init-expr","*recur-frames*-orig-val__46737","*recur-frames*-temp-val__46738","*allow-ns*-orig-val__46739","*allow-ns*-temp-val__46740","G__46741","G__46742","G__46743","fn-var?","export-as","export-val","G__46744","const-expr","*passes*-orig-val__46745","*passes*-temp-val__46746","G__46747","G__46748","protocol-symbol","p1__46736#","top-fn-meta","G__46749","G__46750","goog-type","G__46751","G__46752","cljs.analyzer/analyze-fn-method-param","p__46753","p__46754","vec__46755","vec__46758","arg-id","nmeta","shadow","param","cljs.analyzer/analyze-fn-method-body","recur-frames","*recur-frames*-orig-val__46761","*recur-frames*-temp-val__46762","cljs.analyzer/analyze-fn-method","analyze-body?","vec__46763","param-names","variadic","cljs.core.remove","step","step-init","cljs.core.reduce","cljs.core.map_indexed","cljs.core/vector","params'","fixed-arity","recur-frame","body-env","body-form","recurs","cljs.analyzer/fn-name-var","fn-scope","name-var","cljs.analyzer/analyze-fn-methods-pass2*","menv","meths","p1__46766#","cljs.analyzer/analyze-fn-methods-pass2","p__46768","vec__46769","seq__46770","first__46771","vec__46772","named-fn?","form-meta","proto-impl","proto-inline","G__46775","p1__46767#","*allow-ns*-orig-val__46776","*allow-ns*-temp-val__46777","mfa","cljs.core.transduce","cljs.core/max","cljs.core/assoc","*allow-ns*-orig-val__46778","*allow-ns*-temp-val__46779","cljs.core.vary_meta","cljs.core/dissoc","js-doc","children","inferred-ret-tag","inferred-tags","cljs.core.partial","cljs.core/=","variadic-methods","cljs.core.comp","cljs.core.take","variadic-params","param-counts","cljs.analyzer/analyze-wrap-meta","p__46780","vec__46781","seq__46782","first__46783","bindings","exprs","cljs.core/even?","vec__46784","vec__46787","n->fexpr","cljs.core.juxt","cljs.core.partition","context","meth-env","bes","p__46790","vec__46791","map__46794","fexpr","*cljs-warnings*-orig-val__46795","*cljs-warnings*-temp-val__46796","G__46797","G__46798","be","G__46799","p__46800","p__46801","vec__46802","map__46805","G__46806","G__46807","be'","G__46808","G__46809","cljs.analyzer/analyze-do-statements*","p1__46810#","G__46811","G__46812","cljs.analyzer/analyze-do-statements","*recur-frames*-orig-val__46813","*recur-frames*-temp-val__46814","p__46815","vec__46816","seq__46817","first__46818","statements","G__46819","G__46820","ret-env","G__46821","G__46822","cljs.analyzer/analyze-let-binding-init","loop-lets","*loop-lets*-orig-val__46823","*loop-lets*-temp-val__46824","cljs.analyzer/get-let-tag","cljs.analyzer/analyze-let-bindings*","encl-env","vec__46829","col","p1__46825#","cljs.analyzer/analyze-let-bindings","*recur-frames*-orig-val__46832","*recur-frames*-temp-val__46833","cljs.analyzer/analyze-let-body*","G__46834","G__46835","cljs.analyzer/analyze-let-body","*recur-frames*-orig-val__46836","*loop-lets*-orig-val__46837","*recur-frames*-temp-val__46838","*loop-lets*-temp-val__46839","p__46840","vec__46841","seq__46842","first__46843","cljs.analyzer/analyze-let","is-loop","widened-tags","vec__46844","p__46847","vec__46848","widened-tag","G__46851","*cljs-warning-handlers*-orig-val__46852","*cljs-warning-handlers*-temp-val__46853","nil->any","cljs.core/identity","p__46855","vec__46856","seq__46857","first__46858","frame","add-implicit-target-object?","G__46859","*recur-frames*-orig-val__46860","*recur-frames*-temp-val__46861","p1__46854#","G__46862","G__46863","cljs.core/reset!","tags","cljs.analyzer/analyze-const","map__46864","G__46865","G__46866","p__46867","vec__46868","p__46872","vec__46873","seq__46874","first__46875","ctor","*recur-frames*-orig-val__46876","*recur-frames*-temp-val__46877","enve","ctorexpr","ctor-var","G__46879","fexpr__46878","record-args","argexprs","p1__46871#","known-num-fields","argc","fexpr__46880","p__46881","vec__46882","target","alt","vec__46885","*recur-frames*-orig-val__46888","*recur-frames*-temp-val__46889","*private-var-access-nowarn*-orig-val__46890","*private-var-access-nowarn*-temp-val__46891","texpr","G__46892","cljs.analyzer/analyze-symbol","*cljs-warnings*-orig-val__46893","*cljs-warnings*-temp-val__46894","cljs.analyzer/analyze-seq","vexpr","G__46895","meta","fexpr__46896","cljs.analyzer/foreign-dep?","js-index","vec__46897","map__46900","foreign","G__46903","cljs.analyzer/analyze-deps","cljs.analyzer.analyze_deps","compiler","*cljs-dep-set*-orig-val__46904","*cljs-dep-set*-temp-val__46905","p1__46901#","cljs.core/str","cljs.core.interpose","seq__46906","chunk__46907","count__46908","i__46909","dep-name","cljs.analyzer/missing-use?","js-lib","cljs.analyzer/missing-rename?","cljs.analyzer/missing-use-macro?","the-ns","cljs.core/find-macros-ns","cljs.analyzer/missing-rename-macro?","cljs.analyzer/missing-uses","uses","p__46910","vec__46911","cljs.analyzer/missing-renames","renames","p__46914","vec__46915","qualified-sym","cljs.analyzer/missing-use-macros","use-macros","p__46918","vec__46919","cljs.analyzer/inferred-use-macros","p__46922","vec__46923","cljs.analyzer/inferred-rename-macros","rename-macros","p__46926","vec__46927","cljs.analyzer/check-uses","seq__46930","chunk__46931","count__46932","i__46933","vec__46940","vec__46943","G__46947","cljs.analyzer/check-use-macros","cljs.analyzer.check_use_macros","missing-uses","seq__46948","chunk__46949","count__46950","i__46951","vec__46958","vec__46961","p__46967","map__46968","cljs.analyzer/check-use-macros-inferring-missing","p1__46964#","maybe-macros","remove-missing-uses","ast'","p1__46965#","p1__46966#","p__46972","map__46973","cljs.analyzer/check-rename-macros-inferring-missing","p1__46969#","missing-renames","missing-rename-macros","remove-missing-renames","p1__46970#","p1__46971#","cljs.analyzer/parse-ns-error-msg","spec","cljs.analyzer/basic-validate-ns-spec","macros?","cljs.core/sequential?","cljs.core/odd?","fs","cljs.core/frequencies","cljs.analyzer/parse-ns-excludes","p__46975","vec__46976","seq__46977","first__46978","filters","valid-kws","err","kw","refs","p1__46974#","cljs.core/nnext","cljs.core.merge_with","p__46980","vec__46981","seq__46982","first__46983","cljs.analyzer/use->require","only?","p1__46979#","cljs.analyzer/parse-require-spec","aliases","vec__46984","seq__46985","first__46986","vec__46987","map__46990","vec__46991","js-module-provides","js-module-name","alias","referred","renamed","cljs.core/hash-map","referred-without-renamed","rk","uk","renk","alias-type","lib'","fexpr__46994","cljs.core.interleave","p__46995","vec__46996","original","cljs.analyzer/parse-import-spec","import-map","p1__46999#","seq__47000","chunk__47001","count__47002","i__47003","vec__47010","vec__47013","cljs.analyzer/macro-autoload-ns?","map__47016","require-macros","cljs.analyzer/clj-ns->cljs-ns","segs","cljs.analyzer/canonicalize-specs","specs","quoted-spec-or-kw","canonicalize","cljs.analyzer/canonicalize-import-specs","cljs.analyzer/desugar-ns-specs","map__47018","p1__47017#","require","indexed","p__47019","vec__47020","seq__47021","first__47022","sugar-keys","remove-from-spec","pred","vec__47023","l","r","cljs.core/split-with","cljs.core/complement","replace-refer-macros","reload-spec?","fexpr__47026","to-macro-specs","remove-sugar","require-specs","vec__47027","cljs.analyzer/find-def-clash","segments","to-check","cljs.core.reductions","seq__47030","chunk__47031","count__47032","i__47033","vec__47040","vec__47043","cljs.analyzer/macro-ns-name","name-str","goog.string/endsWith","cljs.analyzer/check-duplicate-aliases","old","new","seq__47046","chunk__47047","count__47048","i__47049","old-aliases","new-aliases","p__47058","vec__47059","p__47062","vec__47063","entry","cljs.analyzer/merge-ns-info","deep-merge-keys","p__47068","vec__47069","seq__47070","first__47071","G__47072","segment","map__47073","map__47074","vec__47075","docstring","mdocstr","metadata","excludes","core-renames","p__47078","vec__47079","spec-parsers","valid-forms","reloads","requires","imports","p__47082","vec__47083","seq__47084","first__47085","libs","libspec","fexpr__47086","fexpr__47087","cljs.core/disj","p1__47066#","p1__47067#","cljs.core/merge-with","p__47088","vec__47089","spec-map","p__47092","vec__47093","G__47096","ns-info","G__47097","fexpr__47098","fexpr__47099","fexpr__47100","fexpr__47101","p__47105","vec__47106","quoted-specs","not-quoted","cljs.core/keyword?","p1__47102#","map__47109","map__47110","p__47111","vec__47112","p__47115","vec__47116","seq__47117","first__47118","p1__47103#","p1__47104#","p__47119","vec__47120","require-info","G__47123","fexpr__47124","fexpr__47125","fexpr__47126","fexpr__47127","p__47128","vec__47129","cljs.analyzer/parse-type","tsym","fields","pmasks","fld","protocols","G__47132","G__47133","p1__47134#","cljs.analyzer/property-symbol?","p__47135","vec__47136","cljs.analyzer/classify-dot-form","member","js/cljs.analyzer.build-dot-form","fexpr__47140","p1__47139#","cljs.analyzer/build-dot-form","p__47141","vec__47142","prop","p__47145","vec__47146","cljs.analyzer/build-method-call","meth","p__47149","vec__47150","p__47153","vec__47154","p__47157","vec__47158","meth-expr","dot-form","cljs.core.list_STAR_","cljs.analyzer/analyze-dot","field","member+","map__47162","dot-action","targetexpr","target-tag","fexpr__47163","vec__47164","pre'","G__47167","G__47168","p1__47161#","p__47169","vec__47170","seq__47171","first__47172","vec__47173","seq__47174","first__47175","*recur-frames*-orig-val__47176","*recur-frames*-temp-val__47177","cljs.analyzer/get-js-tag","cljs.analyzer/js-star-interp","end","inner","cljs.core/LazySeq","G__47178","G__47179","cljs.analyzer/js-star-seg","G__47180","cljs.analyzer/NUMERIC_SET","cljs.analyzer/numeric-type?","cljs.analyzer/array-types","cljs.analyzer/array-type?","cljs.analyzer/analyze-js-star-args","js-op","p__47181","vec__47182","arg","cljs.analyzer/analyze-js-star*","jsform","numeric","validate","valid-types?","p1__47185#","op-match?","p1__47186#","cljs.analyzer/analyze-js-star","*recur-frames*-orig-val__47187","*recur-frames*-temp-val__47188","p__47189","vec__47190","seq__47191","first__47192","code","cljs.analyzer/unsorted-map?","cljs.core/sorted?","cljs.analyzer/analyzed","cljs.analyzer/analyzed?","cljs.analyzer/all-values?","p1__47193#","cljs.analyzer/valid-arity?","method-params","cljs.analyzer/record-tag?","cljs.analyzer/record-basis","positional-factory","cljs.analyzer/record-with-field?","cljs.analyzer/invalid-arity?","max-fixed-arity","p__47195","vec__47196","seq__47197","first__47198","cljs.analyzer/parse-invoke*","kw?","cur-ns","HO-invoke?","bind-f-expr?","bind-args?","map__47199","macro","deprecated?","no-warn?","arg-syms","cljs.core.repeatedly","cljs.core/gensym","f-sym","G__47200","G__47201","G__47202","p1__47194#","ana-expr","field-access-form","*cljs-warnings*-orig-val__47203","*cljs-warnings*-temp-val__47204","cljs.analyzer/parse-invoke","*recur-frames*-orig-val__47205","*recur-frames*-temp-val__47206","p__47207","map__47208","cljs.analyzer/desugar-dotted-expr","G__47209","G__47210","G__47211","map__47212","lcls","cljs.analyzer/excluded?","cljs.analyzer/used?","cljs.analyzer/get-expander-ns","nstr","G__47213","cljs.analyzer/get-expander*","nsym","mvar","cached-var","cljs.core/Delay","cljs.analyzer/get-macroexpand-check-var","cljs.core/find-ns-obj","cljs.analyzer/var->sym","cljs.analyzer/do-macroexpand-check","mac-var","mchk","e47214","G__47215","G__47216","cljs.analyzer/check-macro-arity","mac-sym","map__47218","variadic?","offset","cljs.core/ffirst","p1__47217#","cljs.core/nthrest","cljs.analyzer/macroexpand-1*","form'","e47222","cljs.analyzer.impl/cljs-seq?","sym'","cljs.analyzer.impl/JS_STAR_SYM","mac-var-ns","mac-var-name","opname","vec__47219","seq__47220","first__47221","cljs.analyzer.impl/DOT_SYM","cljs.analyzer.impl/NEW_SYM","cljs.analyzer/macroexpand-1","err__46428__auto__","e47223","cljs.analyzer/analyze-seq*","cljs.analyzer/analyze-seq*-wrap","e47224","G__47226","cljs.analyzer.analyze_seq","cljs.analyzer/analyze-list","mform","cljs.analyzer/analyze-map","*recur-frames*-orig-val__47229","*recur-frames*-temp-val__47230","p1__47227#","vs","*recur-frames*-orig-val__47231","*recur-frames*-temp-val__47232","p1__47228#","G__47233","items","*recur-frames*-orig-val__47235","*recur-frames*-temp-val__47236","p1__47234#","G__47237","cljs.analyzer/analyze-vector","*recur-frames*-orig-val__47239","*recur-frames*-temp-val__47240","p1__47238#","G__47241","cljs.analyzer/analyze-set","*recur-frames*-orig-val__47243","*recur-frames*-temp-val__47244","p1__47242#","G__47245","cljs.analyzer/analyze-js-value","keys","vals","*recur-frames*-orig-val__47248","*recur-frames*-temp-val__47249","p1__47246#","*recur-frames*-orig-val__47250","*recur-frames*-temp-val__47251","p1__47247#","cljs.analyzer/record-ns+name","cljs.analyzer/analyze-record","vec__47253","_items_","*recur-frames*-orig-val__47256","*recur-frames*-temp-val__47257","G__47258","G__47259","cljs.analyzer/elide-reader-meta","cljs.analyzer/elide-analyzer-meta","cljs.analyzer/elide-irrelevant-meta","meta-expr","p__47261","map__47262","cljs.analyzer/infer-type","ms","p1__47260#","cljs.analyzer/repl-self-require?","cljs.analyzer/invoke-arg-type-validators","p1__47263#","p1__47264#","aget-validator","aset-validator","p__47265","map__47266","cljs.analyzer/check-invoke-arg-types","vec__47267","map__47270","valid?","cljs.analyzer/analyze-form","cljs.core/record?","cljs.analyzer.impl/cljs-map?","cljs.analyzer.impl/cljs-vector?","cljs.tagged-literals/JSValue","cljs.analyzer.impl/CLJ_NIL_SYM","cljs.analyzer.impl/NUMBER_SYM","cljs.analyzer.impl/STRING_SYM","G__47271","cljs.analyzer/default-passes","cljs.analyzer.passes.and-or/optimize","cljs.analyzer/analyze*","passes","pass","G__47273","cljs.analyzer.analyze","e47274","*cljs-warnings*-orig-val__47275","*cljs-warnings*-temp-val__47276","cljs.analyzer/add-consts","compiler-state","constants-map","cljs.core/reduce-kv","*passes*-orig-val__47277","*passes*-temp-val__47278","cljs.analyzer/resolve-symbol","*private-var-access-nowarn*-orig-val__47279","*private-var-access-nowarn*-temp-val__47280","registry-ref","speced-vars","cljs.analyzer/get-spec-vars","cljs.analyzer/dump-specs","spec-vars","ns-str","p__47281","vec__47282","cljs.analyzer/register-specs","cached-ns","map__47285","registry","vars","G__47287","cljs.analyzer/analyze-form-seq","forms","cljs.analyzer.analyze_form_seq","return-last?","*file-defs*-orig-val__47288","*cljs-ns*-orig-val__47289","*cljs-file*-orig-val__47290","*alias-map*-orig-val__47291","*file-defs*-temp-val__47292","*cljs-ns*-temp-val__47293","*cljs-file*-temp-val__47294","*alias-map*-temp-val__47295","cljs.tools.reader/*alias-map*","last-ast","cljs.analyzer/ensure-defs","p1__47296#"]],"~:used-vars",["^Q",["~$cljs.analyzer/NUMERIC_SET","~$cljs.core/mapcat","~$cljs.core/--destructure-map","~$cljs.analyzer/analyze-map","~$cljs.analyzer/confirm-var-exists","~$clojure.string/join","~$cljs.analyzer/missing-uses","~$cljs.core/symbol-identical?","~$cljs.analyzer/analyze-record","~$cljs.analyzer/missing-use?","~$cljs.analyzer/constants-ns-sym","~$cljs.core/comp","~$cljs.analyzer/analyze-let-bindings","~$js/cljs.analyzer","~$cljs.core/rest","~$cljs.analyzer/resolve-var","~$cljs.analyzer/resolve-alias","~$cljs.core/even?","~$cljs.analyzer/merge-ns-info","~$js/cljs.analyzer.t_cljs$analyzer46515","~$cljs.analyzer/var->sym","~$cljs.analyzer/macroexpand-1*","~$cljs.analyzer/*cljs-dep-set*","~$cljs.core/str","~$cljs.core/char?","~$cljs.core/<","~$cljs.analyzer/analyzed?","~$cljs.analyzer/record-basis","~$cljs.analyzer/invalid-arity?","~$cljs.core/MultiFn","~$cljs.core/sequential?","~$cljs.analyzer/dotted-symbol?","~$cljs.core/odd?","~$clojure.string/starts-with?","~$cljs.analyzer/analyze-deps","~$cljs.analyzer/get-namespace","~$cljs.analyzer.impl/DOT_SYM","~$cljs.analyzer/*cljs-macros-is-classpath*","~$cljs.core/keyword?","~$cljs.analyzer/elide-reader-meta","~$cljs.analyzer/handle-symbol-local","~$cljs.analyzer/resolve-invokeable-ns","~$cljs.analyzer/infer-type","~$cljs.analyzer/clj-ns->cljs-ns","~$cljs.analyzer/*fn-invoke-direct*","~$cljs.analyzer/js-tag?","~$cljs.analyzer/parse-invoke","~$cljs.analyzer/error-data","~$cljs.core/nthrest","~$cljs.analyzer/has-extern?*","~$cljs.analyzer/analyze-let","~$cljs.analyzer/constant-value?","~$clojure.string/split","~$cljs.analyzer/ensure-defs","~$cljs.core/vector?","~$cljs.analyzer/ast?","~$cljs.analyzer/foreign-dep?","~$js/cljs.analyzer.build-dot-form","~$cljs.core/repeatedly","~$cljs.core/filter","~$cljs.analyzer/checked-arrays","~$cljs.core/=","~$cljs.analyzer/hex-format","~$cljs.analyzer.impl/cljs-map?","~$cljs.core/keys","~$cljs.analyzer/analyze-js-star-args","~$cljs.core/*print-err-fn*","~$cljs.analyzer.impl/NOT_NATIVE","~$cljs.analyzer/es5-allowed","~$cljs.core/re-matches","~$cljs.analyzer/used?","~$cljs.analyzer/property-symbol?","~$cljs.core/partial","~$cljs.core/doall","~$cljs.core/-write","~$cljs.analyzer/analyze","~$cljs.analyzer.impl/STRING_SYM","~$cljs.analyzer/analyze-fn-method","~$cljs.analyzer/source-info->error-data","~$cljs.analyzer/js-star-seg","~$cljs.analyzer/dep-has-global-exports?","~$cljs.core/IndexedSeq","~$cljs.analyzer/type?","~$js/cljs.analyzer.resolve*","~$cljs.analyzer/missing-use-macros","~$cljs.analyzer/register-specs","~$cljs.env/default-compiler-env","~$cljs.analyzer/-cljs-macros-loaded","~$cljs.core/count","~$cljs.analyzer/find-matching-method","~$cljs.core/deref","~$cljs.core/hash-map","~$cljs.analyzer.impl/cljs-seq?","~$cljs.analyzer/*cljs-warning-handlers*","~$cljs.core/transduce","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.analyzer/var-meta","~$cljs.core/chunk-first","~$cljs.analyzer/replay-accumulated-warnings","~$cljs.analyzer/desugar-ns-specs","~$cljs.core/apply","~$cljs.analyzer/analyze-seq*-wrap","~$cljs.analyzer/analyze-js-value","~$cljs.analyzer/topo-sort","~$cljs.core/identity","~$cljs.analyzer/classify-dot-form","~$cljs.core/Keyword","~$cljs.analyzer/record-with-field?","~$cljs.core/take","~$goog.string/contains","~$cljs.analyzer/SENTINEL","~$cljs.core/last","~$cljs.analyzer/namespaces","~$cljs.core/mapv","~$cljs.analyzer/*checked-arrays*","~$cljs.analyzer/valid-proto","~$cljs.analyzer/compile-syntax-error","~$cljs.core/not=","~$cljs.analyzer/ns->relpath","~$cljs.analyzer/js-reserved","~$cljs.core/ns-interns*","~$cljs.core/distinct","~$cljs.core/string?","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.analyzer/check-use-macros","~$cljs.core/Delay","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$cljs.core/atom","~$cljs.analyzer/basic-validate-ns-spec","~$cljs.analyzer/parse-type","~$cljs.analyzer/has-error-data?","~$cljs.core/concat","~$cljs.analyzer/all-values?","~$cljs.analyzer/desugar-dotted-expr","~$cljs.analyzer/check-rename-macros-inferring-missing","~$cljs.analyzer/infer-invoke","~$cljs.core/pr-str","~$cljs.analyzer/array-type?","~$cljs.analyzer/get-line","~$cljs.analyzer/excluded?","~$cljs.analyzer/array-types","~$cljs.analyzer/*check-alias-dupes*","~$clojure.string/ends-with?","~$cljs.analyzer/add-types","~$cljs.analyzer/node-like?","~$cljs.analyzer.impl/BOOLEAN_SYM","~$cljs.analyzer/resolve-existing-var","~$cljs.analyzer/required?","~$cljs.analyzer/analyze-fn-method-body","~$cljs.analyzer/parse-invoke*","~$clojure.string/includes?","~$cljs.core/set","~$cljs.analyzer/truth-induced-tag","~$cljs.analyzer/ast-children","~$cljs.analyzer/analyze-symbol","~$cljs.analyzer/analyze-seq*","~$cljs.analyzer/analyze-keyword","~$cljs.core/find","~$cljs.analyzer/predicate->tag","~$cljs.analyzer/elide-analyzer-meta","~$cljs.analyzer/*loop-lets*","~$cljs.core/empty?","~$cljs.analyzer/munge-global-export","~$cljs.core/memoize","~$cljs.analyzer/js-tag","~$cljs.core/fnil","~$cljs.core/merge-with","~$cljs.analyzer/get-expander","~$cljs.analyzer/->type-set","~$cljs.env/*compiler*","~$cljs.analyzer/analyze-let-body","~$cljs.analyzer/check-use-macros-inferring-missing","~$cljs.analyzer/*load-tests*","~$cljs.analyzer/canonicalize-type","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.analyzer/extern-pre","~$cljs.core/reset!","~$cljs.analyzer/get-col","~$js/cljs.analyzer.error-message","~$cljs.core/conj","~$cljs.analyzer/gets","~$cljs.analyzer/*cljs-warnings*","~$cljs.analyzer/alias->type","~$cljs.core/vary-meta","~$cljs.analyzer/t_cljs$analyzer46515","~$cljs.analyzer/error-message","~$cljs.core/zipmap","~$cljs.analyzer/analyze-const","~$cljs.core/update","~$js/require.resolve","~$cljs.analyzer/simple-predicate-induced-tag","~$cljs.core/run!","~$cljs.core/with-meta","~$cljs.core/namespace","~$cljs.analyzer/missing-rename?","~$cljs.analyzer/*allow-redef*","~$js/cljs","~$cljs.core/juxt","~$cljs.core/map","~$cljs.analyzer/*reload-macros*","~$cljs.analyzer/macro-ns-name","~$cljs.analyzer/parse-import-spec","~$cljs.analyzer/dump-specs","~$cljs.analyzer/inferred-use-macros","~$cljs.analyzer/compiler-options","~$cljs.analyzer/use->require","~$cljs.analyzer/earmuffed?","~$cljs.analyzer/public-name?","~$cljs.analyzer/*macro-infer*","~$cljs.core/PersistentVector","~$cljs.analyzer/analyze-js-star*","~$cljs.analyzer/default-warning-handler","~$cljs.analyzer/intern-macros","~$cljs.analyzer/const-expr->constant-value","~$cljs.analyzer/parse-ns-error-msg","~$cljs.core/get-in","~$cljs.core/List","~$cljs.analyzer/record-ns+name","~$cljs.analyzer.impl/JS_STAR_SYM","~$cljs.core/vals","~$cljs.core/swap!","~$js/cljs.analyzer.parse","~$cljs.core/-add-method","~$cljs.analyzer/missing-renames","~$cljs.analyzer/implicit-nses","~$cljs.core/number?","~$cljs.analyzer/check-macro-arity","~$cljs.analyzer/normalize-js-tag","~$cljs.core/get","~$cljs.analyzer/unchecked-arrays?","~$cljs.analyzer/repeat-char","~$cljs.analyzer/analyze-js-star","~$cljs.analyzer/analyze-do-statements*","~$cljs.analyzer/analyze-let-bindings*","~$cljs.analyzer/register-constant!","~$cljs.core/-nth","~$cljs.analyzer/do-macroexpand-check","~$cljs.analyzer/valid-arity?","~$cljs.core/remove","~$cljs.core/subseq","~$cljs.core/partition","~$cljs.analyzer/core-name?","~$cljs.analyzer/*recur-frames*","~$cljs.analyzer/*load-macros*","~$cljs.analyzer/resolve-macro-ns-alias","~$cljs.analyzer/get-let-tag","~$cljs.analyzer/macroexpand-1","~$cljs.analyzer.impl/cljs-vector?","~$cljs.analyzer/analyze-fn-methods-pass2*","~$clojure.set/difference","~$cljs.analyzer/empty-env","~$cljs.analyzer/analyze-let-body*","~$cljs.core/symbol","~$cljs.analyzer/canonicalize-import-specs","~$cljs.analyzer/loaded-js-ns?","~$cljs.analyzer/analyze-vector","~$cljs.analyzer/unwrap-quote","~$cljs.core/frequencies","~$cljs.analyzer/resolve-ns-alias","~$cljs.analyzer/inferred-rename-macros","~$cljs.core/*unchecked-arrays*","~$cljs.core/record?","~$cljs.analyzer/gen-constant-id","~$cljs.analyzer/missing-use-macro?","~$cljs.core/nnext","~$cljs.analyzer/analyzed","~$cljs.analyzer.impl/NUMBER_SYM","~$cljs.analyzer/macro-autoload-ns?","~$cljs.analyzer/lib&sublib","~$cljs.analyzer/default-passes","~$cljs.analyzer/get-tag","~$cljs.analyzer/resolve*","~$cljs.analyzer.impl/IGNORE_SYM","~$cljs.analyzer/confirm-var-exist-warning","~$cljs.core/set?","~$cljs.core/sorted?","~$cljs.analyzer/type-check-induced-tag","~$cljs.analyzer.impl/CLJS_CORE_MACROS_SYM","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/meta","~$cljs.analyzer/analyze-do-statements","~$cljs.core/max","~$cljs.analyzer/->t_cljs$analyzer46515","~$cljs.core/list?","~$cljs.core/second","~$cljs.core/find-ns-obj","~$cljs.analyzer/*allow-ns*","~$cljs.analyzer/private-var-access-exceptions","~$cljs.analyzer/get-expander*","~$cljs.analyzer/*cljs-static-fns*","~$cljs.analyzer/analyze-seq","~$cljs.core/println","~$clojure.string/replace","~$cljs.analyzer/find-def-clash","~$cljs.core/interleave","~$cljs.analyzer/resolve-macro-var","~$cljs.analyzer/munge-node-lib","~$cljs.analyzer.impl/ANY_SYM","~$cljs.core/split-with","~$cljs.core/*target*","~$cljs.analyzer/fn-name-var","~$cljs.core/next","~$cljs.core/vec","~$cljs.analyzer/internal-js-module-exists?","~$cljs.core/ffirst","~$cljs.core/reductions","~$cljs.core/sorted-map","~$cljs.analyzer/munge-path","~$cljs.core/select-keys","~$cljs.analyzer/ns->module-type","~$cljs.analyzer/get-macroexpand-check-var","~$cljs.analyzer/analyze-set","~$cljs.analyzer/build-method-call","~$cljs.analyzer/analyze-fn-method-param","~$cljs.analyzer/has-extern?","~$cljs.core/*print-fn*","~$cljs.core/sequence","~$cljs.analyzer/js-module-exists?","~$cljs.analyzer/confirm-var-exists-throw","~$cljs.analyzer/missing-rename-macro?","~$cljs.analyzer/numeric-type?","~$cljs.analyzer/repl-self-require?","~$cljs.analyzer/elide-env","~$cljs.core/not","~$cljs.core/complement","~$cljs.analyzer/confirm-bindings","~$cljs.analyzer/var-ast","~$cljs.analyzer/analyze-wrap-meta","~$cljs.core/disj","~$cljs.core/cons","~$cljs.analyzer/node-module-dep?","~$cljs.core/assoc","~$cljs.analyzer/get-js-tag","~$cljs.analyzer/get-spec-vars","~$cljs.core/interpose","~$clojure.set/union","~$cljs.analyzer/parse","~$cljs.core/assoc-in","~$cljs.analyzer.impl/BOOLEAN_OR_SEQ","~$cljs.core/map-indexed","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.analyzer/warning","~$cljs.analyzer/implicit-import?","~$cljs.analyzer/get-externs","~$cljs.tools.reader/*alias-map*","~$cljs.analyzer/check-uses","~$cljs.analyzer/set-test-induced-tags","~$cljs.tagged-literals/JSValue","~$cljs.analyzer.impl/NEW_SYM","~$cljs.analyzer/*passes*","~$cljs.analyzer/invoke-arg-type-validators","~$cljs.core/ex-data","~$cljs.analyzer/get-expander-ns","~$cljs.core/reduce-kv","~$cljs.analyzer/*file-defs*","~$cljs.analyzer/*private-var-access-nowarn*","~$cljs.analyzer/*cljs-file*","~$cljs.core/repeat","~$cljs.analyzer/*verbose*","~$cljs.analyzer/message","~$cljs.analyzer/confirm-ns","~$cljs.core/*unchecked-if*","~$cljs.core/munge","~$cljs.analyzer.passes.and-or/optimize","~$cljs.core/some-fn","~$cljs.analyzer/default-namespaces","~$cljs.analyzer/accumulating-warning-handler","~$cljs.analyzer/canonicalize-specs","~$cljs.core/gensym","~$cljs.analyzer/source-info","~$cljs.analyzer/analyze-form","~$cljs.core/first","~$cljs.core/butlast","~$cljs.core/seq?","~$cljs.analyzer/analyze-form-seq","~$cljs.analyzer/js-module-exists?*","~$cljs.analyzer/resolve-symbol","~$cljs.analyzer/record-tag?","~$cljs.analyzer/invokeable-ns?","~$cljs.analyzer/add-consts","~$cljs.analyzer/error","~$cljs.analyzer/core-ns?","~$cljs.analyzer/*cljs-macros-path*","~$cljs.core/name","~$cljs.analyzer/analyze-dot","~$cljs.core/subs","~$cljs.core/merge","~$cljs.analyzer/parse-require-spec","~$cljs.core/every?","~$cljs.analyzer/*cljs-ns*","~$cljs.core/update-in","~$cljs.analyzer/*analyze-deps*","~$cljs.analyzer/replace-env-pass","~$cljs.analyzer/analysis-error?","~$cljs.core/every-pred","~$js/Error","~$cljs.core/list*","~$cljs.core/find-macros-ns","~$cljs.core/vector","~$cljs.core/boolean","~$cljs.analyzer.impl/CLJ_NIL_SYM","~$cljs.analyzer/js-star-interp","~$cljs.analyzer/build-dot-form","~$cljs.core/type","~$cljs.analyzer/analyze-list","~$cljs.analyzer/analyze*","~$cljs.analyzer/parse-ns-excludes","~$cljs.analyzer/elide-irrelevant-meta","~$cljs.core/some","~$cljs.analyzer/analyze-fn-methods-pass2","~$cljs.analyzer/specials","~$cljs.analyzer/unsorted-map?","~$cljs.analyzer/check-invoke-arg-types","~$cljs.analyzer/check-duplicate-aliases","~$goog.string/endsWith","~$cljs.core/drop","~$cljs.analyzer/infer-tag","~$cljs.core/chunked-seq?","~$cljs.analyzer/analyze-let-binding-init","~$cljs.analyzer.impl/cljs-set?","~$cljs.analyzer/infer-if"]]],"~:cache-keys",["~#cmap",[["^1T","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^1;","~$goog.dom.HtmlElement"]]],["^1T","cljs/tools/reader/impl/utils.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^1A","^12"]]],["^1T","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","~$goog.array","~$goog.asserts"]]],["^1T","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","cljs/env.cljc"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:"]]],["^1T","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;[","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1T","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^<3"]]],["^1T","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0"]]],["^1T","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","cljs/tools/reader/edn.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","~$cljs.tools.reader.impl.errors","^1<","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^15","^12","~$goog.string.StringBuffer"]]],["^1T","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","cljs/tools/reader/impl/inspect.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:"]]],["^1T","cljs/tools/reader.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^1<","^<;","^<<","^<:","^;[","^12","^<="]]],["^1T","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0"]]],"~:SHADOW-TIMESTAMP",[1624356658000,1624356658000,1624356662000],["^1T","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","~$goog.reflect"]]],["^1T","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","~$goog.fs.blob","^<4","~$goog.html.SafeScript","~$goog.html.trustedtypes","^<6","^<7","^<8","^<9"]]],["^1T","cljs/analyzer/passes/and_or.cljc"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","~$cljs.analyzer.passes"]]],["^1T","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;[","^<0","~$goog.html.SafeUrl","^<8","^<9","^<3"]]],["^1T","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^<A","~$goog.html.SafeStyle","^<D","^<5","~$goog.html.uncheckedconversions","^<8","^<3"]]],["^1T","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1T","cljs/analyzer/passes.cljc"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:"]]],["^1T","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;[","^<0","~$goog.dom.TagName","~$goog.dom.tags","^<A","^<H","~$goog.html.SafeStyleSheet","^<D","^<5","^<B","^<6","^<7","~$goog.labs.userAgent.browser","^<2","^<8","^<9","^<3"]]],["^1T","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<2"]]],["^1T","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;["]]],["^1T","cljs/reader.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^<2","^15","~$cljs.tools.reader.edn","^<="]]],["^1T","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1T","cljs/tagged_literals.cljc"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^1B"]]],["^1T","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;[","^<0","^12","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1T","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",[]]],["^1T","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;[","^<2"]]],["^1T","cljs/tools/reader/impl/errors.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^1<","^1A","~$cljs.tools.reader.impl.inspect"]]],["^1T","clojure/string.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^12","^<="]]],["^1T","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","~$goog.dom.safe","^<I","^<8","^<3"]]],["^1T","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<3"]]],["^1T","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","cljs/tools/reader/reader_types.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^<;","^12","^<="]]],["^1T","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^;[","^<0","^<F","~$goog.math"]]],["^1T","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","^<G","^<A","^<H","^<N","^<D","^<5","^<8","^<3","^<6"]]],["^1T","cljs/tools/reader/impl/commons.cljs"],["b2f6b36cef8b996bd0d23135abede05af16d76be","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^<:","^1<","^<;"]]],["^1T","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;"]]],["^1T","cljs/core.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","~$goog.math.Long","~$goog.math.Integer","^12","^<2","^;[","~$goog.Uri","^<="]]],["^1T","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<8","^<9","^<B","^<0"]]],["^1T","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<8","^<H","^<9","^;[","^<2","^<0","^<3"]]],["^1T","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<?"]]],["^1T","clojure/set.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:"]]],["^1T","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","^12"]]],["^1T","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^<0","^<9"]]],["^1T","cljs/analyzer.cljc"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:","^14","^17","^1=","^1B","^19","^15","^1<","^10","^1A","^12"]]],["^1T","cljs/analyzer/impl.cljc"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^;V",["^ ","^;W",null,"^;X",["^Q",[]],"^;Y",["^1;","^1:"]]]]],"~:clj-info",["^ ","jar:file:/home/hp/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1624356667000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/reader.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes/and_or.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/env.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/instant.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64_vlq.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/tagged_literals.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1624356667000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/impl.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/js_deps.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/env/macros.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/data.json/2.3.1/data.json-2.3.1.jar!/clojure/data/json.clj",1624356633000,"jar:file:/home/hp/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1624356667000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/core.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1624356667000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1624356667000,"jar:file:/home/hp/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/cljs/tools/reader/reader_types.clj",1624356667000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/util.cljc",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/externs.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1624352849000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/macros.clj",1624356662000,"jar:file:/home/hp/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/compiler.cljc",1624356662000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/analyzer.cljc","^7",9,"^8",5,"^9",9,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H","^N","^O"],"^P",["^Q",["^N","^R","^S","^T"]],"~:shadow/js-access-properties",["^Q",["resolve"]],"^U","^V","^Y",null,"^Z",["^ ","^[","^10","^11","^12","^13","^14","^15","^15","^16","^17","^12","^12","^18","^19","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^1=","^17","^17","^10","^10","^1>","^1<","^19","^19","^1?","^1=","^1@","^1A","^14","^14","^1A","^1A","^1B","^1B","^1C","^1B","^1D","^15"],"^1E",["^Q",["^1F","^1G"]],"~:shadow/js-access-global",["^Q",["require","Error"]],"^1H",null,"~:defs",["^ ","~$type?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1361,"^8",7,"^9",1361,"^:",12,"~:arglists",["^1J",["~$quote",["^1J",[["^1?","~$t"]]]]],"~:tag","~$boolean"],"^U","^3Z","^6","cljs/analyzer.cljc","^:",12,"~:method-params",["^1J",[["^1?","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^1J",[null,null]],"^8",1,"~:variadic?",false,"^7",1361,"~:ret-tag","^>0","^9",1361,"~:max-fixed-arity",2,"^=[","^>0","~:fn-var",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$t"]]]]]],"~$invalid-arity?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3628,"^8",8,"^9",3628,"^:",22,"~:private",true,"^=Y",["^1J",["^=Z",["^1J",[["~$argc","~$method-params","~$variadic","~$max-fixed-arity"]]]]]],"^>9",true,"^U","^2P","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^>:","^>;","^><","^>="]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3628,"^>5",["^Q",[null,"^>0"]],"^9",3628,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>:","^>;","^><","^>="]]]]]],"~$record-basis",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3617,"^8",8,"^9",3617,"^:",20,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$tag"]]]]]],"^>9",true,"^U","^2O","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^>?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3617,"^>5",["^Q",[null,"~$clj","~$any"]],"^9",3617,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>?"]]]]]],"~$get-namespace",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",570,"^8",7,"^9",570,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["~$key"],["~$cenv","^>C"]]]]],"~:top-fn",["^ ","^>4",false,"~:fixed-arity",2,"^>6",2,"^>1",[["^>C"],["^>D","^>C"]],"^=Y",["^1J",[["^>C"],["^>D","^>C"]]],"^>3",["^1J",[null,null]]]],"^U","^2W","^6","cljs/analyzer.cljc","^:",20,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^>C"],["^>D","^>C"]],"^=Y",["^1J",[["^>C"],["^>D","^>C"]]],"^>3",["^1J",[null,null]]],"^>1",[["^>C"],["^>D","^>C"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"~:methods",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[",["^Q",[null,"^>A","~$cljs.core/IMap","~$clj-nil"]]]],"^7",570,"^9",570,"^>6",2,"^>7",true,"^=Y",["^1J",[["^>C"],["^>D","^>C"]]]],"~$error-message",["^ ","^U","^6B","^6","cljs/analyzer.cljc","^7",259,"^8",1,"^9",259,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",259,"^8",11,"^9",259,"^:",24],"^=[","^2Q"],"~$elide-reader-meta",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4049,"^8",7,"^9",4049,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["~$m"]]]]]],"^U","^2[","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["~$m"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4049,"^>5",["^Q",["^>@","^>I"]],"^9",4049,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$m"]]]]]],"~$missing-rename?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2619,"^8",7,"^9",2619,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["~$sym","^>D"]]]]]],"^U","^6K","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^>M","^>D"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2619,"^>5","^>0","^9",2619,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^>D"]]]]]],"~$resolve-invokeable-ns",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1120,"^8",7,"^9",1120,"^:",28,"^=Y",["^1J",["^=Z",["^1J",[["^1K","~$current-ns","^1?"]]]]]],"^U","^31","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^1K","^>O","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1120,"^9",1120,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^>O","^1?"]]]]]],"~$analyze-let",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2328,"^8",7,"^9",2328,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["~$encl-env",["~$_","~$bindings","~$&","~$exprs","^1O","~$form"],"~$is-loop","~$widened-tags"]]]]]],"^U","^3:","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^>Q","~$p__46840","^>U","^>V"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2328,"^>5","^>H","^9",2328,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>Q",["~$_","^>R","~$&","^>S","^1O","^>T"],"^>U","^>V"]]]]]],"~$var-meta",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1460,"^8",7,"^9",1460,"^:",15,"^=Y",["^1J",["^=Z",["^1J",[["~$var"],["^>Y","~$expr-env"]]]]],"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^>Y"],["^>Y","^>Z"]],"^=Y",["^1J",[["^>Y"],["^>Y","^>Z"]]],"^>3",["^1J",[null,null]]]],"^U","^4=","^6","cljs/analyzer.cljc","^:",15,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^>Y"],["^>Y","^>Z"]],"^=Y",["^1J",[["^>Y"],["^>Y","^>Z"]]],"^>3",["^1J",[null,null]]],"^>1",[["^>Y"],["^>Y","^>Z"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[",["^Q",["^>A","^>I"]]]],"^7",1460,"^9",1460,"^>6",2,"^>7",true,"^=Y",["^1J",[["^>Y"],["^>Y","^>Z"]]]],"~$desugar-ns-specs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2975,"^8",7,"^9",2975,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["~$args"]]]]],"~:doc","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"^U","^4@","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^?0"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2975,"^>5",["^Q",[null,"^50"]],"^9",2975,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?0"]]]]],"^?1","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"~$replay-accumulated-warnings",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",698,"^8",8,"^9",698,"^:",35,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$warn-acc"]]]]]],"^>9",true,"^U","^4?","^6","cljs/analyzer.cljc","^:",35,"^>1",["^1J",[["^?3"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",698,"^>5","^>I","^9",698,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?3"]]]]]],"~$js-tag?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",892,"^8",7,"^9",892,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"^U","^35","^6","cljs/analyzer.cljc","^:",14,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",892,"^>5","^>0","^9",892,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"~$classify-dot-form",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3311,"^8",8,"^9",3311,"^:",25,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[[["~$target","~$member","^?0"]]]]]]],"^>9",true,"^U","^4F","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["~$p__47135"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3311,"^>5","~$cljs.core/IVector","^9",3311,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^?6","^?7","^?0"]]]]]]],"~$ensure-defs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4707,"^8",7,"^9",4707,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1K"]]]]],"^?1","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"^U","^3=","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^1K"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4707,"^>5",["^Q",[null,"^>A"]],"^9",4707,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K"]]]]],"^?1","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"~$analyze-map",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3975,"^8",7,"^9",3975,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^27","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3975,"^>5","^>A","^9",3975,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$NUMERIC_SET",["^ ","^U","^24","^6","cljs/analyzer.cljc","^7",3470,"^8",1,"^9",3470,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3470,"^8",6,"^9",3470,"^:",17],"^=[","~$cljs.core/ISet"],"~$analyze-record",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4037,"^8",7,"^9",4037,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$x"]]]]]],"^U","^2<","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1?","~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4037,"^>5","^>H","^9",4037,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$x"]]]]]],"~$analyze-seq*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3941,"^8",7,"^9",3941,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["~$op","^1?","^>T","~$name","~$opts"]]]]]],"^U","^5N","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^?@","^1?","^>T","^?A","^?B"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3941,"^>5","^>A","^9",3941,"^>6",5,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?@","^1?","^>T","^?A","^?B"]]]]]],"~$constants-ns-sym",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",71,"^8",6,"^9",71,"^:",22],"^U","^2>","^6","cljs/analyzer.cljc","^:",22,"^8",1,"^7",71,"^9",71,"^=[","^9Z","^?1","The namespace of the constants table as a symbol."],"~$resolve-alias",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1017,"^8",7,"^9",1017,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^>M"]]]]],"^?1","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"^U","^2D","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^1K","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1017,"^>5",["^Q",[null,"^>A"]],"^9",1017,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^>M"]]]]],"^?1","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"~$*cljs-dep-set*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",61,"^8",16,"^9",61,"^:",30,"~:dynamic",true],"^U","^2J","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^?F",true,"^7",61,"^9",61,"^=[","^>A"],"~$merge-ns-info",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3060,"^8",8,"^9",3060,"^:",21,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$old","~$new","^1?"]]]]]],"^>9",true,"^U","^2F","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^?H","^?I","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3060,"^>5",["^Q",[null,"^>A","^>I"]],"^9",3060,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?H","^?I","^1?"]]]]]],"~$resolve-var",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1148,"^8",7,"^9",1148,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"],["^1?","^>M","~$confirm"],["^1?","^>M","^?K","~$default?"]]]]],"^?1","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^>M"],["^1?","^>M","^?K"],["^1?","^>M","^?K","^?L"]],"^=Y",["^1J",[["^1?","^>M"],["^1?","^>M","^?K"],["^1?","^>M","^?K","^?L"]]],"^>3",["^1J",[null,null,null]]]],"^U","^2C","^6","cljs/analyzer.cljc","^:",18,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^>M"],["^1?","^>M","^?K"],["^1?","^>M","^?K","^?L"]],"^=Y",["^1J",[["^1?","^>M"],["^1?","^>M","^?K"],["^1?","^>M","^?K","^?L"]]],"^>3",["^1J",[null,null,null]]],"^>1",[["^1?","^>M"],["^1?","^>M","^?K"],["^1?","^>M","^?K","^?L"]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false,"^=[",["^Q",["^>@","^>A","^>H","^>I"]]]],"^7",1148,"^9",1148,"^>6",4,"^>7",true,"^=Y",["^1J",[["^1?","^>M"],["^1?","^>M","^?K"],["^1?","^>M","^?K","^?L"]]],"^?1","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars."],"~$analyze-fn-method",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2032,"^8",8,"^9",2032,"^:",25,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$locals","^>T","~$type","~$analyze-body?"]]]]]],"^>9",true,"^U","^3U","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^1?","^?N","^>T","^?O","^?P"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2032,"^>5",["^Q",["^>A","^>I"]],"^9",2032,"^>6",5,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?N","^>T","^?O","^?P"]]]]]],"~$js-star-seg",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3460,"^8",7,"^9",3460,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["~$s"]]]]]],"^U","^3W","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["~$s"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3460,"^>5","^>@","^9",3460,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$s"]]]]]],"~$dep-has-global-exports?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",808,"^8",7,"^9",808,"^:",30,"^=Y",["^1J",["^=Z",["^1J",[["~$module"]]]]]],"^U","^3X","^6","cljs/analyzer.cljc","^:",30,"^>1",["^1J",[["^?S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",808,"^>5","^>0","^9",808,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?S"]]]]]],"~$register-specs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4617,"^8",7,"^9",4617,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["~$cached-ns"]]]]],"^?1","Registers speced vars found in a namespace analysis cache."],"^U","^41","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^?U"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4617,"^>5",["^Q",[null,"^>A","^>I"]],"^9",4617,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?U"]]]]],"^?1","Registers speced vars found in a namespace analysis cache."],"~$get-externs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",174,"^8",7,"^9",174,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"^U","^:2","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",174,"^>5","^>A","^9",174,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"~$*passes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",67,"^8",16,"^9",67,"^:",24,"^?F",true],"^U","^:8","^6","cljs/analyzer.cljc","^:",24,"^8",1,"^?F",true,"^7",67,"^9",67,"^=[","^>A"],"~$has-extern?*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",950,"^8",7,"^9",950,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["~$pre","~$externs"],["^?Y","^?Z","~$top"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^?Y","^?Z"],["^?Y","^?Z","^?["]],"^=Y",["^1J",[["^?Y","^?Z"],["^?Y","^?Z","^?["]]],"^>3",["^1J",[null,null]]]],"^U","^39","^6","cljs/analyzer.cljc","^:",19,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^?Y","^?Z"],["^?Y","^?Z","^?["]],"^=Y",["^1J",[["^?Y","^?Z"],["^?Y","^?Z","^?["]]],"^>3",["^1J",[null,null]]],"^>1",[["^?Y","^?Z"],["^?Y","^?Z","^?["]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[",["^Q",["^>0","^>A"]]]],"^7",950,"^9",950,"^>6",3,"^>7",true,"^=Y",["^1J",[["^?Y","^?Z"],["^?Y","^?Z","^?["]]]],"~$handle-symbol-local",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1143,"^8",7,"^9",1143,"^:",26,"^=Y",["^1J",["^=Z",["^1J",[["^>M","~$lb"]]]]]],"^U","^30","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["^>M","^@1"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1143,"^>5",["^Q",[null,"^>H"]],"^9",1143,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^@1"]]]]]],"~$get-expander-ns",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3790,"^8",7,"^9",3790,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$nstr"]]]]]],"^U","^:;","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^1?","^@3"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3790,"^>5",["^Q",["~$cljs.core/Namespace","^>A","^>I"]],"^9",3790,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^@3"]]]]]],"~$message",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",682,"^8",7,"^9",682,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$s"]]]]]],"^U","^:B","^6","cljs/analyzer.cljc","^:",14,"^>1",["^1J",[["^1?","~$s"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",682,"^>5","^1@","^9",682,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$s"]]]]]],"~$parse-invoke",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3697,"^8",7,"^9",3697,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^36","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3697,"^9",3697,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$*cljs-warning-handlers*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",485,"^8",16,"^9",485,"^:",39,"^?F",true],"^U","^49","^6","cljs/analyzer.cljc","^:",39,"^8",1,"^?F",true,"^7",485,"^9",485,"^=[","^>A"],"~$analyze-seq*-wrap",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3946,"^8",7,"^9",3946,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^?@","^1?","^>T","^?A","^?B"]]]]]],"^U","^4B","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^?@","^1?","^>T","^?A","^?B"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3946,"^9",3946,"^>6",5,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?@","^1?","^>T","^?A","^?B"]]]]]],"~$confirm-bindings",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1268,"^8",7,"^9",1268,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$names"]]]]],"^?1","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"^U","^9K","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^1?","^@:"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1268,"^>5","^>I","^9",1268,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^@:"]]]]],"^?1","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"~$has-extern?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",976,"^8",7,"^9",976,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^?Y"],["^?Y","^?Z"]]]]],"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^?Y"],["^?Y","^?Z"]],"^=Y",["^1J",[["^?Y"],["^?Y","^?Z"]]],"^>3",["^1J",[null,null]]]],"^U","^9@","^6","cljs/analyzer.cljc","^:",18,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^?Y"],["^?Y","^?Z"]],"^=Y",["^1J",[["^?Y"],["^?Y","^?Z"]]],"^>3",["^1J",[null,null]]],"^>1",[["^?Y"],["^?Y","^?Z"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[",["^Q",["^>0","^>A"]]]],"^7",976,"^9",976,"^>6",2,"^>7",true,"^=Y",["^1J",[["^?Y"],["^?Y","^?Z"]]]],"~$foreign-dep?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2564,"^8",7,"^9",2564,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["~$dep"]]]]],"^=[","^>0"],"^U","^3@","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^@="]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2564,"^>5","^>0","^9",2564,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^@="]]]]]],"~$missing-rename-macro?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2630,"^8",7,"^9",2630,"^:",28,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"^U","^9E","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2630,"^>5","^>0","^9",2630,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"~$missing-uses",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2637,"^8",7,"^9",2637,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["~$uses","^1?"]]]]]],"^U","^2:","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^@@","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2637,"^>5",["^Q",[null,"^>@","^>A"]],"^9",2637,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^@@","^1?"]]]]]],"~$get-macroexpand-check-var",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3842,"^8",12,"^9",3842,"^:",37,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"^U","^9<","^6","cljs/analyzer.cljc","^:",37,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",6,"^>4",false,"^7",3842,"^>5",["^Q",["^>A","^>I"]],"^9",3842,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"~$missing-use?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2611,"^8",7,"^9",2611,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["~$lib","^>M","^>D"]]]]]],"^U","^2=","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^@C","^>M","^>D"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2611,"^>5","^>0","^9",2611,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^@C","^>M","^>D"]]]]]],"~$hex-format",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",499,"^8",8,"^9",499,"^:",18,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$s","~$pad"]]]]]],"^>9",true,"^U","^3F","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["~$s","^@E"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",499,"^>5","^1@","^9",499,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$s","^@E"]]]]]],"~$es5-allowed",["^ ","^U","^3L","^6","cljs/analyzer.cljc","^7",200,"^8",1,"^9",200,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",200,"^8",6,"^9",200,"^:",17],"^=[","^?="],"~$source-info->error-data",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",663,"^8",8,"^9",663,"^:",31,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","~:keys",["~$file","~$line","~$column"]]]]]]]],"^>9",true,"^U","^3V","^6","cljs/analyzer.cljc","^:",31,"^>1",["^1J",[["~$p__46531"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",663,"^>5","^>H","^9",663,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^@I","^@J","^@K"]]]]]]]],"~$get-spec-vars",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4590,"^8",13,"^9",4590,"^:",26,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"^>9",true,"^U","^9S","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",6,"^>4",false,"^7",4590,"^>5",["^Q",["^>H","^>I"]],"^9",4590,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"~$analyze",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4215,"^8",7,"^9",4215,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]]]],"^?1","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]],"^=Y",["^1J",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]],"^>3",["^1J",[null,null,null]]]],"^U","^3S","^6","cljs/analyzer.cljc","^:",14,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]],"^=Y",["^1J",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]],"^>3",["^1J",[null,null,null]]],"^>1",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false]],"^7",4215,"^9",4215,"^>6",4,"^>7",true,"^=Y",["^1J",[["^1?","^>T"],["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]],"^?1","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set."],"~$used?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3784,"^8",7,"^9",3784,"^:",12,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^=[","^>0"],"^U","^3N","^6","cljs/analyzer.cljc","^:",12,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3784,"^>5","^>0","^9",3784,"^>6",2,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]]],"~$node-module-dep?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",795,"^8",7,"^9",795,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^?S"]]]]],"^=[","^>0"],"^U","^9P","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^?S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",795,"^>5","^>0","^9",795,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?S"]]]]]],"~$parse-type",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3262,"^8",7,"^9",3262,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^?@","^1?",["~$_","~$tsym","~$fields","~$pmasks","~$body","^1O","^>T"]]]]]]],"^U","^54","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^?@","^1?","~$p__47128"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3262,"^>5","^>H","^9",3262,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?@","^1?",["~$_","^@R","^@S","^@T","^@U","^1O","^>T"]]]]]]],"~$gets",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",206,"^8",7,"^9",206,"^:",11,"^=Y",["^1J",["^=Z",["^1J",[["~$m","~$k0","~$k1"],["~$m","^@X","^@Y","~$k2"],["~$m","^@X","^@Y","^@Z","~$k3"]]]]],"^>E",["^ ","^>4",false,"^>F",5,"^>6",5,"^>1",[["~$m","^@X","^@Y"],["~$m","^@X","^@Y","^@Z"],["~$m","^@X","^@Y","^@Z","^@["]],"^=Y",["^1J",[["~$m","^@X","^@Y"],["~$m","^@X","^@Y","^@Z"],["~$m","^@X","^@Y","^@Z","^@["]]],"^>3",["^1J",[null,null,null]]]],"^U","^6=","^6","cljs/analyzer.cljc","^:",11,"^>E",["^ ","^>4",false,"^>F",5,"^>6",5,"^>1",[["~$m","^@X","^@Y"],["~$m","^@X","^@Y","^@Z"],["~$m","^@X","^@Y","^@Z","^@["]],"^=Y",["^1J",[["~$m","^@X","^@Y"],["~$m","^@X","^@Y","^@Z"],["~$m","^@X","^@Y","^@Z","^@["]]],"^>3",["^1J",[null,null,null]]],"^>1",[["~$m","^@X","^@Y"],["~$m","^@X","^@Y","^@Z"],["~$m","^@X","^@Y","^@Z","^@["]],"^>2",null,"^>F",5,"^>3",["^1J",[null,null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",3,"^>4",false,"^=[",["^Q",["^>A","^>I"]]],["^ ","^>F",4,"^>4",false,"^=[",["^Q",["^>A","^>I"]]],["^ ","^>F",5,"^>4",false,"^=[",["^Q",["^>A","^>I"]]]],"^7",206,"^9",206,"^>6",5,"^>7",true,"^=Y",["^1J",[["~$m","^@X","^@Y"],["~$m","^@X","^@Y","^@Z"],["~$m","^@X","^@Y","^@Z","^@["]]]],"~$check-rename-macros-inferring-missing",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2700,"^8",7,"^9",2700,"^:",44,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?A","~$renames"],"^1O","~$ast"],"^1?"]]]]]],"^U","^59","^6","cljs/analyzer.cljc","^:",44,"^>1",["^1J",[["~$p__46972","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2700,"^>5",["^Q",["^>@","^>A"]],"^9",2700,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?A","^A1"],"^1O","^A2"],"^1?"]]]]]],"~$->t_cljs$analyzer46515",["^ ","^=X",null,"^5",["^ ","~:anonymous",true,"~:protocols",["^Q",["~$cljs.core/IMeta","~$cljs.core/IDeref","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^Q",["^A7","^A8","^A9"]],"~:factory","~:positional","^=Y",["^1J",["^=Z",["^1J",[["~$meta46516"]]]]],"^?1","Positional factory function for cljs.analyzer/t_cljs$analyzer46515.","^6",null],"^A6",["^Q",["^A7","^A8","^A9"]],"^U","^8L","^6","cljs/analyzer.cljc","^>1",["^1J",[["^A="]]],"^>2",null,"^>3",["^1J",[null,null]],"^A5",true,"^8",6,"^>4",false,"^A;","^A<","^7",564,"^>5","^6A","^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^A="]]]]],"^A:",["^Q",["^A7","^A8","^A9"]],"^?1","Positional factory function for cljs.analyzer/t_cljs$analyzer46515."],"~$*allow-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1323,"^8",16,"^9",1323,"^:",26,"^?F",true],"^U","^8P","^6","cljs/analyzer.cljc","^:",26,"^8",1,"^?F",true,"^7",1323,"^9",1323,"^=[","^>A"],"~$analyze-const",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2419,"^8",7,"^9",2419,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^6D","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2419,"^>5","^>H","^9",2419,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$simple-predicate-induced-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1575,"^8",8,"^9",1575,"^:",36,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$test"]]]]],"^?1","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"^>9",true,"^U","^6G","^6","cljs/analyzer.cljc","^:",36,"^>1",["^1J",[["^1?","^AA"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1575,"^>5",["^Q",["^?9","^>I"]],"^9",1575,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"~$infer-invoke",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1416,"^8",7,"^9",1416,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^ ","~$f","~:fn","^@H",["^?0"],"^1O","~$e"]]]]]]],"^U","^5:","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^1?","~$p__46607"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1416,"^>5",["^Q",["^>A","^9Z","^>I"]],"^9",1416,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^ ","~$f","^AC","^@H",["^?0"],"^1O","~$e"]]]]]]],"~$*cljs-static-fns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",57,"^8",16,"^9",57,"^:",33,"^?F",true],"^U","^8S","^6","cljs/analyzer.cljc","^:",33,"^8",1,"^?F",true,"^7",57,"^9",57,"^=[","^>A"],"~$array-types",["^ ","^U","^5?","^6","cljs/analyzer.cljc","^7",3494,"^8",1,"^9",3494,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3494,"^8",6,"^9",3494,"^:",17],"^=[","^?="],"~$*check-alias-dupes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",56,"^8",16,"^9",56,"^:",35,"^?F",true],"^U","^5@","^6","cljs/analyzer.cljc","^:",35,"^8",1,"^?F",true,"^7",56,"^9",56,"^=[","^>A"],"~$macro-ns-name",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3037,"^8",7,"^9",3037,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^?A"]]]]]],"^U","^6Q","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^?A"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3037,"^>5",["^Q",[null,"^>A","^9Z"]],"^9",3037,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?A"]]]]]],"~$*reload-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",65,"^8",16,"^9",65,"^:",31,"^?F",true],"^U","^6P","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^?F",true,"^7",65,"^9",65,"^=[","^>A"],"~$compiler-options",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",171,"^8",7,"^9",171,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"^U","^6U","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",171,"^>5",["^Q",["^>A","^>I"]],"^9",171,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"~$resolve-existing-var",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1260,"^8",7,"^9",1260,"^:",27,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"^U","^5E","^6","cljs/analyzer.cljc","^:",27,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1260,"^>5","^>A","^9",1260,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"~$required?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1106,"^8",7,"^9",1106,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^1?"]]]]]],"^U","^5F","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["^1K","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1106,"^>5","^>0","^9",1106,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^1?"]]]]]],"~$node-like?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1053,"^8",7,"^9",1053,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[[],["^?B"]]]]],"^>E",["^ ","^>4",false,"^>F",1,"^>6",1,"^>1",[[],["^?B"]],"^=Y",["^1J",[[],["^?B"]]],"^>3",["^1J",[null,null]]]],"^U","^5C","^6","cljs/analyzer.cljc","^:",17,"^>E",["^ ","^>4",false,"^>F",1,"^>6",1,"^>1",[[],["^?B"]],"^=Y",["^1J",[[],["^?B"]]],"^>3",["^1J",[null,null]]],"^>1",[[],["^?B"]],"^>2",null,"^>F",1,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",0,"^>4",false,"^=[","^>A"],["^ ","^>F",1,"^>4",false,"^=[","^>0"]],"^7",1053,"^9",1053,"^>6",1,"^>7",true,"^=Y",["^1J",[[],["^?B"]]]],"~$parse-invoke*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3633,"^8",7,"^9",3633,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["~$f","~$&","^?0","^1O","^>T"]]]]]]],"^U","^5H","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^1?","~$p__47195"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3633,"^>5",["^Q",[null,"^>A","^>H"]],"^9",3633,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["~$f","~$&","^?0","^1O","^>T"]]]]]]],"~$*checked-arrays*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",55,"^8",16,"^9",55,"^:",32,"^?F",true],"^U","^4O","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^?F",true,"^7",55,"^9",55,"^=[","^>A"],"~$ast-children",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1779,"^8",7,"^9",1779,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^A2"]]]]]],"^U","^5L","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^A2"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1779,"^>5","^>A","^9",1779,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^A2"]]]]]],"~$loaded-js-ns?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",768,"^8",7,"^9",768,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$prefix"]]]]],"^?1","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.","^=[","^>0"],"^U","^7[","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^1?","^AS"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",768,"^>5","^>0","^9",768,"^>6",2,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AS"]]]]],"^?1","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked."],"~$analyze-vector",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3993,"^8",7,"^9",3993,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^80","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3993,"^>5","^>A","^9",3993,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$unwrap-quote",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1378,"^8",7,"^9",1378,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","~$expr"]]]]]]],"^U","^81","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["~$p__46600"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1378,"^>5",["^Q",[null,"^>A"]],"^9",1378,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","^AV"]]]]]]],"~$namespaces",["^ ","^U","^4M","^6","cljs/analyzer.cljc","^7",556,"^8",1,"^9",556,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",556,"^8",6,"^9",556,"^:",16],"^=[","^6A"],"~$predicate->tag",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1511,"^8",16,"^9",1511,"^:",30,"^>9",true],"^>9",true,"^U","^5Q","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^7",1511,"^9",1511,"^=[","^>H"],"~$record-with-field?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3623,"^8",8,"^9",3623,"^:",26,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^>?","~$field"]]]]]],"^>9",true,"^U","^4H","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["^>?","^A["]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3623,"^>5","^>0","^9",3623,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>?","^A["]]]]]],"~$elide-analyzer-meta",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4052,"^8",7,"^9",4052,"^:",26,"^=Y",["^1J",["^=Z",["^1J",[["~$m"]]]]]],"^U","^5R","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["~$m"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4052,"^>5",["^Q",["^>@","^>I"]],"^9",4052,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$m"]]]]]],"~$ns->relpath",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",231,"^8",10,"^9",231,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1K"],["^1K","~$ext"]]]]],"^?1","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^1K"],["^1K","^B2"]],"^=Y",["^1J",[["^1K"],["^1K","^B2"]]],"^>3",["^1J",[null,null]]]],"^U","^4S","^6","cljs/analyzer.cljc","^:",21,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^1K"],["^1K","^B2"]],"^=Y",["^1J",[["^1K"],["^1K","^B2"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1K"],["^1K","^B2"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",4,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[","^1@"]],"^7",231,"^9",231,"^>6",2,"^>7",true,"^=Y",["^1J",[["^1K"],["^1K","^B2"]]],"^?1","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs."],"~$compile-syntax-error",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",710,"^8",8,"^9",710,"^:",28,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$msg","~$symbol"]]]]]],"^>9",true,"^U","^4Q","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^1?","^B4","^B5"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",710,"^>5","~$cljs.core/ExceptionInfo","^9",710,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B4","^B5"]]]]]],"~$analyze-let-body",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2323,"^8",7,"^9",2323,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$context","^>S","~$recur-frames","~$loop-lets"]]]]]],"^U","^61","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^1?","^B8","^>S","^B9","^B:"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2323,"^9",2323,"^>6",5,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B8","^>S","^B9","^B:"]]]]]],"~$extern-pre",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1046,"^8",7,"^9",1046,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^>O"]]]]]],"^U","^68","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^>M","^>O"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1046,"^>5",["^Q",[null,"^>@","^>A"]],"^9",1046,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^>O"]]]]]],"~$get-col",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",594,"^8",7,"^9",594,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["~$x","^1?"]]]]]],"^U","^6:","^6","cljs/analyzer.cljc","^:",14,"^>1",["^1J",[["~$x","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",594,"^>5","^>A","^9",594,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x","^1?"]]]]]],"~$type-check-induced-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1592,"^8",8,"^9",1592,"^:",30,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"^>9",true,"^U","^8E","^6","cljs/analyzer.cljc","^:",30,"^>1",["^1J",[["^1?","^AA"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1592,"^>5",["^Q",["^?9","^>I"]],"^9",1592,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"~$basic-validate-ns-spec",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2722,"^8",7,"^9",2722,"^:",29,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$macros?","~$spec"]]]]]],"^U","^53","^6","cljs/analyzer.cljc","^:",29,"^>1",["^1J",[["^1?","^B?","^B@"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2722,"^>5","^>I","^9",2722,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B?","^B@"]]]]]],"~$*cljs-warnings*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",127,"^8",16,"^9",127,"^:",31,"^?F",true],"^U","^6>","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^?F",true,"^7",127,"^9",127,"^=[","^>A"],"~$alias->type",["^ ","^U","^6?","^6","cljs/analyzer.cljc","^7",941,"^8",1,"^9",941,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",941,"^8",6,"^9",941,"^:",17],"^=[","^>H"],"~$t_cljs$analyzer46515",["^ ","~:num-fields",1,"^A6",["^Q",["^A7","^A8","^A9"]],"^U","^6A","^6","cljs/analyzer.cljc","~:type",true,"^A5",true,"^8",6,"^7",564,"~:record",false,"^=[","~$function","^A:",["^Q",["^A7","^A8","^A9"]]],"~$analyzed?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3591,"^8",7,"^9",3591,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]],"^?1","Returns boolean if the form has already been marked as analyzed.","^=[","^>0"],"^U","^2N","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3591,"^>5","^>0","^9",3591,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]],"^?1","Returns boolean if the form has already been marked as analyzed."],"~$analyze-deps",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2572,"^8",7,"^9",2572,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^@C","~$deps","^1?"],["^@C","^BJ","^1?","^?B"]]]]],"^?1","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^@C","^BJ","^1?"],["^@C","^BJ","^1?","^?B"]],"^=Y",["^1J",[["^@C","^BJ","^1?"],["^@C","^BJ","^1?","^?B"]]],"^>3",["^1J",[null,null]]]],"^U","^2V","^6","cljs/analyzer.cljc","^:",19,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^@C","^BJ","^1?"],["^@C","^BJ","^1?","^?B"]],"^=Y",["^1J",[["^@C","^BJ","^1?"],["^@C","^BJ","^1?","^?B"]]],"^>3",["^1J",[null,null]]],"^>1",[["^@C","^BJ","^1?"],["^@C","^BJ","^1?","^?B"]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",3,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false]],"^7",2572,"^9",2572,"^>6",4,"^>7",true,"^=Y",["^1J",[["^@C","^BJ","^1?"],["^@C","^BJ","^1?","^?B"]]],"^?1","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces."],"~$array-type?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3497,"^8",7,"^9",3497,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]],"^=[","^>0"],"^U","^5<","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["~$t"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3497,"^>5","^>0","^9",3497,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]]],"~$dotted-symbol?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1002,"^8",7,"^9",1002,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"^U","^2S","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1002,"^>5","^>0","^9",1002,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"~$*cljs-macros-is-classpath*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",60,"^8",16,"^9",60,"^:",42,"^?F",true],"^U","^2Y","^6","cljs/analyzer.cljc","^:",42,"^8",1,"^?F",true,"^7",60,"^9",60,"^=[","^>A"],"~$*allow-redef*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1322,"^8",16,"^9",1322,"^:",29,"^?F",true],"^U","^6L","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^?F",true,"^7",1322,"^9",1322,"^=[","^>A"],"~$analyze-fn-method-body",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2028,"^8",7,"^9",2028,"^:",29,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^B9"]]]]]],"^U","^5G","^6","cljs/analyzer.cljc","^:",29,"^>1",["^1J",[["^1?","^>T","^B9"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2028,"^9",2028,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^B9"]]]]]],"~$infer-type",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4069,"^8",7,"^9",4069,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^ ","^@H",["^>?"],"^1O","^A2"],"~$_"]]]]]],"^U","^32","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^1?","~$p__47261","~$_"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4069,"^>5",["^Q",[null,"^>@","^>A"]],"^9",4069,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^ ","^@H",["^>?"],"^1O","^A2"],"~$_"]]]]]],"~$parse-import-spec",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2882,"^8",7,"^9",2882,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^BJ","^B@"]]]]]],"^U","^6R","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^1?","^BJ","^B@"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2882,"^>5","^>H","^9",2882,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^BJ","^B@"]]]]]],"~$clj-ns->cljs-ns",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2919,"^8",7,"^9",2919,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]],"^?1","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"^U","^33","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2919,"^>5",["^Q",[null,"^>A","^9Z"]],"^9",2919,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]],"^?1","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"~$constant-value?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1787,"^8",7,"^9",1787,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","^A2"]]]]]]],"^U","^3;","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["~$p__46728"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1787,"^>5",["^Q",["^>0","^>A"]],"^9",1787,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","^A2"]]]]]]],"~$dump-specs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4595,"^8",7,"^9",4595,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^1K"]]]]],"^?1","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"^U","^6S","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^1K"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4595,"^>5",["^Q",[null,"^>A"]],"^9",4595,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K"]]]]],"^?1","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"~$*fn-invoke-direct*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",58,"^8",16,"^9",58,"^:",34,"^?F",true],"^U","^34","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^?F",true,"^7",58,"^9",58,"^=[","^>A"],"~$use->require",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2792,"^8",7,"^9",2792,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^@C","~$&","~$filters","^1O","^B@"]]]]]]],"^U","^6V","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^1?","~$p__46980"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2792,"^>5","^>A","^9",2792,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^@C","~$&","^BY","^1O","^B@"]]]]]]],"~$inferred-use-macros",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2653,"^8",7,"^9",2653,"^:",26,"^=Y",["^1J",["^=Z",["^1J",[["~$use-macros","^1?"]]]]]],"^U","^6T","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["^C0","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2653,"^>5",["^Q",[null,"^>@","^>A"]],"^9",2653,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^C0","^1?"]]]]]],"~$error-data",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",701,"^8",8,"^9",701,"^:",18,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$phase"],["^1?","^C2","^B5"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^C2"],["^1?","^C2","^B5"]],"^=Y",["^1J",[["^1?","^C2"],["^1?","^C2","^B5"]]],"^>3",["^1J",[null,null]]]],"^>9",true,"^U","^37","^6","cljs/analyzer.cljc","^:",18,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^C2"],["^1?","^C2","^B5"]],"^=Y",["^1J",[["^1?","^C2"],["^1?","^C2","^B5"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?","^C2"],["^1?","^C2","^B5"]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[",["^Q",["^>A","^>I"]]]],"^7",701,"^9",701,"^>6",3,"^>7",true,"^=Y",["^1J",[["^1?","^C2"],["^1?","^C2","^B5"]]]],"~$analyze-symbol",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3728,"^8",7,"^9",3728,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Finds the var associated with sym"],"^U","^5M","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3728,"^>5",["^Q",["^>A","^>I"]],"^9",3728,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Finds the var associated with sym"],"~$truth-induced-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1612,"^8",8,"^9",1612,"^:",25,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Refine a tag to exclude clj-nil if the test is a local."],"^>9",true,"^U","^5K","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^1?","^AA"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1612,"^>5",["^Q",["^?9","^>I"]],"^9",1612,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Refine a tag to exclude clj-nil if the test is a local."],"~$confirm-var-exists",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",815,"^8",7,"^9",815,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AS","~$suffix"],["^1?","^AS","^C6","~$missing-fn"]]]]],"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^AS","^C6"],["^1?","^AS","^C6","^C7"]],"^=Y",["^1J",[["^1?","^AS","^C6"],["^1?","^AS","^C6","^C7"]]],"^>3",["^1J",[null,null]]]],"^U","^28","^6","cljs/analyzer.cljc","^:",25,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^AS","^C6"],["^1?","^AS","^C6","^C7"]],"^=Y",["^1J",[["^1?","^AS","^C6"],["^1?","^AS","^C6","^C7"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?","^AS","^C6"],["^1?","^AS","^C6","^C7"]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",3,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false,"^=[",["^Q",["^>A","^>I"]]]],"^7",815,"^9",815,"^>6",4,"^>7",true,"^=Y",["^1J",[["^1?","^AS","^C6"],["^1?","^AS","^C6","^C7"]]]],"~$analyze-keyword",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1338,"^8",7,"^9",1338,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]]],"^U","^5O","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1338,"^>5","^>H","^9",1338,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]]],"~$SENTINEL",["^ ","^U","^4K","^6","cljs/analyzer.cljc","^7",204,"^8",10,"^9",204,"^:",23,"^5",["^ ","^6","cljs/analyzer.cljc","^7",204,"^8",15,"^9",204,"^:",23],"^=[","~$object"],"~$analyze-let-bindings",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2317,"^8",7,"^9",2317,"^:",27,"^=Y",["^1J",["^=Z",["^1J",[["^>Q","^>R","^?@"]]]]]],"^U","^2@","^6","cljs/analyzer.cljc","^:",27,"^>1",["^1J",[["^>Q","^>R","^?@"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2317,"^9",2317,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>Q","^>R","^?@"]]]]]],"~$munge-global-export",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1013,"^8",7,"^9",1013,"^:",26,"^=Y",["^1J",["^=Z",["^1J",[["^?A"]]]]]],"^U","^5U","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["^?A"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1013,"^>5","^1@","^9",1013,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?A"]]]]]],"~$*loop-lets*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1321,"^8",16,"^9",1321,"^:",27,"^?F",true],"^U","^5S","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^?F",true,"^7",1321,"^9",1321,"^=[","^>A"],"~$->type-set",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",906,"^8",7,"^9",906,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]],"^?1","Ensures that a type tag is a set."],"^U","^5[","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["~$t"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",906,"^>5",["^Q",[null,"^?="]],"^9",906,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]],"^?1","Ensures that a type tag is a set."],"~$js-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",987,"^8",7,"^9",987,"^:",13,"^=Y",["^1J",["^=Z",["^1J",[["^?Y"],["^?Y","~$tag-type"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]]]]],"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^?Y"],["^?Y","^C@"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]],"^=Y",["^1J",[["^?Y"],["^?Y","^C@"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]]],"^>3",["^1J",[null,null,null,null]]]],"^U","^5W","^6","cljs/analyzer.cljc","^:",13,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^?Y"],["^?Y","^C@"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]],"^=Y",["^1J",[["^?Y"],["^?Y","^C@"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]]],"^>3",["^1J",[null,null,null,null]]],"^>1",[["^?Y"],["^?Y","^C@"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null,null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false,"^=[",["^Q",["^>A","^9Z","^>I"]]]],"^7",987,"^9",987,"^>6",4,"^>7",true,"^=Y",["^1J",[["^?Y"],["^?Y","^C@"],["^?Y","^C@","^?Z"],["^?Y","^C@","^?Z","^?["]]]],"^R",["^ ","^U","^4T","^6","cljs/analyzer.cljc","^7",185,"^8",1,"^9",185,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",185,"^8",6,"^9",185,"^:",17],"^=[","^?="],"~$*load-tests*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",63,"^8",16,"^9",63,"^:",28,"^?F",true],"^U","^63","^6","cljs/analyzer.cljc","^:",28,"^8",1,"^?F",true,"^7",63,"^9",63,"^=[","^>A"],"~$check-use-macros-inferring-missing",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2682,"^8",7,"^9",2682,"^:",41,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?A","^@@","^C0"],"^1O","^A2"],"^1?"]]]]]],"^U","^62","^6","cljs/analyzer.cljc","^:",41,"^>1",["^1J",[["~$p__46967","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2682,"^>5",["^Q",["^>@","^>A"]],"^9",2682,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?A","^@@","^C0"],"^1O","^A2"],"^1?"]]]]]],"~$canonicalize-type",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",914,"^8",7,"^9",914,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]]],"^U","^64","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["~$t"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",914,"^>5",["^Q",[null,"^>@","^>A","^9Z","^>I"]],"^9",914,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]]],"~$macroexpand-1*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3873,"^8",7,"^9",3873,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^2I","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3873,"^>5",["^Q",[null,"^>@","~$cljs.core/MetaFn","^>I"]],"^9",3873,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$var->sym",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3846,"^8",8,"^9",3846,"^:",16,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^>Y"]]]]]],"^>9",true,"^U","^2H","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["^>Y"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3846,"^>5","^>A","^9",3846,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>Y"]]]]]],"~$check-use-macros",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2669,"^8",7,"^9",2669,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^C0","^1?"],["^C0","^@?","^1?"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^C0","^1?"],["^C0","^@?","^1?"]],"^=Y",["^1J",[["^C0","^1?"],["^C0","^@?","^1?"]]],"^>3",["^1J",[null,null]]]],"^U","^4Z","^6","cljs/analyzer.cljc","^:",23,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^C0","^1?"],["^C0","^@?","^1?"]],"^=Y",["^1J",[["^C0","^1?"],["^C0","^@?","^1?"]]],"^>3",["^1J",[null,null]]],"^>1",[["^C0","^1?"],["^C0","^@?","^1?"]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[",["^Q",[null,"^>@","^>A"]]]],"^7",2669,"^9",2669,"^>6",3,"^>7",true,"^=Y",["^1J",[["^C0","^1?"],["^C0","^@?","^1?"]]]],"~$get-expander",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3830,"^8",7,"^9",3830,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^1?"]]]]],"^?1","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"^U","^5Z","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^>M","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3830,"^>5",["^Q",["^>A","^>I"]],"^9",3830,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^1?"]]]]],"^?1","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"~$analyze-js-star",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3554,"^8",7,"^9",3554,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$jsform","^?0","^>T"]]]]]],"^U","^7D","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^1?","^CK","^?0","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3554,"^9",3554,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^CK","^?0","^>T"]]]]]],"~$do-macroexpand-check",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3850,"^8",8,"^9",3850,"^:",28,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","~$mac-var"]]]]]],"^>9",true,"^U","^7I","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^1?","^>T","^CM"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3850,"^>5",["^Q",[null,"^>I"]],"^9",3850,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^CM"]]]]]],"~$build-dot-form",["^ ","^U","^;A","^6","cljs/analyzer.cljc","^7",3322,"^8",1,"^9",3322,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3322,"^8",11,"^9",3322,"^:",25],"^=[","^2Q"],"~$register-constant!",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",528,"^8",8,"^9",528,"^:",26,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$val"],["^1?","^CP"]]]]],"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^CP"],["^1?","^CP"]],"^=Y",["^1J",[["^CP"],["^1?","^CP"]]],"^>3",["^1J",[null,null]]]],"^>9",true,"^U","^7G","^6","cljs/analyzer.cljc","^:",26,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^CP"],["^1?","^CP"]],"^=Y",["^1J",[["^CP"],["^1?","^CP"]]],"^>3",["^1J",[null,null]]],"^>1",[["^CP"],["^1?","^CP"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[",["^Q",[null,"^>A"]]]],"^7",528,"^9",528,"^>6",2,"^>7",true,"^=Y",["^1J",[["^CP"],["^1?","^CP"]]]],"~$js-star-interp",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3448,"^8",7,"^9",3448,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$s"]]]]]],"^U","^;@","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1?","~$s"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3448,"^>5","^>@","^9",3448,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$s"]]]]]],"~$*recur-frames*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1320,"^8",16,"^9",1320,"^:",30,"^?F",true],"^U","^7O","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^?F",true,"^7",1320,"^9",1320,"^=[","^>A"],"~$analyze-fn-methods-pass2*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2089,"^8",7,"^9",2089,"^:",32,"^=Y",["^1J",["^=Z",["^1J",[["~$menv","^?N","^?O","~$meths"]]]]]],"^U","^7U","^6","cljs/analyzer.cljc","^:",32,"^>1",["^1J",[["^CT","^?N","^?O","^CU"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2089,"^>5","^>@","^9",2089,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^CT","^?N","^?O","^CU"]]]]]],"^S",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3933,"^8",7,"^9",3933,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]],"^?1","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"^U","^7S","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3933,"^9",3933,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]],"^?1","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"~$resolve-macro-var",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1278,"^8",7,"^9",1278,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"^U","^8Y","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1278,"^>5",["^Q",[null,"^>A","^>I"]],"^9",1278,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"~$analyze-let-binding-init",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2261,"^8",7,"^9",2261,"^:",31,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$init","^B:"]]]]]],"^U","^;Q","^6","cljs/analyzer.cljc","^:",31,"^>1",["^1J",[["^1?","^CX","^B:"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2261,"^9",2261,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^CX","^B:"]]]]]],"~$infer-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1428,"^8",7,"^9",1428,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$e"]]]]],"^?1","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"^U","^;O","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["^1?","~$e"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1428,"^>5",["^Q",[null,"^>A"]],"^9",1428,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$e"]]]]],"^?1","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"~$canonicalize-import-specs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2968,"^8",7,"^9",2968,"^:",32,"^=Y",["^1J",["^=Z",["^1J",[["~$specs"]]]]]],"^U","^7Z","^6","cljs/analyzer.cljc","^:",32,"^>1",["^1J",[["^C["]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2968,"^9",2968,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^C["]]]]]],"~$analyze-form-seq",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4680,"^8",7,"^9",4680,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["~$forms"],["^D1","^?B"],["^D1","^?B","~$return-last?"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^D1"],["^D1","^?B"],["^D1","^?B","^D2"]],"^=Y",["^1J",[["^D1"],["^D1","^?B"],["^D1","^?B","^D2"]]],"^>3",["^1J",[null,null,null]]]],"^U","^:Q","^6","cljs/analyzer.cljc","^:",23,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^D1"],["^D1","^?B"],["^D1","^?B","^D2"]],"^=Y",["^1J",[["^D1"],["^D1","^?B"],["^D1","^?B","^D2"]]],"^>3",["^1J",[null,null,null]]],"^>1",[["^D1"],["^D1","^?B"],["^D1","^?B","^D2"]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false]],"^7",4680,"^9",4680,"^>6",3,"^>7",true,"^=Y",["^1J",[["^D1"],["^D1","^?B"],["^D1","^?B","^D2"]]]],"~$analyze-let-body*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2320,"^8",7,"^9",2320,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B8","^>S"]]]]]],"^U","^7X","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^1?","^B8","^>S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2320,"^>5","^>A","^9",2320,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B8","^>S"]]]]]],"~$analyze-js-star*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3525,"^8",7,"^9",3525,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^CK","^?0","^>T"]]]]]],"^U","^6[","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^1?","^CK","^?0","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3525,"^>5","^>H","^9",3525,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^CK","^?0","^>T"]]]]]],"~$inferred-rename-macros",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2658,"^8",7,"^9",2658,"^:",29,"^=Y",["^1J",["^=Z",["^1J",[["~$rename-macros","^1?"]]]]]],"^U","^84","^6","cljs/analyzer.cljc","^:",29,"^>1",["^1J",[["^D6","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2658,"^>5",["^Q",[null,"^>@","^>A"]],"^9",2658,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^D6","^1?"]]]]]],"~$parse-ns-error-msg",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2719,"^8",7,"^9",2719,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^B@","^B4"]]]]]],"^U","^73","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^B@","^B4"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2719,"^>5","^1@","^9",2719,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^B@","^B4"]]]]]],"~$missing-use-macro?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2624,"^8",7,"^9",2624,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^@C","^>M"]]]]]],"^U","^88","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^@C","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2624,"^>5",["^Q",["^>0","^>I"]],"^9",2624,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^@C","^>M"]]]]]],"~$record-ns+name",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4029,"^8",7,"^9",4029,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"^U","^76","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4029,"^>5","^50","^9",4029,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"~$analyzed",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3583,"^8",7,"^9",3583,"^:",15,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]],"^?1","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"^U","^8:","^6","cljs/analyzer.cljc","^:",15,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3583,"^>5",["^Q",["^>@","^>A","^CF","^>I"]],"^9",3583,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]],"^?1","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"~$resolve-symbol",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4257,"^8",7,"^9",4257,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"^U","^:S","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4257,"^>5",["^Q",[null,"^>A"]],"^9",4257,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"~$missing-renames",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2643,"^8",7,"^9",2643,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^A1","^1?"]]]]]],"^U","^7<","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^A1","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2643,"^>5",["^Q",[null,"^>@","^>A"]],"^9",2643,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^A1","^1?"]]]]]],"~$resolve*",["^ ","^U","^8@","^6","cljs/analyzer.cljc","^7",1038,"^8",1,"^9",1038,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1038,"^8",11,"^9",1038,"^:",19],"^=[","^2Q"],"~$default-passes",["^ ","^U","^8>","^6","cljs/analyzer.cljc","^7",4200,"^8",1,"^9",4200,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4200,"^8",6,"^9",4200,"^:",20],"^=[","^?9"],"~$*cljs-macros-path*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",59,"^8",16,"^9",59,"^:",34,"^?F",true],"^U","^:Y","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^?F",true,"^7",59,"^9",59,"^=[","^>A"],"~$confirm-var-exist-warning",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",753,"^8",7,"^9",753,"^:",32,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AS","^C6"]]]]]],"^U","^8B","^6","cljs/analyzer.cljc","^:",32,"^>1",["^1J",[["^1?","^AS","^C6"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",753,"^>5","^BG","^9",753,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AS","^C6"]]]]]],"~$repeat-char",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",493,"^8",8,"^9",493,"^:",19,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$c","~$n"]]]]]],"^>9",true,"^U","^7C","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["~$c","~$n"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",493,"^9",493,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$c","~$n"]]]]]],"~$unchecked-arrays?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",168,"^8",7,"^9",168,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"^U","^7B","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",168,"^>5","^>0","^9",168,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"~$core-ns?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1808,"^8",8,"^9",1808,"^:",16,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$ns-sym"]]]]]],"^>9",true,"^U","^:X","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["^DD"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1808,"^>5","^>0","^9",1808,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^DD"]]]]]],"~$analyze-dot",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3374,"^8",7,"^9",3374,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?6","^A[","~$member+","^>T"]]]]]],"^U","^:[","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^1?","^?6","^A[","^DF","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3374,"^9",3374,"^>6",5,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?6","^A[","^DF","^>T"]]]]]],"~$analyze-do-statements",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2235,"^8",7,"^9",2235,"^:",28,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>S"]]]]]],"^U","^8J","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^1?","^>S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2235,"^9",2235,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>S"]]]]]],"~$get-line",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",591,"^8",7,"^9",591,"^:",15,"^=Y",["^1J",["^=Z",["^1J",[["~$x","^1?"]]]]]],"^U","^5=","^6","cljs/analyzer.cljc","^:",15,"^>1",["^1J",[["~$x","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",591,"^>5","^>A","^9",591,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x","^1?"]]]]]],"~$analyze-do-statements*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2232,"^8",7,"^9",2232,"^:",29,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>S"]]]]]],"^U","^7E","^6","cljs/analyzer.cljc","^:",29,"^>1",["^1J",[["^1?","^>S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2232,"^>5","^>@","^9",2232,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>S"]]]]]],"~$analyze-seq",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3950,"^8",7,"^9",3950,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]]]],"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]],"^=Y",["^1J",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]],"^>3",["^1J",[null,null]]]],"^U","^8T","^6","cljs/analyzer.cljc","^:",18,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]],"^=Y",["^1J",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",3,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false,"^=[","^>A"]],"^7",3950,"^9",3950,"^>6",4,"^>7",true,"^=Y",["^1J",[["^1?","^>T","^?A"],["^1?","^>T","^?A","^?B"]]]],"~$desugar-dotted-expr",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3701,"^8",7,"^9",3701,"^:",26,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","^AV"]]]]]]],"^U","^58","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["~$p__47207"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3701,"^9",3701,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","^AV"]]]]]]],"~$private-var-access-exceptions",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1084,"^8",16,"^9",1084,"^:",45,"^>9",true],"^>9",true,"^U","^8Q","^6","cljs/analyzer.cljc","^:",45,"^8",1,"^7",1084,"^9",1084,"^=[","^?=","^?1","Specially-treated symbols for which we don't trigger :private-var-access warnings."],"~$all-values?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3600,"^8",8,"^9",3600,"^:",19,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^>S"]]]]],"^=[","^>0"],"^>9",true,"^U","^57","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^>S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3600,"^>5","^>0","^9",3600,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>S"]]]]]],"~$find-def-clash",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3026,"^8",7,"^9",3026,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^1K","~$segments"]]]]]],"^U","^8W","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1?","^1K","^DP"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3026,"^>5","^>I","^9",3026,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^1K","^DP"]]]]]],"~$has-error-data?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",728,"^8",7,"^9",728,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["~$ex"]]]]],"^=[","^>0"],"^U","^55","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^DR"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",728,"^>5","^>0","^9",728,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^DR"]]]]]],"~$get-expander*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3805,"^8",7,"^9",3805,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^1?"]]]]]],"^U","^8R","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^>M","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3805,"^>5",["^Q",["^>A","^>I"]],"^9",3805,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M","^1?"]]]]]],"~$fn-name-var",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2070,"^8",7,"^9",2070,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?N","^?A"]]]]]],"^U","^92","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^1?","^?N","^?A"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2070,"^>5",["^Q",["^>A","^>I"]],"^9",2070,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?N","^?A"]]]]]],"~$munge-node-lib",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1009,"^8",7,"^9",1009,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^?A"]]]]]],"^U","^8Z","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^?A"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1009,"^>5","^1@","^9",1009,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?A"]]]]]],"~$internal-js-module-exists?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",778,"^8",8,"^9",778,"^:",34,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$js-module-index","^?S"]]]]]],"^>9",true,"^U","^95","^6","cljs/analyzer.cljc","^:",34,"^>1",["^1J",[["^DW","^?S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",778,"^>5","^>0","^9",778,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^DW","^?S"]]]]]],"~$*load-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",64,"^8",16,"^9",64,"^:",29,"^?F",true],"^U","^7P","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^?F",true,"^7",64,"^9",64,"^=[","^>A"],"~$add-types",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",928,"^8",7,"^9",928,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[[],["~$t1"],["^DZ","~$t2"],["^DZ","^D[","~$&","~$ts"]]]]],"^?1","Produces a union of types.","^>E",["^ ","^>4",true,"^>F",2,"^>6",2,"^>1",[[],["^DZ"],["^DZ","^D["]],"^=Y",["^1J",[[],["^DZ"],["^DZ","^D["],["^DZ","^D[","~$&","^E0"]]],"^>3",["^1J",[null,null,null,null]]]],"^U","^5B","^6","cljs/analyzer.cljc","^:",16,"^>E",["^ ","^>4",true,"^>F",2,"^>6",2,"^>1",[[],["^DZ"],["^DZ","^D["]],"^=Y",["^1J",[[],["^DZ"],["^DZ","^D["],["^DZ","^D[","~$&","^E0"]]],"^>3",["^1J",[null,null,null,null]]],"^>1",[[],["^DZ"],["^DZ","^D["]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null,null,null]],"^8",1,"^>4",true,"^>G",[["^ ","^>F",0,"^>4",false,"^=[","^9Z"],["^ ","^>F",1,"^>4",false],["^ ","^>F",2,"^>4",false,"^=[",["^Q",[null,"^>@","^>A","^9Z","^>I"]]],["^ ","^>F",2,"^>4",true,"^=[","^>A"]],"^7",928,"^9",928,"^>6",2,"^>7",true,"^=Y",["^1J",[[],["^DZ"],["^DZ","^D["],["^DZ","^D[","~$&","^E0"]]],"^?1","Produces a union of types."],"~$excluded?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3778,"^8",7,"^9",3778,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^=[","^>0"],"^U","^5>","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3778,"^>5","^>0","^9",3778,"^>6",2,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]]],"~$empty-env",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",649,"^8",7,"^9",649,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[[]]]]],"^?1","Construct an empty analysis environment. Required to analyze forms."],"^U","^7W","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",649,"^9",649,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]],"^?1","Construct an empty analysis environment. Required to analyze forms."],"~$public-name?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",881,"^8",7,"^9",881,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^>M"]]]]],"^?1","Is sym public?","^=[","^>0"],"^U","^6X","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^1K","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",881,"^>5","^>0","^9",881,"^>6",2,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^>M"]]]]],"^?1","Is sym public?"],"~$default-warning-handler",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",477,"^8",7,"^9",477,"^:",30,"^=Y",["^1J",["^=Z",["^1J",[["~$warning-type","^1?","~$extra"]]]]]],"^U","^70","^6","cljs/analyzer.cljc","^:",30,"^>1",["^1J",[["^E5","^1?","^E6"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",477,"^>5",["^Q",[null,"^>I"]],"^9",477,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^E5","^1?","^E6"]]]]]],"~$resolve-ns-alias",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",841,"^8",7,"^9",841,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?A"],["^1?","^?A","~$not-found"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^?A"],["^1?","^?A","^E8"]],"^=Y",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]],"^>3",["^1J",[null,null]]]],"^U","^83","^6","cljs/analyzer.cljc","^:",23,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^?A"],["^1?","^?A","^E8"]],"^=Y",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?","^?A"],["^1?","^?A","^E8"]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[",["^Q",[null,"^>A"]]]],"^7",841,"^9",841,"^>6",3,"^>7",true,"^=Y",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]]],"~$intern-macros",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",597,"^8",7,"^9",597,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["^1K"],["^1K","~$reload"]]]]],"^?1","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^1K"],["^1K","^E:"]],"^=Y",["^1J",[["^1K"],["^1K","^E:"]]],"^>3",["^1J",[null,null]]]],"^U","^71","^6","cljs/analyzer.cljc","^:",20,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^1K"],["^1K","^E:"]],"^=Y",["^1J",[["^1K"],["^1K","^E:"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1K"],["^1K","^E:"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[","^>A"],["^ ","^>F",2,"^>4",false,"^=[",["^Q",[null,"^>A","^>I"]]]],"^7",597,"^9",597,"^>6",2,"^>7",true,"^=Y",["^1J",[["^1K"],["^1K","^E:"]]],"^?1","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment."],"~$const-expr->constant-value",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1793,"^8",7,"^9",1793,"^:",33,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","~$e"]]]]]]],"^U","^72","^6","cljs/analyzer.cljc","^:",33,"^>1",["^1J",[["~$p__46732"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1793,"^9",1793,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[["^ ","^@H",["^?@"],"^1O","~$e"]]]]]]],"~$*macro-infer*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",66,"^8",16,"^9",66,"^:",29,"^?F",true],"^U","^6Y","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^?F",true,"^7",66,"^9",66,"^=[","^>A"],"~$gen-constant-id",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",508,"^8",7,"^9",508,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["~$value"]]]]]],"^U","^87","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^E?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",508,"^>5",["^Q",["^>A","^9Z"]],"^9",508,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^E?"]]]]]],"~$lib&sublib",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",760,"^8",7,"^9",760,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^@C"]]]]],"^?1","If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property."],"^U","^8=","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^@C"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",760,"^>5","^>@","^9",760,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^@C"]]]]],"^?1","If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property."],"~$macro-autoload-ns?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2904,"^8",7,"^9",2904,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^>T"]]]]],"^?1","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.","^=[","^>0"],"^U","^8<","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2904,"^>5","^>0","^9",2904,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>T"]]]]],"^?1","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true."],"~$get-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1343,"^8",7,"^9",1343,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["~$e"]]]]]],"^U","^8?","^6","cljs/analyzer.cljc","^:",14,"^>1",["^1J",[["~$e"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1343,"^>5","^>A","^9",1343,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$e"]]]]]],"~$implicit-nses",["^ ","^U","^7=","^6","cljs/analyzer.cljc","^7",744,"^8",1,"^9",744,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",744,"^8",6,"^9",744,"^:",19],"^=[","^?="],"~$valid-proto",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1769,"^8",7,"^9",1769,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"^U","^4P","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1769,"^>5",["^Q",["^9Z","^>I"]],"^9",1769,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"~$normalize-js-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",897,"^8",7,"^9",897,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"^U","^7@","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",897,"^>5",["^Q",[null,"^>@","^CF","^>I"]],"^9",897,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"~$analyze-list",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3987,"^8",7,"^9",3987,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^;C","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3987,"^>5","^>A","^9",3987,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$warning",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",689,"^8",7,"^9",689,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["^E5","^1?","^E6"]]]]]],"^U","^:0","^6","cljs/analyzer.cljc","^:",14,"^>1",["^1J",[["^E5","^1?","^E6"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",689,"^>5","^>I","^9",689,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^E5","^1?","^E6"]]]]]],"~$implicit-import?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",746,"^8",7,"^9",746,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AS","^C6"]]]]],"^=[","^>0"],"^U","^:1","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^1?","^AS","^C6"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",746,"^>5","^>0","^9",746,"^>6",3,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AS","^C6"]]]]]],"~$missing-use-macros",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2648,"^8",7,"^9",2648,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^C0","^1?"]]]]]],"^U","^40","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^C0","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2648,"^>5",["^Q",[null,"^>@","^>A"]],"^9",2648,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^C0","^1?"]]]]]],"~$analyze*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4204,"^8",7,"^9",4204,"^:",15,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^?A","^?B"]]]]]],"^U","^;D","^6","cljs/analyzer.cljc","^:",15,"^>1",["^1J",[["^1?","^>T","^?A","^?B"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4204,"^>5",["^Q",[null,"^>A"]],"^9",4204,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^?A","^?B"]]]]]],"~$-cljs-macros-loaded",["^ ","^U","^43","^6","cljs/analyzer.cljc","^7",125,"^8",1,"^9",125,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",125,"^8",6,"^9",125,"^:",25],"^=[","~$cljs.core/Atom"],"~$check-uses",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2661,"^8",7,"^9",2661,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^@@","^1?"]]]]]],"^U","^:4","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^@@","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2661,"^>5","^>I","^9",2661,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^@@","^1?"]]]]]],"~$set-test-induced-tags",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1624,"^8",8,"^9",1624,"^:",29,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"^>9",true,"^U","^:5","^6","cljs/analyzer.cljc","^:",29,"^>1",["^1J",[["^1?","^AA"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1624,"^>5",["^Q",[null,"^>@","^>A"]],"^9",1624,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^AA"]]]]],"^?1","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"~$find-matching-method",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1350,"^8",7,"^9",1350,"^:",27,"^=Y",["^1J",["^=Z",["^1J",[["~$f","~$params"]]]]]],"^U","^45","^6","cljs/analyzer.cljc","^:",27,"^>1",["^1J",[["~$f","^EP"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1350,"^>5",["^Q",["^>A","^>I"]],"^9",1350,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$f","^EP"]]]]]],"~$*private-var-access-nowarn*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",69,"^8",16,"^9",69,"^:",43,"^?F",true],"^U","^:>","^6","cljs/analyzer.cljc","^:",43,"^8",1,"^?F",true,"^7",69,"^9",69,"^=[","^>A"],"~$invoke-arg-type-validators",["^ ","^U","^:9","^6","cljs/analyzer.cljc","^7",4130,"^8",1,"^9",4130,"^:",32,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4130,"^8",6,"^9",4130,"^:",32],"^=[","^>H"],"~$*cljs-file*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",54,"^8",16,"^9",54,"^:",27,"^?F",true],"^U","^:?","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^?F",true,"^7",54,"^9",54,"^=[","^>A"],"~$*file-defs*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",68,"^8",16,"^9",68,"^:",27,"^?F",true],"^U","^:=","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^?F",true,"^7",68,"^9",68,"^=[","^>A"],"~$infer-if",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1384,"^8",7,"^9",1384,"^:",15,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$e"]]]]]],"^U","^;S","^6","cljs/analyzer.cljc","^:",15,"^>1",["^1J",[["^1?","~$e"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1384,"^>5",["^Q",[null,"^>@","^>A","^9Z"]],"^9",1384,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","~$e"]]]]]],"~$topo-sort",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",239,"^8",10,"^9",239,"^:",19,"^=Y",["^1J",["^=Z",["^1J",[["~$x","~$get-deps"],["~$x","~$depth","~$state","~$memo-get-deps"]]]]],"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["~$x","^EW"],["~$x","^EX","^EY","^EZ"]],"^=Y",["^1J",[["~$x","^EW"],["~$x","^EX","^EY","^EZ"]]],"^>3",["^1J",[null,null]]]],"^U","^4D","^6","cljs/analyzer.cljc","^:",19,"^>E",["^ ","^>4",false,"^>F",4,"^>6",4,"^>1",[["~$x","^EW"],["~$x","^EX","^EY","^EZ"]],"^=Y",["^1J",[["~$x","^EW"],["~$x","^EX","^EY","^EZ"]]],"^>3",["^1J",[null,null]]],"^>1",[["~$x","^EW"],["~$x","^EX","^EY","^EZ"]],"^>2",null,"^>F",4,"^>3",["^1J",[null,null]],"^8",4,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",4,"^>4",false,"^=[",["^Q",["^50","^>I"]]]],"^7",239,"^9",239,"^>6",4,"^>7",true,"^=Y",["^1J",[["~$x","^EW"],["~$x","^EX","^EY","^EZ"]]]],"~$*verbose*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",123,"^8",16,"^9",123,"^:",25,"^?F",true],"^U","^:A","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^?F",true,"^7",123,"^9",123,"^=[","^>A"],"~$analyze-js-value",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4005,"^8",7,"^9",4005,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^4C","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4005,"^>5","^>H","^9",4005,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$ns->module-type",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1032,"^8",7,"^9",1032,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^1K"]]]]]],"^U","^9;","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^1K"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1032,"^>5",["^Q",["^4G","^>I"]],"^9",1032,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K"]]]]]],"~$source-info",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",669,"^8",7,"^9",669,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?"],["^?A","^1?"]]]]],"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^1?"],["^?A","^1?"]],"^=Y",["^1J",[["^1?"],["^?A","^1?"]]],"^>3",["^1J",[null,null]]]],"^U","^:L","^6","cljs/analyzer.cljc","^:",18,"^>E",["^ ","^>4",false,"^>F",2,"^>6",2,"^>1",[["^1?"],["^?A","^1?"]],"^=Y",["^1J",[["^1?"],["^?A","^1?"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?"],["^?A","^1?"]],"^>2",null,"^>F",2,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",1,"^>4",false,"^=[",["^Q",["^>A","^>I"]]],["^ ","^>F",2,"^>4",false,"^=[",["^Q",["^>A","^>H","^>I"]]]],"^7",669,"^9",669,"^>6",2,"^>7",true,"^=Y",["^1J",[["^1?"],["^?A","^1?"]]]],"~$analyze-fn-method-param",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2000,"^8",7,"^9",2000,"^:",30,"^=Y",["^1J",["^=Z",["^1J",[["^1?"]]]]]],"^U","^9?","^6","cljs/analyzer.cljc","^:",30,"^>1",["^1J",[["^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2000,"^>5","^BG","^9",2000,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?"]]]]]],"~$repl-self-require?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4082,"^8",8,"^9",4082,"^:",26,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^BJ"]]]]]],"^>9",true,"^U","^9G","^6","cljs/analyzer.cljc","^:",26,"^>1",["^1J",[["^1?","^BJ"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4082,"^>5",["^Q",["^>A","^>I"]],"^9",4082,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^BJ"]]]]]],"~$analyze-set",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3999,"^8",7,"^9",3999,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"^U","^9=","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^1?","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3999,"^>5","^>A","^9",3999,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T"]]]]]],"~$numeric-type?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3472,"^8",7,"^9",3472,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]],"^=[","^>0"],"^U","^9F","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["~$t"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3472,"^>5","^>0","^9",3472,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$t"]]]]]],"~$munge-path",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",227,"^8",10,"^9",227,"^:",20,"^=Y",["^1J",["^=Z",["^1J",[["~$ss"]]]]]],"^U","^99","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^F8"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",4,"^>4",false,"^7",227,"^>5",["^Q",["^>A","^1@","^9Z"]],"^9",227,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^F8"]]]]]],"~$ast?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",254,"^8",7,"^9",254,"^:",11,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]],"^=[","^>0"],"^U","^3?","^6","cljs/analyzer.cljc","^:",11,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",254,"^>5","^>0","^9",254,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"~$checked-arrays",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",177,"^8",7,"^9",177,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[[]]]]],"^?1","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"^U","^3D","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",177,"^>5",["^Q",["^>A","^>I"]],"^9",177,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]],"^?1","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"~$elide-env",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1772,"^8",7,"^9",1772,"^:",16,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^A2","^?B"]]]]]],"^U","^9H","^6","cljs/analyzer.cljc","^:",16,"^>1",["^1J",[["^1?","^A2","^?B"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1772,"^>5",["^Q",["^>@","^>I"]],"^9",1772,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^A2","^?B"]]]]]],"~$js-module-exists?*",["^ ","^U","^:R","^6","cljs/analyzer.cljc","^7",789,"^8",1,"^9",789,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",789,"^8",6,"^9",789,"^:",24],"^=[","^BG"],"~$parse-require-spec",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2826,"^8",7,"^9",2826,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B?","^BJ","~$aliases","^B@"]]]]]],"^U","^;2","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^1?","^B?","^BJ","^F>","^B@"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2826,"^>5",["^Q",["^>A","^>I"]],"^9",2826,"^>6",5,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B?","^BJ","^F>","^B@"]]]]]],"~$analyze-wrap-meta",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4058,"^8",7,"^9",4058,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^AV"]]]]]],"^U","^9M","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^AV"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4058,"^>5",["^Q",[null,"^>H"]],"^9",4058,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^AV"]]]]]],"~$property-symbol?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3309,"^8",16,"^9",3309,"^:",32,"^>9",true],"^>9",true,"^U","^3O","^6","cljs/analyzer.cljc","^:",32,"^>1",["^1J",[["~$p1__47134#"]]],"^>2",null,"^>3",["^1J",[]],"^8",1,"^>4",false,"^7",3309,"^>5","^>0","^9",3309,"^>6",1,"^>7",true,"^=Y",null],"~$analyze-js-star-args",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3515,"^8",8,"^9",3515,"^:",28,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$js-op","^1?","^?0"]]]]]],"^>9",true,"^U","^3I","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^FC","^1?","^?0"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3515,"^>5",["^Q",["^>A","^>I"]],"^9",3515,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^FC","^1?","^?0"]]]]]],"~$get-js-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3441,"^8",7,"^9",3441,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^>T"]]]]]],"^U","^9R","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3441,"^>5",["^Q",["^>A","^9Z","^>I"]],"^9",3441,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>T"]]]]]],"~$parse",["^ ","^U","^9V","^6","cljs/analyzer.cljc","^7",1458,"^8",1,"^9",1458,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1458,"^8",11,"^9",1458,"^:",16],"^=[","^2Q"],"~$*analyze-deps*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",62,"^8",16,"^9",62,"^:",30,"^?F",true],"^U","^;6","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^?F",true,"^7",62,"^9",62,"^=[","^>A"],"~$analyze-let-bindings*",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2272,"^8",7,"^9",2272,"^:",28,"^=Y",["^1J",["^=Z",["^1J",[["^>Q","^>R","^?@"]]]]]],"^U","^7F","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^>Q","^>R","^?@"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2272,"^>5","^?9","^9",2272,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>Q","^>R","^?@"]]]]]],"~$analysis-error?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",723,"^8",7,"^9",723,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^DR"]]]]],"^=[","^>0"],"^U","^;8","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^DR"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",723,"^>5","^>0","^9",723,"^>6",1,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^DR"]]]]]],"~$replace-env-pass",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1775,"^8",7,"^9",1775,"^:",23,"^=Y",["^1J",["^=Z",["^1J",[["~$new-env"]]]]]],"^U","^;7","^6","cljs/analyzer.cljc","^:",23,"^>1",["^1J",[["^FJ"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1775,"^>5","^BG","^9",1775,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^FJ"]]]]]],"~$valid-arity?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3605,"^8",8,"^9",3605,"^:",20,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^>:","^>;"]]]]],"^=[","^>0"],"^>9",true,"^U","^7J","^6","cljs/analyzer.cljc","^:",20,"^>1",["^1J",[["^>:","^>;"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3605,"^>5","^>0","^9",3605,"^>6",2,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>:","^>;"]]]]]],"~$parse-ns-excludes",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2752,"^8",7,"^9",2752,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?0"]]]]]],"^U","^;E","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^1?","^?0"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2752,"^>5",["^Q",[null,"^>A"]],"^9",2752,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?0"]]]]]],"~$analyze-fn-methods-pass2",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2092,"^8",7,"^9",2092,"^:",31,"^=Y",["^1J",["^=Z",["^1J",[["^CT","^?N","^?O","^CU"]]]]]],"^U","^;H","^6","cljs/analyzer.cljc","^:",31,"^>1",["^1J",[["^CT","^?N","^?O","^CU"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2092,"^>5","^>@","^9",2092,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^CT","^?N","^?O","^CU"]]]]]],"~$core-name?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",870,"^8",7,"^9",870,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Is sym visible from core in the current compilation namespace?","^=[","^>0"],"^U","^7N","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",870,"^>5","^>0","^9",870,"^>6",2,"^=[","^>0","^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]],"^?1","Is sym visible from core in the current compilation namespace?"],"~$get-let-tag",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2265,"^8",7,"^9",2265,"^:",18,"^=Y",["^1J",["^=Z",["^1J",[["^?A","~$init-expr"]]]]]],"^U","^7R","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^?A","^FP"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2265,"^>5","^>A","^9",2265,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?A","^FP"]]]]]],"~$specials",["^ ","^U","^;I","^6","cljs/analyzer.cljc","^7",1317,"^8",1,"^9",1317,"^:",14,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1317,"^8",6,"^9",1317,"^:",14],"^=[","^?="],"~$elide-irrelevant-meta",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4055,"^8",7,"^9",4055,"^:",28,"^=Y",["^1J",["^=Z",["^1J",[["~$m"]]]]]],"^U","^;F","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["~$m"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4055,"^>5",["^Q",["^>@","^>I"]],"^9",4055,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$m"]]]]]],"~$resolve-macro-ns-alias",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",848,"^8",7,"^9",848,"^:",29,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^?A"],["^1?","^?A","^E8"]],"^=Y",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]],"^>3",["^1J",[null,null]]]],"^U","^7Q","^6","cljs/analyzer.cljc","^:",29,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^?A"],["^1?","^?A","^E8"]],"^=Y",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?","^?A"],["^1?","^?A","^E8"]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[",["^Q",[null,"^>A"]]]],"^7",848,"^9",848,"^>6",3,"^>7",true,"^=Y",["^1J",[["^1?","^?A"],["^1?","^?A","^E8"]]]],"~$unsorted-map?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3579,"^8",8,"^9",3579,"^:",21,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"^>9",true,"^U","^;J","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["~$x"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3579,"^>5","^>0","^9",3579,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["~$x"]]]]]],"~$check-invoke-arg-types",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4142,"^8",7,"^9",4142,"^:",29,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^ ","^@H",["^?@"],"^1O","^A2"],"^?B"]]]]]],"^U","^;K","^6","cljs/analyzer.cljc","^:",29,"^>1",["^1J",[["^1?","~$p__47265","^?B"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4142,"^>5",["^Q",["^>@","^>A","^CF","^>I"]],"^9",4142,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?",["^ ","^@H",["^?@"],"^1O","^A2"],"^?B"]]]]]],"~$check-duplicate-aliases",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3044,"^8",8,"^9",3044,"^:",31,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?H","^?I"]]]]]],"^>9",true,"^U","^;L","^6","cljs/analyzer.cljc","^:",31,"^>1",["^1J",[["^1?","^?H","^?I"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3044,"^>5","^>I","^9",3044,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^?H","^?I"]]]]]],"~$confirm-ns",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",855,"^8",7,"^9",855,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^DD"]]]]],"^?1","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"^U","^:C","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^1?","^DD"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",855,"^>5","^>I","^9",855,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^DD"]]]]],"^?1","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"~$default-namespaces",["^ ","^U","^:H","^6","cljs/analyzer.cljc","^7",548,"^8",1,"^9",548,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",548,"^8",6,"^9",548,"^:",24],"^=[","^>H"],"~$earmuffed?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1802,"^8",8,"^9",1802,"^:",18,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"^>9",true,"^U","^6W","^6","cljs/analyzer.cljc","^:",18,"^>1",["^1J",[["^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1802,"^>5","^>0","^9",1802,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>M"]]]]]],"~$accumulating-warning-handler",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",693,"^8",8,"^9",693,"^:",36,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^?3"]]]]]],"^>9",true,"^U","^:I","^6","cljs/analyzer.cljc","^:",36,"^>1",["^1J",[["^?3"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",693,"^>5","^BG","^9",693,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?3"]]]]]],"~$canonicalize-specs",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2960,"^8",7,"^9",2960,"^:",25,"^=Y",["^1J",["^=Z",["^1J",[["^C["]]]]]],"^U","^:J","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^C["]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",2960,"^9",2960,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^C["]]]]]],"~$build-method-call",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3337,"^8",8,"^9",3337,"^:",25,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^?6","~$meth","^?0"]]]]],"^?1","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"^>9",true,"^U","^9>","^6","cljs/analyzer.cljc","^:",25,"^>1",["^1J",[["^?6","^G2","^?0"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3337,"^>5","^>H","^9",3337,"^>6",3,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?6","^G2","^?0"]]]]],"^?1","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"~$confirm-var-exists-throw",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",835,"^8",7,"^9",835,"^:",31,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"^U","^9D","^6","cljs/analyzer.cljc","^:",31,"^>1",["^1J",[[]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",835,"^>5","^BG","^9",835,"^>6",0,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[[]]]]]],"~$js-module-exists?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",791,"^8",7,"^9",791,"^:",24,"^=Y",["^1J",["^=Z",["^1J",[["^?S"]]]]]],"^U","^9C","^6","cljs/analyzer.cljc","^:",24,"^>1",["^1J",[["^?S"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",791,"^>5","^>A","^9",791,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^?S"]]]]]],"~$analyze-form",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4179,"^8",10,"^9",4179,"^:",22,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^?A","^?B"]]]]]],"^U","^:M","^6","cljs/analyzer.cljc","^:",22,"^>1",["^1J",[["^1?","^>T","^?A","^?B"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",4,"^>4",false,"^7",4179,"^>5",["^Q",["^>@","^>A","^>H","^>I"]],"^9",4179,"^>6",4,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>T","^?A","^?B"]]]]]],"~$var-ast",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1485,"^8",7,"^9",1485,"^:",14,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]]],"^U","^9L","^6","cljs/analyzer.cljc","^:",14,"^>1",["^1J",[["^1?","^>M"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1485,"^9",1485,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^>M"]]]]]],"~$add-consts",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4234,"^8",7,"^9",4234,"^:",17,"^=Y",["^1J",["^=Z",["^1J",[["~$compiler-state","~$constants-map"]]]]],"^?1","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"^U","^:V","^6","cljs/analyzer.cljc","^:",17,"^>1",["^1J",[["^G8","^G9"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",4234,"^>5",["^Q",[null,"^>A"]],"^9",4234,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^G8","^G9"]]]]],"^?1","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"~$error",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",715,"^8",7,"^9",715,"^:",12,"^=Y",["^1J",["^=Z",["^1J",[["^1?","^B4"],["^1?","^B4","~$cause"]]]]],"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^B4"],["^1?","^B4","^G;"]],"^=Y",["^1J",[["^1?","^B4"],["^1?","^B4","^G;"]]],"^>3",["^1J",[null,null]]]],"^U","^:W","^6","cljs/analyzer.cljc","^:",12,"^>E",["^ ","^>4",false,"^>F",3,"^>6",3,"^>1",[["^1?","^B4"],["^1?","^B4","^G;"]],"^=Y",["^1J",[["^1?","^B4"],["^1?","^B4","^G;"]]],"^>3",["^1J",[null,null]]],"^>1",[["^1?","^B4"],["^1?","^B4","^G;"]],"^>2",null,"^>F",3,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^>G",[["^ ","^>F",2,"^>4",false,"^=[","^>A"],["^ ","^>F",3,"^>4",false,"^=[","^B6"]],"^7",715,"^9",715,"^>6",3,"^>7",true,"^=Y",["^1J",[["^1?","^B4"],["^1?","^B4","^G;"]]]],"~$record-tag?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3611,"^8",8,"^9",3611,"^:",19,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^>?"]]]]]],"^>9",true,"^U","^:T","^6","cljs/analyzer.cljc","^:",19,"^>1",["^1J",[["^>?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",3611,"^>5","^>0","^9",3611,"^>6",1,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^>?"]]]]]],"~$invokeable-ns?",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1110,"^8",7,"^9",1110,"^:",21,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^1?"]]]]],"^?1","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"^U","^:U","^6","cljs/analyzer.cljc","^:",21,"^>1",["^1J",[["^1K","^1?"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",1,"^>4",false,"^7",1110,"^>5",["^Q",["^>0","^>A"]],"^9",1110,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^1K","^1?"]]]]],"^?1","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"~$*cljs-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",53,"^8",16,"^9",53,"^:",25,"^?F",true],"^U","^;4","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^?F",true,"^7",53,"^9",53,"^=[","^>A"],"~$check-macro-arity",["^ ","^=X",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3863,"^8",11,"^9",3863,"^:",28,"^>9",true,"^=Y",["^1J",["^=Z",["^1J",[["^CM","^>T"]]]]]],"^>9",true,"^U","^7?","^6","cljs/analyzer.cljc","^:",28,"^>1",["^1J",[["^CM","^>T"]]],"^>2",null,"^>3",["^1J",[null,null]],"^8",4,"^>4",false,"^7",3863,"^>5","^>I","^9",3863,"^>6",2,"^>7",true,"^=Y",["^1J",["^=Z",["^1J",[["^CM","^>T"]]]]]]],"^1G",["^ ","^H","^H","^O","^O","^1:","^1:","^1B","^1B","^1C","^1B"],"~:cljs.analyzer/constants",["^ ","^1E",["^Q",["~$cljs.core/array?","~:args","~$cljs.core/IRecord","~:invoke-ctor","~$&","~$seq","~:ns*","^3","~$console","^4","~$case*","~:extending-base-js-type","~:case-then","~$Window","~:cljs.analyzer/namespaces","~:tags","~:unsupported-preprocess-value","~$defrecord*","~:argc","~:finally","~:statement","~$cljs.spec.alpha$macros","~$js/Function","~$cljs.core/boolean?","~:suffix","^2L","~$cljs.core/PersistentHashMap","~:deftype","~$try","~$checked-aget'","~:fns","~$Object","~:defined","~:ret","^2R","~$cljs.core/checked-aset'","~:redef","~:fexpr","~:existing","~:children","~:fdef-ns","^1M","~$js/RegExp","~$cljs.core/when","^2Z","~:ctor","~$aget","~:recurs","~$cljs.core/implements?","~:body?","^1","~:fname","^>@","^>0","~:js-shadowed-by-local","^?9","~$cljs.core/simple-symbol?","~$location","~:let","^=X","~$cljs.core/Reduced","^AC","~$cljs.core/qualified-symbol?","~:unsupported-js-module-type","^C:","~:goog","~:only","~:invalid-protocol-symbol","~:done","~:group","^5","~:ev","~$cljs.core$macros","~:host-field","~:frame","~$cljs.core/IList","~$Symbol","~:valid?","~:externs","~$cljs.core/checked-aget'","~:fn-scope","~:do","~:private-var-access","~$String","~$registry-ref","~:macros-ns","~:macro-syntax-check","~$cljs.core/var?","~:pmasks","~:init","~:cljs.analyzer/property","~:numeric","^>9","~:exprs","~:else","~:protocol-duped-method","~:protocol-symbol","~:cblocks","~:clojure.error/phase","^>A","~$floats","~:protocol","~:cljs.analyzer/symbol","~$*warn-on-infer*","~:cljs.analyzer/externs","~$ns*","~$checked-aset'","~:if","~:fn-method","~$escape","~:global","~$cljs.core/Volatile","^F","^P","~:macros","~:locals","~:tests","~:js-globals","~:return","~$finally","^4G","~:method","~:use","~:segs","~$Function","~:default","~:repl-env","^BD","^12","~:cljs.analyzer/call","~:new","~$loop*","~:property","~:case-test","^A6","~$cljs.core/map-entry?","^X","~:bindings","~:warn","~:global-exports","~:def-emits-var","^U","~:munged-namespace","~:binding-form?","~$cljs.core/double?","^1O","~$&form","~$cljs.core/Object","^4W","~$Array","^4[","~$*unchecked-arrays*","~:flag","~:loop-lets","~$cljs.core/qualified-ident?","~:clojure.error/symbol","~:unchecked","~$cljs.core.constants","^1:","~$cljs.core/qualified-keyword?","^6","~:fields","~:spec-skip-macros","~:extend-type","~$js","^?=","~:undeclared-macros-ns","~$long","~:optimizations","~$double","^:","~:single-segment-namespace","~$cljs.core/Var","~$__hash","~:start","~$screen","~:inferred-ret-tag","~:fn-arity","^>E","~$cljs.core/Inst","^1F","~:params","~:warning-type","~:macro-present?","^1;","~:dblock","~:js-module-index","~:fn-self-name","~:nodejs","~$js/Boolean","~:val","~:advanced","~$longs","~:compile-syntax-check","~:recur","~:field","~:with-meta","^BE","~$.-cljs$lang$test","^<2","~$js/String","~$do","~$__meta","~:const-expr","~$-speced-vars","~:state","^>1","~:rename","~$number","~$objects","~:vals","~:js-dependency-index","~:ns-name","^>2","^>F","^W","~:current-symbol","^1X","~:js-provide","~:env","~:cljs.analyzer/type","~:letfn","~:node","~:infer-warning","~:vector","~:variadic-max-arity","~$cljs.core/inst?","~$letfn*","~:export","~:cljs.analyzer/analyzed","~:protocol-with-variadic-method","~$if","^>3","^Y","~:cljs.analyzer/protocol-inline","~$global","~:cljs.analyzer/constant-table","^?I","~:fn-deprecated","~$cljs.core/float?","^1K","^B5","~:literal?","~:sym","^A5","~:no-op","~:catches","~:prefix","^8","~$unquote","~:types","~:cljs.analyzer/protocol-impl","~:loop","~:dot-action","~:undeclared-var","~$cljs.core/true?","~:internal-ctor","~:module-type","~:case-node","^75","~:root-source-info","~$cljs.core/let","~$process","~:nodejs-rt","~:declared-arglists-mismatch","~:cljs.analyzer/expr","~:include-macros","~$cljs.core/checked-aget","^7>","~:clojure.error/column","^Z","~:preamble-missing","~:clojure.error/line","~$cljs.core/volatile?","~:binding","~$cljs.core/ns-special-form","~$require","~$cljs.core/cond","^>4","~:unsynchronized-mutable","~$cljs.core/integer?","~:const","~:js-fn-var","~:cljs.analyzer/access","^@H","~$deftype*","~$let*","~$js/Array","~$cljs.core/infinite?","~:set!","^>G","~$js*","~$cljs.core/undefined?","~$cljs.core/ISeqable","~:undeclared-protocol-symbol","~$alert","~:build-options","~:protocol-with-overwriting-method","~:nodes","~:cljs.spec/speced-vars","^1E","~:js-array","^?F","~:clojure.error/source","^7","~:expr","~$Boolean","~:arg","~:list","~:var","~$history","~$fn*","~:cljs/analysis-error","~:protocol-info","~:quote","~$recur","~:macro","~$cljs.core/IMapEntry","~:invalid-array-access","~:unprovided","~:deprecation-nowarn","~$Math","~:ns-var-clash","~$cljs.core/uuid?","~:deprecated","^1H","~:case","~:undeclared-ns","^86","~:class","~:preprocess","~:catch","~:arg-id","~:recur-frames","~$window","^BF","~$array","^=V","~$cljs.core/reduced?","~$cljs.core/tagged-literal?","~$cljs.core/nil?","~:cljs.spec/registry-ref","^1@","~:non-dynamic-earmuffed-var","~:quoted?","~:declared","~$cljs.core/zero?","~$cljs.core/false?","~:cljs.analyzer/not-found","~:defrecord","~:lib","^?S","^8M","~:info","~:protocol-prop","~:code","~$cljs.core/simple-ident?","^>5","~:cljs.analyzer/error","^BG","~:then","~:js-object","~:def-var","^9","~:cljs.analyzer/no-resolve","~:js-op","~$exports","~:var-ast","~:context","~$Number","~:invoke","~:throw","~:reload","~:undeclared-ns-form","~$doubles","~:order","~:no-such-method","^1L","~:error","~$document","~$checked-aset","~:def","^A=","~:reload-all","^1G","~:exception","^>6","~:t","~:options","~$set!","^1I","~:missing","^=[","~:invalid-arithmetic","^1[","~:protocol-deprecated","~:target","~$cljs.repl","~$.","~$cljs.core/simple-keyword?","^>Y","~:mutable","~:reloads","~$cljs.core/ITaggedLiteral","~$cljs.core/seqable?","~$aset","^=Z","^G@","~:try","^9Z","^9[","~:set","~:items","~:in-loop","~$prototype","~$chars","^>7","~:js-var","^=Y","~:protocol-impl-recur-with-target","~:volatile-mutable","~:import","~$macroexpand-check","~$ints","~$cljs.core/and","~:impls","~:hierarchy","~$catch","~:shadow","~$js/Object","~:body","~:host-call","~:ns-sym","~:macroexpansion","^?1","^A","~:overload-arity","~:speced-vars","~:local","~:closure-lib","~:cljs.analyzer/numeric","^;[","^:P","~$cljs.core/IChunkedSeq","~:protocol-multiple-impls","~$navigator","~:jsdoc","~$js/Number","~$cljs.core/ISequential","~$cljs.core/delay?","~:redef-in-file","~:clj","~$constructor","~:protocol-invalid-method","~:invalid-arity","~$cljs.core/regexp?","^1Z","~:extend-type-invalid-method-shape","~:the-var","~:suggested-symbol","~:map","~$cljs.core/IUUID","~$__extmap","~:cljs.analyzer/list","~:object","~:test","~:foreign","~:multiple-variadic-overloads","~:warn-type","~$checked-aget","~$shorts","~$*unchecked-if*","~$throw","~:forms","~:fblock","^>H","~:dep-path","^>I","~:registry-ref","~$cljs.core/instance?","^1R","~$cljs.core/checked-aset","^1N","~:statements","~:goog-define","~$def","~:compilation","~$cljs.core/ident?","~:refer-macros","~$cljs.user","^;P","~$unescape","~:protocol-impl-with-variadic-method","~$bytes~$&","^GH","^GO","^GY","^IA","^IV","^K5","^KJ","^KN","^?I","^1K","^LL","^LM","^LQ","^M6","^M:","^NI","~~:t~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^;U",[["^PG","~:static-fns"],true,["^PG","~:shadow-tweaks"],null,["^PG","~:source-map-inline"],null,["^PG","~:elide-asserts"],false,["^PG","~:optimize-constants"],null,["^PG","^1W"],null,["^PG","~:external-config"],null,["^PG","~:tooling-config"],null,["^PG","~:emit-constants"],null,["^PG","~:load-tests"],null,["^PG","~:form-size-threshold"],null,["^PG","~:data-readers"],null,["^PG","~:infer-externs"],"~:auto",["^PG","^1Y"],null,["~:js-options","~:js-provider"],"^O9",["~:mode"],"~:dev",["^PG","~:fn-invoke-direct"],null,["^PG","~:source-map"],"/dev/null"]]]