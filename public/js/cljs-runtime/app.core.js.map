{"version":3,"sources":["app/core.cljs"],"mappings":";AAcA,GAAA,QAAAA,gCAAAC,qCAAAC;AAAA;AAAA,AAAA,AAASC,iBAAM,gDAAA,hDAACC;;AAEhB,wBAAA,xBAAMC;AAAN,AAAA,0FAAA,kEAAA,mFAAA,wDAAA,mFAAA,gDAAA,mFAAA,gDAAA,2CAAA,yMAAA,4BAAA,mFAAA,gDAAA,mFAAA,gDAAA,2CAAA,gMAAA,wBAAA,mFAAA,gDAAA,mFAAA,gDAAA,2CAAA,gMAAA,wBAAA,mFAAA,gDAAA,mFAAA,gDAAA,2CAAA,sSAAA,yBAAA,mFAAA,gDAAA,mFAAA,gDAAA,2CAAA,kZAAA,r/EAGoB,wDAAA,xDAACC,shBACD,wDAAA,xDAACA,ygBACD,wDAAA,xDAACA,ygBACD,wDAAA,uEAAA,2CAAA,kDAAA,5NAACA,gnBACD,wDAAA,uEAAA,2CAAA,kDAAA,YAAA,2CAAA,mDAAA,tUAACA,8XAClB,kBAAA,AAAAC,iCAAA,jBAAOJ,iBACL,iBAAMK,OAAK,AAAA,mFAAO,AAAA,mFAAA,AAAAD,gBAAQJ;AAA1B,AAAA,+FAAA,AAAAI,LACGC,qBAAML;KAFX;;AAMH;;;kBAAA,lBAAuBM;AAAvB,AAGE,AAACC,iCACA,uEAAA,2CAAA,qDAAA,2CAAA,lNAACC,qDAAUC,yNAAyBC,+CACpC,WAAKC;AAAL,AAAQ,OAACC,sBAAOZ,eAAMW;GAFvB,2CAAA,sEAAA;;AAIA,wDAAA,jDAACE,oIAAaX,8BACD,wBAAA,xBAAiBY;;AAGhC,gBAAA,hBAAMC;AAAN,AACE,YAAA,ZAACC;;AACD,OAACV","names":["js/app","js/app.core","js/app.core.match","app.core/match","reagent.core.atom","app.core/current-page","reitit.frontend.easy.href","cljs.core/deref","view","app.core/render","reitit.frontend.easy/start!","reitit.frontend.router","app.routes/routes","reitit.coercion.spec/coercion","m","cljs.core/reset!","reagent.dom.render","js/document","app.core/main","js/console.log"],"sourcesContent":["(ns app.core\n  (:require [reagent.dom :as rdom]\n            [reagent.core :as r]\n            [reitit.frontend :as rf]\n            [reitit.frontend.easy :as rfe]\n            [reitit.coercion.spec :as rss]\n            [fipp.edn :as fedn]\n\n            [app.routes :refer [routes]]))\n\n;; (def carousel (r/adapt-react-class Carousel))\n\n\n\n(defonce match (r/atom nil))\n\n(defn current-page []\n  [:div.navbar\n   [:ul.nav\n    [:li [:a {:href (rfe/href :app.routes/frontpage)} \"Frontpage\"]]\n    [:li [:a {:href (rfe/href :app.routes/about)} \"About\"]]\n    [:li [:a {:href (rfe/href :app.routes/clock)} \"Clock\"]]\n    [:li [:a {:href (rfe/href :app.routes/item {:id 1})} \"Item 1\"]]\n    [:li [:a {:href (rfe/href :app.routes/item {:id 2} {:foo \"bar\"})} \"Item 2\"]]]\n   (when @match\n     (let [view (:view (:data @match))]\n       [view @match]))\n  ;;  [:pre (with-out-str (fedn/pprint @match))]\n   ])\n\n(defn ^:dev/after-load render\n  \"Render the toplevel component for this app.\"\n  []\n  (rfe/start!\n   (rf/router routes {:data {:coercion rss/coercion}})\n   (fn [m] (reset! match m))\n   {:use-fragment true})\n  (rdom/render [current-page]\n               (.getElementById js/document \"app\")))\n\n\n(defn main []\n  (js/console.log \"MAIN FN Reloaded\")\n  (render))"]}